{
  "Delta.Slang.dll": {
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Compilation.cs": {
      "Delta.Slang.Compilation": {
        "Delta.Slang.Syntax.ParseTree Delta.Slang.Compilation::get_ParseTree()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Compilation::EmitTree(System.IO.TextWriter)": {
          "Lines": {
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "32": 0
          },
          "Branches": [
            {
              "Line": 21,
              "Offset": 31,
              "EndOffset": 33,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 70,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 70,
              "EndOffset": 72,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 31,
              "EndOffset": 86,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 101,
              "EndOffset": 103,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 145,
              "EndOffset": 120,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 145,
              "EndOffset": 147,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 101,
              "EndOffset": 163,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Compilation::.ctor(Delta.Slang.Syntax.ParseTree)": {
          "Lines": {
            "12": 0
          },
          "Branches": [
            {
              "Line": 12,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 10,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Diagnostic.cs": {
      "Delta.Slang.Diagnostic": {
        "Delta.Slang.DiagnosticSeverity Delta.Slang.Diagnostic::get_Severity()": {
          "Lines": {
            "35": 0
          },
          "Branches": []
        },
        "System.String Delta.Slang.Diagnostic::get_Emitter()": {
          "Lines": {
            "36": 0
          },
          "Branches": []
        },
        "Delta.Slang.Text.LinePosition Delta.Slang.Diagnostic::get_Position()": {
          "Lines": {
            "37": 0
          },
          "Branches": []
        },
        "Delta.Slang.Text.TextSpan Delta.Slang.Diagnostic::get_Span()": {
          "Lines": {
            "38": 0
          },
          "Branches": []
        },
        "System.String Delta.Slang.Diagnostic::get_Message()": {
          "Lines": {
            "39": 0
          },
          "Branches": []
        },
        "System.String Delta.Slang.Diagnostic::ToString()": {
          "Lines": {
            "42": 0,
            "44": 0,
            "45": 0
          },
          "Branches": []
        },
        "System.String Delta.Slang.Diagnostic::<ToString>g__w|16_0(Delta.Slang.Text.LinePosition)": {
          "Lines": {
            "43": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Diagnostic::.ctor(Delta.Slang.DiagnosticSeverity,System.String,Delta.Slang.Text.LinePosition,Delta.Slang.Text.TextSpan,System.String)": {
          "Lines": {
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 0
          },
          "Branches": [
            {
              "Line": 29,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 18,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 50,
              "EndOffset": 52,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 50,
              "EndOffset": 58,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.LexerDiagnostic": {
        "System.Void Delta.Slang.LexerDiagnostic::.ctor(Delta.Slang.DiagnosticSeverity,Delta.Slang.Text.LinePosition,Delta.Slang.Text.TextSpan,System.String)": {
          "Lines": {
            "50": 0
          },
          "Branches": []
        }
      },
      "Delta.Slang.ParserDiagnostic": {
        "System.Void Delta.Slang.ParserDiagnostic::.ctor(Delta.Slang.DiagnosticSeverity,Delta.Slang.Text.LinePosition,Delta.Slang.Text.TextSpan,System.String)": {
          "Lines": {
            "55": 0
          },
          "Branches": []
        }
      },
      "Delta.Slang.BinderDiagnostic": {
        "System.Void Delta.Slang.BinderDiagnostic::.ctor(Delta.Slang.DiagnosticSeverity,Delta.Slang.Text.LinePosition,Delta.Slang.Text.TextSpan,System.String)": {
          "Lines": {
            "60": 0
          },
          "Branches": []
        }
      },
      "Delta.Slang.LexerError": {
        "System.Void Delta.Slang.LexerError::.ctor(Delta.Slang.Text.LinePosition,Delta.Slang.Text.TextSpan,System.String)": {
          "Lines": {
            "65": 0
          },
          "Branches": []
        }
      },
      "Delta.Slang.ParserError": {
        "System.Void Delta.Slang.ParserError::.ctor(Delta.Slang.Text.LinePosition,Delta.Slang.Text.TextSpan,System.String)": {
          "Lines": {
            "70": 0
          },
          "Branches": []
        }
      },
      "Delta.Slang.BinderError": {
        "System.Void Delta.Slang.BinderError::.ctor(Delta.Slang.Text.LinePosition,Delta.Slang.Text.TextSpan,System.String)": {
          "Lines": {
            "75": 0
          },
          "Branches": []
        }
      },
      "Delta.Slang.DiagnosticCollection": {
        "System.Collections.Generic.IEnumerator`1<Delta.Slang.IDiagnostic> Delta.Slang.DiagnosticCollection::GetEnumerator()": {
          "Lines": {
            "82": 9
          },
          "Branches": []
        },
        "System.Collections.IEnumerator Delta.Slang.DiagnosticCollection::System.Collections.IEnumerable.GetEnumerator()": {
          "Lines": {
            "83": 3
          },
          "Branches": []
        },
        "Delta.Slang.DiagnosticCollection Delta.Slang.DiagnosticCollection::AddRange(System.Collections.Generic.IEnumerable`1<Delta.Slang.IDiagnostic>)": {
          "Lines": {
            "86": 6,
            "87": 6,
            "88": 6,
            "89": 6
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportLexerException(System.Exception)": {
          "Lines": {
            "91": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportInvalidCharacter(Delta.Slang.Text.LinePosition,Delta.Slang.Text.TextSpan,System.Char)": {
          "Lines": {
            "93": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportInvalidNumber(Delta.Slang.Text.LinePosition,Delta.Slang.Text.TextSpan,System.String)": {
          "Lines": {
            "95": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportParserException(System.Exception)": {
          "Lines": {
            "97": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportUnexpectedToken(Delta.Slang.Text.LinePosition,Delta.Slang.Text.TextSpan,Delta.Slang.Syntax.TokenKind,Delta.Slang.Syntax.TokenKind)": {
          "Lines": {
            "99": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportInvalidVariableDeclaration(Delta.Slang.Text.LinePosition,Delta.Slang.Text.TextSpan,Delta.Slang.Syntax.Token,System.String)": {
          "Lines": {
            "101": 0
          },
          "Branches": [
            {
              "Line": 101,
              "Offset": 39,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 101,
              "Offset": 39,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportBinderException(System.Exception)": {
          "Lines": {
            "103": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportExpressionMustHaveValue(Delta.Slang.Syntax.Token)": {
          "Lines": {
            "105": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportParameterAlreadyDeclared(Delta.Slang.Syntax.Token,System.String)": {
          "Lines": {
            "107": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportSymbolAlreadyDeclared(Delta.Slang.Syntax.Token,System.String,System.String)": {
          "Lines": {
            "109": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportUndefinedType(Delta.Slang.Syntax.Token,System.String)": {
          "Lines": {
            "111": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportUndefinedFunction(Delta.Slang.Syntax.Token,System.String)": {
          "Lines": {
            "113": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportWrongArgumentCount(Delta.Slang.Syntax.Token,System.String,System.Int32,System.Int32)": {
          "Lines": {
            "115": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportWrongArgumentType(Delta.Slang.Syntax.Token,System.String,System.String,Delta.Slang.Symbols.TypeSymbol,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "117": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportUndefinedVariable(Delta.Slang.Syntax.Token,System.String)": {
          "Lines": {
            "119": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportUndefinedLabel(Delta.Slang.Syntax.Token,System.String)": {
          "Lines": {
            "121": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportInvalidAssignmentToReadOnlyVariable(Delta.Slang.Syntax.Token,System.String)": {
          "Lines": {
            "123": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportImpossibleConversion(Delta.Slang.Syntax.Token,Delta.Slang.Symbols.TypeSymbol,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "125": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportImpossibleImplicitConversion(Delta.Slang.Syntax.Token,Delta.Slang.Symbols.TypeSymbol,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "127": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportUndefinedUnaryOperator(Delta.Slang.Syntax.Token,System.String,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "129": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportUndefinedBinaryOperator(Delta.Slang.Syntax.Token,System.String,Delta.Slang.Symbols.TypeSymbol,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "131": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportInvalidLabelDeclaration(Delta.Slang.Syntax.Token,System.String)": {
          "Lines": {
            "133": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportInvalidReturn(Delta.Slang.Syntax.Token)": {
          "Lines": {
            "135": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportInconsistentReturnType(Delta.Slang.Syntax.Token,Delta.Slang.Symbols.FunctionSymbol,Delta.Slang.Symbols.TypeSymbol,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "137": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportLexerError(Delta.Slang.Text.LinePosition,Delta.Slang.Text.TextSpan,System.String)": {
          "Lines": {
            "139": 0
          },
          "Branches": [
            {
              "Line": 139,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 139,
              "Offset": 10,
              "EndOffset": 18,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportParserError(Delta.Slang.Text.LinePosition,Delta.Slang.Text.TextSpan,System.String)": {
          "Lines": {
            "140": 0
          },
          "Branches": [
            {
              "Line": 140,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 140,
              "Offset": 10,
              "EndOffset": 18,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportBinderError(Delta.Slang.Syntax.Token,System.String)": {
          "Lines": {
            "141": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.DiagnosticCollection::ReportBinderError(Delta.Slang.Text.LinePosition,Delta.Slang.Text.TextSpan,System.String)": {
          "Lines": {
            "142": 0
          },
          "Branches": [
            {
              "Line": 142,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 142,
              "Offset": 10,
              "EndOffset": 18,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.DiagnosticCollection::.ctor()": {
          "Lines": {
            "80": 9
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Interpreter.cs": {
      "Delta.Slang.RunOptionsExtensions": {
        "System.Boolean Delta.Slang.RunOptionsExtensions::ShouldLex(Delta.Slang.InterpreterRunOptions)": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.RunOptionsExtensions::ShouldParse(Delta.Slang.InterpreterRunOptions)": {
          "Lines": {
            "25": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.RunOptionsExtensions::ShouldBind(Delta.Slang.InterpreterRunOptions)": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        }
      },
      "Delta.Slang.Interpreter": {
        "Delta.Slang.SourceText Delta.Slang.Interpreter::get_SourceText()": {
          "Lines": {
            "41": 0
          },
          "Branches": []
        },
        "Delta.Slang.Interpreter/Result Delta.Slang.Interpreter::Run(Delta.Slang.InterpreterRunOptions)": {
          "Lines": {
            "44": 0,
            "45": 0,
            "47": 0,
            "48": 0,
            "49": 0,
            "51": 0,
            "52": 0,
            "53": 0,
            "54": 0,
            "55": 0,
            "56": 0,
            "57": 0,
            "58": 0
          },
          "Branches": [
            {
              "Line": 47,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 47,
              "Offset": 13,
              "EndOffset": 18,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 48,
              "Offset": 32,
              "EndOffset": 34,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 48,
              "Offset": 32,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 49,
              "Offset": 52,
              "EndOffset": 54,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 49,
              "Offset": 52,
              "EndOffset": 57,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 49,
              "Offset": 55,
              "EndOffset": 57,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 49,
              "Offset": 55,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 51,
              "Offset": 80,
              "EndOffset": 82,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 51,
              "Offset": 80,
              "EndOffset": 89,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Syntax.Token[] Delta.Slang.Interpreter::Lex(Delta.Slang.DiagnosticCollection)": {
          "Lines": {
            "61": 0,
            "62": 0,
            "63": 0,
            "65": 0,
            "66": 0,
            "67": 0,
            "68": 0,
            "69": 0,
            "71": 0,
            "72": 0,
            "73": 0,
            "74": 0,
            "76": 0,
            "78": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.ParseTree Delta.Slang.Interpreter::Parse(Delta.Slang.Syntax.Token[],Delta.Slang.DiagnosticCollection)": {
          "Lines": {
            "81": 0,
            "83": 0,
            "84": 0,
            "85": 0,
            "86": 0,
            "87": 0,
            "89": 0,
            "90": 0,
            "91": 0,
            "92": 0,
            "94": 0,
            "95": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.BoundTree Delta.Slang.Interpreter::Bind(Delta.Slang.Syntax.ParseTree,Delta.Slang.DiagnosticCollection)": {
          "Lines": {
            "98": 0,
            "100": 0,
            "101": 0,
            "102": 0,
            "103": 0,
            "105": 0,
            "106": 0,
            "107": 0,
            "108": 0,
            "110": 0,
            "111": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Interpreter::.ctor(Delta.Slang.SourceText)": {
          "Lines": {
            "39": 0
          },
          "Branches": [
            {
              "Line": 39,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 39,
              "Offset": 10,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Interpreter/Result": {
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Syntax.Token> Delta.Slang.Interpreter/Result::get_Tokens()": {
          "Lines": {
            "33": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.ParseTree Delta.Slang.Interpreter/Result::get_ParseTree()": {
          "Lines": {
            "34": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.BoundTree Delta.Slang.Interpreter/Result::get_BoundTree()": {
          "Lines": {
            "35": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.IDiagnostic> Delta.Slang.Interpreter/Result::get_Diagnostics()": {
          "Lines": {
            "36": 0
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Utils\\BoundNodePrinter.cs": {
      "Delta.Slang.Utils.BoundNodePrinter": {
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteTo(Delta.Slang.Semantic.BoundTreeNode,System.IO.TextWriter)": {
          "Lines": {
            "14": 0,
            "15": 0,
            "16": 0,
            "18": 0,
            "19": 0
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 14,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteTo(Delta.Slang.Semantic.BoundTreeNode,System.CodeDom.Compiler.IndentedTextWriter)": {
          "Lines": {
            "22": 0,
            "23": 0,
            "26": 0,
            "27": 0,
            "29": 0,
            "30": 0,
            "32": 0,
            "33": 0,
            "35": 0,
            "36": 0,
            "38": 0,
            "39": 0,
            "41": 0,
            "42": 0,
            "44": 0,
            "45": 0,
            "47": 0,
            "48": 0,
            "50": 0,
            "51": 0,
            "53": 0,
            "54": 0,
            "56": 0,
            "57": 0,
            "59": 0,
            "60": 0,
            "62": 0,
            "63": 0,
            "65": 0,
            "66": 0,
            "68": 0,
            "69": 0,
            "71": 0,
            "72": 0,
            "74": 0,
            "75": 0,
            "76": 0,
            "78": 0,
            "79": 0,
            "81": 0
          },
          "Branches": [
            {
              "Line": 23,
              "Offset": 17,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 31,
              "EndOffset": 36,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 45,
              "EndOffset": 50,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 59,
              "EndOffset": 64,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 75,
              "EndOffset": 80,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 91,
              "EndOffset": 96,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 107,
              "EndOffset": 112,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 123,
              "EndOffset": 128,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 139,
              "EndOffset": 144,
              "Path": 0,
              "Ordinal": 16,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 155,
              "EndOffset": 160,
              "Path": 0,
              "Ordinal": 18,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 171,
              "EndOffset": 176,
              "Path": 0,
              "Ordinal": 20,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 187,
              "EndOffset": 192,
              "Path": 0,
              "Ordinal": 22,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 203,
              "EndOffset": 208,
              "Path": 0,
              "Ordinal": 24,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 219,
              "EndOffset": 224,
              "Path": 0,
              "Ordinal": 26,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 235,
              "EndOffset": 240,
              "Path": 0,
              "Ordinal": 28,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 251,
              "EndOffset": 256,
              "Path": 0,
              "Ordinal": 30,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 17,
              "EndOffset": 275,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 31,
              "EndOffset": 290,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 45,
              "EndOffset": 305,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 59,
              "EndOffset": 320,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 75,
              "EndOffset": 335,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 91,
              "EndOffset": 351,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 107,
              "EndOffset": 367,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 123,
              "EndOffset": 383,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 139,
              "EndOffset": 399,
              "Path": 1,
              "Ordinal": 17,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 155,
              "EndOffset": 412,
              "Path": 1,
              "Ordinal": 19,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 171,
              "EndOffset": 425,
              "Path": 1,
              "Ordinal": 21,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 187,
              "EndOffset": 438,
              "Path": 1,
              "Ordinal": 23,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 203,
              "EndOffset": 451,
              "Path": 1,
              "Ordinal": 25,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 219,
              "EndOffset": 464,
              "Path": 1,
              "Ordinal": 27,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 235,
              "EndOffset": 477,
              "Path": 1,
              "Ordinal": 29,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 251,
              "EndOffset": 490,
              "Path": 1,
              "Ordinal": 31,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 263,
              "EndOffset": 501,
              "Path": 1,
              "Ordinal": 33,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 263,
              "EndOffset": 522,
              "Path": 0,
              "Ordinal": 32,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteInvalidExpression(Delta.Slang.Semantic.InvalidExpression,System.CodeDom.Compiler.IndentedTextWriter)": {
          "Lines": {
            "84": 0,
            "85": 0,
            "86": 0,
            "88": 0,
            "89": 0,
            "90": 0,
            "91": 0,
            "92": 0,
            "93": 0
          },
          "Branches": [
            {
              "Line": 85,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 85,
              "Offset": 12,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteReturnStatement(Delta.Slang.Semantic.ReturnStatement,System.CodeDom.Compiler.IndentedTextWriter)": {
          "Lines": {
            "96": 0,
            "97": 0,
            "98": 0,
            "99": 0,
            "100": 0,
            "101": 0,
            "102": 0,
            "103": 0,
            "104": 0,
            "105": 0
          },
          "Branches": [
            {
              "Line": 98,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 98,
              "Offset": 21,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteGotoStatement(Delta.Slang.Semantic.GotoStatement,System.CodeDom.Compiler.IndentedTextWriter)": {
          "Lines": {
            "108": 0,
            "109": 0,
            "110": 0,
            "111": 0,
            "112": 0,
            "113": 0,
            "114": 0
          },
          "Branches": [
            {
              "Line": 111,
              "Offset": 25,
              "EndOffset": 27,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 111,
              "Offset": 25,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 111,
              "Offset": 37,
              "EndOffset": 39,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 111,
              "Offset": 37,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteLabelStatement(Delta.Slang.Semantic.LabelStatement,System.CodeDom.Compiler.IndentedTextWriter)": {
          "Lines": {
            "117": 0,
            "118": 0,
            "119": 0,
            "121": 0,
            "122": 0,
            "123": 0,
            "124": 0,
            "125": 0,
            "126": 0,
            "127": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteExpressionStatement(Delta.Slang.Semantic.ExpressionStatement,System.CodeDom.Compiler.IndentedTextWriter)": {
          "Lines": {
            "130": 0,
            "131": 0,
            "132": 0,
            "133": 0,
            "134": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteBlock(Delta.Slang.Semantic.Block,System.CodeDom.Compiler.IndentedTextWriter)": {
          "Lines": {
            "137": 0,
            "138": 0,
            "139": 0,
            "140": 0,
            "142": 0,
            "143": 0,
            "145": 0,
            "146": 0,
            "147": 0
          },
          "Branches": [
            {
              "Line": 142,
              "Offset": 70,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 142,
              "Offset": 70,
              "EndOffset": 72,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteVariableDeclaration(Delta.Slang.Semantic.VariableDeclaration,System.CodeDom.Compiler.IndentedTextWriter)": {
          "Lines": {
            "150": 0,
            "151": 0,
            "152": 0,
            "153": 0,
            "154": 0,
            "155": 0,
            "156": 0,
            "157": 0,
            "158": 0,
            "159": 0,
            "160": 0,
            "161": 0,
            "162": 0,
            "163": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteFunctionDefinition(Delta.Slang.Semantic.FunctionDefinition,System.CodeDom.Compiler.IndentedTextWriter)": {
          "Lines": {
            "166": 0,
            "167": 0,
            "168": 0,
            "169": 0,
            "170": 0,
            "171": 0,
            "173": 0,
            "174": 0,
            "175": 0,
            "176": 0,
            "178": 0,
            "179": 0,
            "180": 0,
            "181": 0,
            "183": 0,
            "184": 0,
            "185": 0,
            "186": 0,
            "188": 0,
            "189": 0,
            "190": 0,
            "191": 0,
            "192": 0,
            "193": 0,
            "194": 0,
            "195": 0
          },
          "Branches": [
            {
              "Line": 174,
              "Offset": 154,
              "EndOffset": 72,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 176,
              "Offset": 83,
              "EndOffset": 85,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 176,
              "Offset": 83,
              "EndOffset": 89,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 174,
              "Offset": 154,
              "EndOffset": 156,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteIfStatement(Delta.Slang.Semantic.IfStatement,System.CodeDom.Compiler.IndentedTextWriter)": {
          "Lines": {
            "198": 0,
            "199": 0,
            "200": 0,
            "201": 0,
            "202": 0,
            "203": 0,
            "205": 0,
            "206": 0,
            "207": 0,
            "209": 0,
            "210": 0,
            "211": 0,
            "212": 0,
            "214": 0,
            "216": 0,
            "217": 0,
            "219": 0,
            "220": 0,
            "221": 0,
            "222": 0,
            "225": 0,
            "226": 0,
            "228": 0,
            "229": 0,
            "230": 0,
            "232": 0,
            "233": 0,
            "234": 0,
            "235": 0,
            "236": 0,
            "238": 0,
            "240": 0,
            "241": 0,
            "244": 0,
            "245": 0,
            "246": 0
          },
          "Branches": [
            {
              "Line": 206,
              "Offset": 64,
              "EndOffset": 66,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 206,
              "Offset": 64,
              "EndOffset": 75,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 216,
              "Offset": 122,
              "EndOffset": 124,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 216,
              "Offset": 122,
              "EndOffset": 141,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 219,
              "Offset": 154,
              "EndOffset": 156,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 219,
              "Offset": 154,
              "EndOffset": 169,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 225,
              "Offset": 174,
              "EndOffset": 176,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 225,
              "Offset": 174,
              "EndOffset": 183,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 229,
              "Offset": 212,
              "EndOffset": 214,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 229,
              "Offset": 212,
              "EndOffset": 223,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 240,
              "Offset": 277,
              "EndOffset": 279,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 240,
              "Offset": 277,
              "EndOffset": 296,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteUnaryExpression(Delta.Slang.Semantic.UnaryExpression,System.CodeDom.Compiler.IndentedTextWriter)": {
          "Lines": {
            "249": 0,
            "250": 0,
            "252": 0,
            "253": 0,
            "254": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteBinaryExpression(Delta.Slang.Semantic.BinaryExpression,System.CodeDom.Compiler.IndentedTextWriter)": {
          "Lines": {
            "257": 0,
            "258": 0,
            "260": 0,
            "261": 0,
            "262": 0,
            "263": 0,
            "264": 0,
            "265": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteLiteralExpression(Delta.Slang.Semantic.LiteralExpression,System.CodeDom.Compiler.IndentedTextWriter)": {
          "Lines": {
            "268": 0,
            "269": 0,
            "270": 0,
            "271": 0,
            "272": 0,
            "273": 0,
            "274": 0,
            "275": 0,
            "276": 0,
            "277": 0,
            "278": 0,
            "279": 0,
            "280": 0,
            "281": 0,
            "282": 0,
            "283": 0,
            "284": 0,
            "285": 0
          },
          "Branches": [
            {
              "Line": 269,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 269,
              "Offset": 14,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 269,
              "Offset": 29,
              "EndOffset": 31,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 270,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 270,
              "Offset": 33,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 269,
              "Offset": 29,
              "EndOffset": 52,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 271,
              "Offset": 65,
              "EndOffset": 67,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 271,
              "Offset": 65,
              "EndOffset": 77,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 271,
              "Offset": 82,
              "EndOffset": 84,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 271,
              "Offset": 82,
              "EndOffset": 103,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 273,
              "Offset": 116,
              "EndOffset": 118,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 273,
              "Offset": 116,
              "EndOffset": 129,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 273,
              "Offset": 134,
              "EndOffset": 136,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 273,
              "Offset": 134,
              "EndOffset": 160,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 275,
              "Offset": 182,
              "EndOffset": 184,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 275,
              "Offset": 182,
              "EndOffset": 210,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 0
            },
            {
              "Line": 277,
              "Offset": 227,
              "EndOffset": 229,
              "Path": 0,
              "Ordinal": 16,
              "Hits": 0
            },
            {
              "Line": 277,
              "Offset": 227,
              "EndOffset": 278,
              "Path": 1,
              "Ordinal": 17,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteConversionExpression(Delta.Slang.Semantic.ConversionExpression,System.CodeDom.Compiler.IndentedTextWriter)": {
          "Lines": {
            "288": 0,
            "289": 0,
            "290": 0,
            "291": 0,
            "292": 0,
            "293": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteInvokeExpression(Delta.Slang.Semantic.InvokeExpression,System.CodeDom.Compiler.IndentedTextWriter)": {
          "Lines": {
            "296": 0,
            "297": 0,
            "298": 0,
            "299": 0,
            "300": 0,
            "301": 0,
            "302": 0,
            "304": 0,
            "305": 0,
            "306": 0,
            "307": 0,
            "309": 0,
            "310": 0,
            "312": 0,
            "313": 0
          },
          "Branches": [
            {
              "Line": 300,
              "Offset": 94,
              "EndOffset": 44,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 302,
              "Offset": 55,
              "EndOffset": 57,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 302,
              "Offset": 55,
              "EndOffset": 61,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 300,
              "Offset": 94,
              "EndOffset": 96,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteVariableExpression(Delta.Slang.Semantic.VariableExpression,System.CodeDom.Compiler.IndentedTextWriter)": {
          "Lines": {
            "315": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteAssignmentExpression(Delta.Slang.Semantic.AssignmentExpression,System.CodeDom.Compiler.IndentedTextWriter)": {
          "Lines": {
            "318": 0,
            "319": 0,
            "320": 0,
            "321": 0,
            "322": 0,
            "323": 0,
            "324": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteNestedExpression(System.CodeDom.Compiler.IndentedTextWriter,System.Int32,Delta.Slang.Semantic.Expression)": {
          "Lines": {
            "327": 0,
            "328": 0,
            "329": 0,
            "330": 0,
            "331": 0,
            "333": 0,
            "334": 0
          },
          "Branches": [
            {
              "Line": 328,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 328,
              "Offset": 14,
              "EndOffset": 43,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 330,
              "Offset": 56,
              "EndOffset": 58,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 330,
              "Offset": 56,
              "EndOffset": 85,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.BoundNodePrinter::WriteNestedExpression(System.CodeDom.Compiler.IndentedTextWriter,System.Int32,System.Int32,Delta.Slang.Semantic.Expression)": {
          "Lines": {
            "337": 0,
            "338": 0,
            "339": 0,
            "340": 0,
            "341": 0,
            "342": 0
          },
          "Branches": [
            {
              "Line": 339,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 339,
              "Offset": 12,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 341,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 341,
              "Offset": 33,
              "EndOffset": 43,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Utils\\CultureUtils.cs": {
      "Delta.Slang.Utils.CultureUtils": {
        "System.IDisposable Delta.Slang.Utils.CultureUtils::InvariantCulture()": {
          "Lines": {
            "31": 0
          },
          "Branches": []
        }
      },
      "Delta.Slang.Utils.CultureUtils/TemporaryCulture": {
        "System.Void Delta.Slang.Utils.CultureUtils/TemporaryCulture::Dispose()": {
          "Lines": {
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.CultureUtils/TemporaryCulture::.ctor(System.Globalization.CultureInfo)": {
          "Lines": {
            "13": 0,
            "14": 0,
            "15": 0,
            "17": 0,
            "18": 0,
            "20": 0,
            "21": 0,
            "22": 0
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 14,
              "EndOffset": 27,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Utils\\Highlighter.cs": {
      "Delta.Slang.Utils.Highlighter": {
        "System.Void Delta.Slang.Utils.Highlighter::HighlightTokens(System.Collections.Generic.IEnumerable`1<Delta.Slang.Syntax.Token>,System.IO.TextWriter)": {
          "Lines": {
            "12": 0,
            "14": 0,
            "15": 0,
            "35": 0,
            "36": 0,
            "38": 0,
            "41": 0,
            "42": 0,
            "43": 0,
            "46": 0,
            "47": 0,
            "48": 0,
            "49": 0,
            "72": 0,
            "73": 0,
            "77": 0,
            "78": 0,
            "80": 0,
            "81": 0,
            "83": 0,
            "84": 0,
            "86": 0,
            "87": 0,
            "89": 0,
            "90": 0,
            "92": 0,
            "93": 0,
            "95": 0,
            "97": 0,
            "98": 0
          },
          "Branches": [
            {
              "Line": 35,
              "Offset": 532,
              "EndOffset": 84,
              "Path": 1,
              "Ordinal": 51,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 264,
              "Path": 2,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 285,
              "EndOffset": 287,
              "Path": 0,
              "Ordinal": 38,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 285,
              "EndOffset": 293,
              "Path": 1,
              "Ordinal": 39,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 306,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 3,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 4,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 5,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 6,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 7,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 8,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 9,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 10,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 11,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 12,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 13,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 14,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 15,
              "Ordinal": 15,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 16,
              "Ordinal": 16,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 17,
              "Ordinal": 17,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 18,
              "Ordinal": 18,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 19,
              "Ordinal": 19,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 20,
              "Ordinal": 20,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 21,
              "Ordinal": 21,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 22,
              "Ordinal": 22,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 349,
              "Path": 23,
              "Ordinal": 23,
              "Hits": 0
            },
            {
              "Line": 72,
              "Offset": 362,
              "EndOffset": 364,
              "Path": 0,
              "Ordinal": 40,
              "Hits": 0
            },
            {
              "Line": 72,
              "Offset": 362,
              "EndOffset": 370,
              "Path": 1,
              "Ordinal": 41,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 382,
              "Path": 25,
              "Ordinal": 25,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 382,
              "Path": 26,
              "Ordinal": 26,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 382,
              "Path": 27,
              "Ordinal": 27,
              "Hits": 0
            },
            {
              "Line": 77,
              "Offset": 395,
              "EndOffset": 397,
              "Path": 0,
              "Ordinal": 42,
              "Hits": 0
            },
            {
              "Line": 77,
              "Offset": 395,
              "EndOffset": 403,
              "Path": 1,
              "Ordinal": 43,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 412,
              "Path": 37,
              "Ordinal": 37,
              "Hits": 0
            },
            {
              "Line": 80,
              "Offset": 425,
              "EndOffset": 427,
              "Path": 0,
              "Ordinal": 44,
              "Hits": 0
            },
            {
              "Line": 80,
              "Offset": 425,
              "EndOffset": 433,
              "Path": 1,
              "Ordinal": 45,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 442,
              "Path": 24,
              "Ordinal": 24,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 455,
              "Path": 28,
              "Ordinal": 28,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 467,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 467,
              "Path": 29,
              "Ordinal": 29,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 467,
              "Path": 30,
              "Ordinal": 30,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 467,
              "Path": 31,
              "Ordinal": 31,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 467,
              "Path": 32,
              "Ordinal": 32,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 467,
              "Path": 33,
              "Ordinal": 33,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 467,
              "Path": 34,
              "Ordinal": 34,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 467,
              "Path": 35,
              "Ordinal": 35,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 106,
              "EndOffset": 467,
              "Path": 36,
              "Ordinal": 36,
              "Hits": 0
            },
            {
              "Line": 89,
              "Offset": 477,
              "EndOffset": 479,
              "Path": 0,
              "Ordinal": 46,
              "Hits": 0
            },
            {
              "Line": 90,
              "Offset": 492,
              "EndOffset": 494,
              "Path": 0,
              "Ordinal": 48,
              "Hits": 0
            },
            {
              "Line": 90,
              "Offset": 492,
              "EndOffset": 500,
              "Path": 1,
              "Ordinal": 49,
              "Hits": 0
            },
            {
              "Line": 89,
              "Offset": 477,
              "EndOffset": 510,
              "Path": 1,
              "Ordinal": 47,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 532,
              "EndOffset": 537,
              "Path": 0,
              "Ordinal": 50,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.Highlighter::<HighlightTokens>g__processMultiLineToken|0_0(Delta.Slang.Syntax.Token,System.ConsoleColor,Delta.Slang.Utils.Highlighter/<>c__DisplayClass0_0&)": {
          "Lines": {
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0,
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 0
          },
          "Branches": [
            {
              "Line": 21,
              "Offset": 223,
              "EndOffset": 66,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 77,
              "EndOffset": 79,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 77,
              "EndOffset": 83,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 223,
              "EndOffset": 228,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Utils\\Operators.cs": {
      "Delta.Slang.Utils.Operators": {
        "System.Int32 Delta.Slang.Utils.Operators::GetUnaryOperatorPrecedence(Delta.Slang.Syntax.TokenKind)": {
          "Lines": {
            "9": 4,
            "10": 4,
            "16": 0,
            "19": 4,
            "21": 4
          },
          "Branches": [
            {
              "Line": 10,
              "Offset": 9,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 4
            },
            {
              "Line": 10,
              "Offset": 9,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 10,
              "Offset": 16,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 10,
              "Offset": 16,
              "EndOffset": 25,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 4
            }
          ]
        },
        "System.Int32 Delta.Slang.Utils.Operators::GetBinaryOperatorPrecedence(Delta.Slang.Syntax.TokenKind)": {
          "Lines": {
            "24": 4,
            "25": 4,
            "29": 0,
            "33": 0,
            "41": 0,
            "53": 4,
            "55": 4
          },
          "Branches": [
            {
              "Line": 25,
              "Offset": 9,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 4
            },
            {
              "Line": 25,
              "Offset": 17,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 4
            },
            {
              "Line": 25,
              "Offset": 17,
              "EndOffset": 64,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 9,
              "EndOffset": 69,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 25,
              "EndOffset": 74,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 25,
              "EndOffset": 74,
              "Path": 2,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 25,
              "EndOffset": 74,
              "Path": 3,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 25,
              "EndOffset": 74,
              "Path": 4,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 25,
              "EndOffset": 74,
              "Path": 6,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 25,
              "EndOffset": 74,
              "Path": 8,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 25,
              "EndOffset": 79,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 4
            },
            {
              "Line": 25,
              "Offset": 25,
              "EndOffset": 79,
              "Path": 5,
              "Ordinal": 9,
              "Hits": 4
            },
            {
              "Line": 25,
              "Offset": 25,
              "EndOffset": 79,
              "Path": 7,
              "Ordinal": 11,
              "Hits": 4
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Utils\\TextWriterExtensions.cs": {
      "Delta.Slang.Utils.TextWriterExtensions": {
        "System.Void Delta.Slang.Utils.TextWriterExtensions::WriteIdentifier(System.IO.TextWriter,System.String)": {
          "Lines": {
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.TextWriterExtensions::WriteTypeIdentifier(System.IO.TextWriter,System.String)": {
          "Lines": {
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.TextWriterExtensions::WriteKeyword(System.IO.TextWriter,Delta.Slang.Syntax.TokenKind)": {
          "Lines": {
            "31": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.TextWriterExtensions::WriteKeyword(System.IO.TextWriter,System.String)": {
          "Lines": {
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "38": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.TextWriterExtensions::WriteNumber(System.IO.TextWriter,System.String)": {
          "Lines": {
            "41": 0,
            "42": 0,
            "43": 0,
            "44": 0,
            "45": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.TextWriterExtensions::WriteString(System.IO.TextWriter,System.String)": {
          "Lines": {
            "48": 0,
            "49": 0,
            "50": 0,
            "51": 0,
            "52": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.TextWriterExtensions::WritePunctuation(System.IO.TextWriter,Delta.Slang.Syntax.TokenKind)": {
          "Lines": {
            "54": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.TextWriterExtensions::WritePunctuation(System.IO.TextWriter,System.String)": {
          "Lines": {
            "57": 0,
            "58": 0,
            "59": 0,
            "60": 0,
            "61": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.TextWriterExtensions::WriteSpace(System.IO.TextWriter)": {
          "Lines": {
            "63": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.TextWriterExtensions::WriteInvalid(System.IO.TextWriter,System.String)": {
          "Lines": {
            "65": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.TextWriterExtensions::WriteInvalid(System.IO.TextWriter,System.String,System.ConsoleColor)": {
          "Lines": {
            "67": 0,
            "69": 0,
            "70": 0,
            "71": 0,
            "72": 0,
            "73": 0
          },
          "Branches": [
            {
              "Line": 70,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 12,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.TextWriterExtensions::WriteText(System.IO.TextWriter,System.String,System.ConsoleColor)": {
          "Lines": {
            "76": 0,
            "77": 0,
            "78": 0,
            "79": 0,
            "80": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Utils.TextWriterExtensions::IsConsoleOut(System.IO.TextWriter)": {
          "Lines": {
            "82": 0
          },
          "Branches": [
            {
              "Line": 82,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 82,
              "Offset": 16,
              "EndOffset": 18,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 82,
              "Offset": 16,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 82,
              "Offset": 6,
              "EndOffset": 34,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.TextWriterExtensions::SetBackground(System.IO.TextWriter,System.ConsoleColor)": {
          "Lines": {
            "85": 0,
            "86": 0,
            "87": 0
          },
          "Branches": [
            {
              "Line": 86,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 86,
              "Offset": 9,
              "EndOffset": 18,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.TextWriterExtensions::SetForeground(System.IO.TextWriter,System.ConsoleColor)": {
          "Lines": {
            "90": 0,
            "91": 0,
            "92": 0
          },
          "Branches": [
            {
              "Line": 91,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 91,
              "Offset": 9,
              "EndOffset": 18,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.TextWriterExtensions::ResetColor(System.IO.TextWriter)": {
          "Lines": {
            "95": 0,
            "96": 0,
            "97": 0
          },
          "Branches": [
            {
              "Line": 96,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 96,
              "Offset": 9,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Utils\\Unparser.cs": {
      "Delta.Slang.Utils.Unparser": {
        "Delta.Slang.Syntax.ParseTree Delta.Slang.Utils.Unparser::get_Tree()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.String Delta.Slang.Utils.Unparser::get_Tabs()": {
          "Lines": {
            "16": 0
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 7,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.Unparser::DumpTree(System.IO.TextWriter)": {
          "Lines": {
            "19": 0,
            "38": 0,
            "39": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.Unparser::Unparse(System.IO.TextWriter)": {
          "Lines": {
            "41": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.Unparser::Unparse(System.IO.TextWriter,Delta.Slang.Syntax.SyntaxNode)": {
          "Lines": {
            "44": 0,
            "58": 0,
            "61": 0,
            "62": 0,
            "63": 0,
            "64": 0,
            "66": 0,
            "67": 0,
            "69": 0,
            "70": 0,
            "71": 0,
            "72": 0,
            "73": 0,
            "74": 0,
            "75": 0,
            "77": 0,
            "78": 0,
            "79": 0,
            "80": 0,
            "81": 0,
            "82": 0,
            "83": 0,
            "85": 0,
            "86": 0,
            "87": 0,
            "89": 0,
            "90": 0,
            "92": 0,
            "93": 0,
            "94": 0,
            "95": 0,
            "96": 0,
            "97": 0,
            "98": 0,
            "99": 0,
            "102": 0,
            "103": 0,
            "104": 0,
            "105": 0,
            "106": 0,
            "107": 0,
            "108": 0,
            "109": 0,
            "110": 0,
            "111": 0,
            "112": 0,
            "113": 0,
            "114": 0,
            "115": 0,
            "117": 0,
            "118": 0,
            "119": 0,
            "120": 0,
            "122": 0,
            "123": 0,
            "124": 0,
            "125": 0,
            "126": 0,
            "128": 0,
            "129": 0,
            "130": 0,
            "131": 0,
            "133": 0,
            "134": 0,
            "135": 0,
            "136": 0,
            "137": 0,
            "139": 0,
            "140": 0,
            "141": 0,
            "142": 0,
            "143": 0,
            "144": 0,
            "145": 0,
            "146": 0,
            "148": 0,
            "149": 0,
            "150": 0,
            "151": 0,
            "152": 0,
            "153": 0,
            "154": 0,
            "155": 0,
            "157": 0,
            "158": 0,
            "159": 0,
            "160": 0,
            "161": 0,
            "162": 0,
            "163": 0,
            "164": 0,
            "165": 0,
            "166": 0,
            "167": 0,
            "168": 0,
            "170": 0,
            "171": 0,
            "172": 0,
            "173": 0,
            "174": 0,
            "175": 0,
            "176": 0,
            "177": 0,
            "178": 0,
            "181": 0,
            "182": 0,
            "183": 0,
            "184": 0,
            "185": 0,
            "186": 0,
            "187": 0,
            "188": 0,
            "189": 0,
            "191": 0,
            "192": 0,
            "193": 0,
            "195": 0,
            "196": 0,
            "197": 0,
            "198": 0,
            "200": 0,
            "201": 0,
            "203": 0,
            "204": 0,
            "205": 0,
            "206": 0,
            "208": 0,
            "209": 0,
            "210": 0,
            "212": 0,
            "213": 0,
            "214": 0,
            "215": 0,
            "216": 0,
            "217": 0,
            "218": 0,
            "220": 0,
            "221": 0,
            "222": 0,
            "223": 0,
            "225": 0,
            "226": 0,
            "227": 0,
            "229": 0
          },
          "Branches": [
            {
              "Line": 58,
              "Offset": 50,
              "EndOffset": 55,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 62,
              "EndOffset": 67,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 76,
              "EndOffset": 81,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 92,
              "EndOffset": 97,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 108,
              "EndOffset": 113,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 124,
              "EndOffset": 129,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 136,
              "EndOffset": 141,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 152,
              "EndOffset": 157,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 168,
              "EndOffset": 173,
              "Path": 0,
              "Ordinal": 16,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 184,
              "EndOffset": 189,
              "Path": 0,
              "Ordinal": 18,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 200,
              "EndOffset": 205,
              "Path": 0,
              "Ordinal": 20,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 216,
              "EndOffset": 221,
              "Path": 0,
              "Ordinal": 22,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 232,
              "EndOffset": 237,
              "Path": 0,
              "Ordinal": 24,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 248,
              "EndOffset": 253,
              "Path": 0,
              "Ordinal": 26,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 264,
              "EndOffset": 269,
              "Path": 0,
              "Ordinal": 28,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 280,
              "EndOffset": 285,
              "Path": 0,
              "Ordinal": 30,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 296,
              "EndOffset": 301,
              "Path": 0,
              "Ordinal": 32,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 312,
              "EndOffset": 317,
              "Path": 0,
              "Ordinal": 34,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 328,
              "EndOffset": 333,
              "Path": 0,
              "Ordinal": 36,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 344,
              "EndOffset": 349,
              "Path": 0,
              "Ordinal": 38,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 50,
              "EndOffset": 370,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 62,
              "EndOffset": 407,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 76,
              "EndOffset": 423,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 92,
              "EndOffset": 533,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 78,
              "Offset": 606,
              "EndOffset": 552,
              "Path": 1,
              "Ordinal": 45,
              "Hits": 0
            },
            {
              "Line": 80,
              "Offset": 567,
              "EndOffset": 569,
              "Path": 0,
              "Ordinal": 42,
              "Hits": 0
            },
            {
              "Line": 80,
              "Offset": 567,
              "EndOffset": 573,
              "Path": 1,
              "Ordinal": 43,
              "Hits": 0
            },
            {
              "Line": 78,
              "Offset": 606,
              "EndOffset": 608,
              "Path": 0,
              "Ordinal": 44,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 108,
              "EndOffset": 630,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 124,
              "EndOffset": 684,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 136,
              "EndOffset": 710,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 152,
              "EndOffset": 787,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 0
            },
            {
              "Line": 104,
              "Offset": 841,
              "EndOffset": 843,
              "Path": 0,
              "Ordinal": 46,
              "Hits": 0
            },
            {
              "Line": 104,
              "Offset": 841,
              "EndOffset": 875,
              "Path": 1,
              "Ordinal": 47,
              "Hits": 0
            },
            {
              "Line": 109,
              "Offset": 889,
              "EndOffset": 891,
              "Path": 0,
              "Ordinal": 48,
              "Hits": 0
            },
            {
              "Line": 109,
              "Offset": 889,
              "EndOffset": 923,
              "Path": 1,
              "Ordinal": 49,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 168,
              "EndOffset": 944,
              "Path": 1,
              "Ordinal": 17,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 184,
              "EndOffset": 990,
              "Path": 1,
              "Ordinal": 19,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 200,
              "EndOffset": 1050,
              "Path": 1,
              "Ordinal": 21,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 216,
              "EndOffset": 1097,
              "Path": 1,
              "Ordinal": 23,
              "Hits": 0
            },
            {
              "Line": 140,
              "Offset": 1177,
              "EndOffset": 1179,
              "Path": 0,
              "Ordinal": 50,
              "Hits": 0
            },
            {
              "Line": 140,
              "Offset": 1177,
              "EndOffset": 1213,
              "Path": 1,
              "Ordinal": 51,
              "Hits": 0
            },
            {
              "Line": 148,
              "Offset": 1243,
              "EndOffset": 1245,
              "Path": 0,
              "Ordinal": 52,
              "Hits": 0
            },
            {
              "Line": 150,
              "Offset": 1255,
              "EndOffset": 1257,
              "Path": 0,
              "Ordinal": 54,
              "Hits": 0
            },
            {
              "Line": 150,
              "Offset": 1255,
              "EndOffset": 1266,
              "Path": 1,
              "Ordinal": 55,
              "Hits": 0
            },
            {
              "Line": 148,
              "Offset": 1243,
              "EndOffset": 1283,
              "Path": 1,
              "Ordinal": 53,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 232,
              "EndOffset": 1291,
              "Path": 1,
              "Ordinal": 25,
              "Hits": 0
            },
            {
              "Line": 160,
              "Offset": 1332,
              "EndOffset": 1334,
              "Path": 0,
              "Ordinal": 56,
              "Hits": 0
            },
            {
              "Line": 160,
              "Offset": 1332,
              "EndOffset": 1368,
              "Path": 1,
              "Ordinal": 57,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 248,
              "EndOffset": 1392,
              "Path": 1,
              "Ordinal": 27,
              "Hits": 0
            },
            {
              "Line": 172,
              "Offset": 1429,
              "EndOffset": 1431,
              "Path": 0,
              "Ordinal": 58,
              "Hits": 0
            },
            {
              "Line": 172,
              "Offset": 1429,
              "EndOffset": 1463,
              "Path": 1,
              "Ordinal": 59,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 264,
              "EndOffset": 1484,
              "Path": 1,
              "Ordinal": 29,
              "Hits": 0
            },
            {
              "Line": 183,
              "Offset": 1588,
              "EndOffset": 1534,
              "Path": 1,
              "Ordinal": 63,
              "Hits": 0
            },
            {
              "Line": 185,
              "Offset": 1549,
              "EndOffset": 1551,
              "Path": 0,
              "Ordinal": 60,
              "Hits": 0
            },
            {
              "Line": 185,
              "Offset": 1549,
              "EndOffset": 1555,
              "Path": 1,
              "Ordinal": 61,
              "Hits": 0
            },
            {
              "Line": 183,
              "Offset": 1588,
              "EndOffset": 1590,
              "Path": 0,
              "Ordinal": 62,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 280,
              "EndOffset": 1626,
              "Path": 1,
              "Ordinal": 31,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 296,
              "EndOffset": 1670,
              "Path": 1,
              "Ordinal": 33,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 312,
              "EndOffset": 1745,
              "Path": 1,
              "Ordinal": 35,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 328,
              "EndOffset": 1773,
              "Path": 1,
              "Ordinal": 37,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 344,
              "EndOffset": 1824,
              "Path": 1,
              "Ordinal": 39,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 360,
              "EndOffset": 1878,
              "Path": 1,
              "Ordinal": 41,
              "Hits": 0
            },
            {
              "Line": 212,
              "Offset": 1896,
              "EndOffset": 1898,
              "Path": 0,
              "Ordinal": 64,
              "Hits": 0
            },
            {
              "Line": 212,
              "Offset": 1896,
              "EndOffset": 1912,
              "Path": 1,
              "Ordinal": 65,
              "Hits": 0
            },
            {
              "Line": 214,
              "Offset": 1931,
              "EndOffset": 1933,
              "Path": 0,
              "Ordinal": 66,
              "Hits": 0
            },
            {
              "Line": 214,
              "Offset": 1931,
              "EndOffset": 1985,
              "Path": 1,
              "Ordinal": 67,
              "Hits": 0
            },
            {
              "Line": 221,
              "Offset": 2024,
              "EndOffset": 2026,
              "Path": 0,
              "Ordinal": 68,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 360,
              "EndOffset": 2042,
              "Path": 0,
              "Ordinal": 40,
              "Hits": 0
            },
            {
              "Line": 221,
              "Offset": 2024,
              "EndOffset": 2067,
              "Path": 1,
              "Ordinal": 69,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.Unparser::Indent()": {
          "Lines": {
            "231": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.Unparser::Dedent()": {
          "Lines": {
            "232": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.Unparser::<DumpTree>g__walk|7_0(Delta.Slang.Syntax.SyntaxNode,System.Int32,Delta.Slang.Utils.Unparser/<>c__DisplayClass7_0&)": {
          "Lines": {
            "21": 0,
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0
          },
          "Branches": [
            {
              "Line": 34,
              "Offset": 97,
              "EndOffset": 73,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 97,
              "EndOffset": 99,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        },
        "System.String Delta.Slang.Utils.Unparser::<DumpTree>g__f|7_1(Delta.Slang.Syntax.Token)": {
          "Lines": {
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0,
            "30": 0
          },
          "Branches": [
            {
              "Line": 26,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 14,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 30,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 52,
              "EndOffset": 54,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 52,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.Unparser::<Unparse>g__tabs|9_0(Delta.Slang.Utils.Unparser/<>c__DisplayClass9_0&)": {
          "Lines": {
            "47": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.Unparser::<Unparse>g__ltabs|9_1(Delta.Slang.Utils.Unparser/<>c__DisplayClass9_0&)": {
          "Lines": {
            "48": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.Unparser::<Unparse>g__wl|9_2(System.String,Delta.Slang.Utils.Unparser/<>c__DisplayClass9_0&)": {
          "Lines": {
            "49": 0
          },
          "Branches": [
            {
              "Line": 49,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 49,
              "Offset": 8,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.Unparser::<Unparse>g__w|9_3(System.String,Delta.Slang.Utils.Unparser/<>c__DisplayClass9_0&)": {
          "Lines": {
            "50": 0
          },
          "Branches": [
            {
              "Line": 50,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 8,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.Unparser::<Unparse>g__unparse|9_4(Delta.Slang.Syntax.SyntaxNode,Delta.Slang.Utils.Unparser/<>c__DisplayClass9_0&)": {
          "Lines": {
            "51": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Utils.Unparser::<Unparse>g__walk|9_5(Delta.Slang.Utils.Unparser/<>c__DisplayClass9_0&)": {
          "Lines": {
            "53": 0,
            "54": 0,
            "55": 0,
            "56": 0
          },
          "Branches": [
            {
              "Line": 54,
              "Offset": 43,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 54,
              "Offset": 43,
              "EndOffset": 45,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Utils.Unparser::.ctor(Delta.Slang.Syntax.ParseTree)": {
          "Lines": {
            "10": 0,
            "12": 0
          },
          "Branches": [
            {
              "Line": 12,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 17,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Syntax\\Lexer.cs": {
      "Delta.Slang.Syntax.Lexer": {
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.IDiagnostic> Delta.Slang.Syntax.Lexer::get_Diagnostics()": {
          "Lines": {
            "34": 3
          },
          "Branches": []
        },
        "Delta.Slang.Text.SlidingTextWindow Delta.Slang.Syntax.Lexer::get_TextWindow()": {
          "Lines": {
            "36": 155
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.Lexer::Dispose()": {
          "Lines": {
            "38": 3
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Syntax.Lexer/TokenInfo> Delta.Slang.Syntax.Lexer::LextNext()": {
          "Lines": {
            "62": 12,
            "63": 12,
            "65": 12,
            "66": 12,
            "69": 12,
            "70": 12,
            "74": 2,
            "75": 2,
            "76": 2,
            "78": 0,
            "79": 0,
            "80": 0,
            "82": 0,
            "83": 0,
            "84": 0,
            "86": 0,
            "87": 0,
            "88": 0,
            "90": 0,
            "91": 0,
            "93": 2,
            "94": 2,
            "95": 2,
            "97": 2,
            "98": 2,
            "99": 2,
            "101": 0,
            "102": 0,
            "103": 0,
            "105": 0,
            "106": 0,
            "107": 0,
            "109": 0,
            "110": 0,
            "111": 0,
            "113": 0,
            "114": 0,
            "115": 0,
            "117": 2,
            "118": 2,
            "119": 2,
            "124": 0,
            "125": 0,
            "127": 2,
            "140": 0,
            "141": 0,
            "143": 2,
            "144": 2,
            "145": 0,
            "146": 0,
            "148": 0,
            "149": 0,
            "150": 0,
            "151": 0,
            "152": 0,
            "153": 2,
            "156": 10,
            "157": 10,
            "159": 10,
            "160": 12
          },
          "Branches": [
            {
              "Line": 70,
              "Offset": 42,
              "EndOffset": 47,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 8
            },
            {
              "Line": 70,
              "Offset": 48,
              "EndOffset": 55,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 8
            },
            {
              "Line": 70,
              "Offset": 42,
              "EndOffset": 189,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 4
            },
            {
              "Line": 70,
              "Offset": 192,
              "EndOffset": 199,
              "Path": 0,
              "Ordinal": 35,
              "Hits": 4
            },
            {
              "Line": 70,
              "Offset": 202,
              "EndOffset": 209,
              "Path": 0,
              "Ordinal": 37,
              "Hits": 4
            },
            {
              "Line": 70,
              "Offset": 48,
              "EndOffset": 222,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            },
            {
              "Line": 70,
              "Offset": 215,
              "EndOffset": 222,
              "Path": 1,
              "Ordinal": 40,
              "Hits": 2
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 243,
              "Path": 11,
              "Ordinal": 15,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 264,
              "Path": 13,
              "Ordinal": 17,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 285,
              "Path": 10,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 306,
              "Path": 15,
              "Ordinal": 19,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 320,
              "Path": 8,
              "Ordinal": 12,
              "Hits": 2
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 341,
              "Path": 9,
              "Ordinal": 13,
              "Hits": 2
            },
            {
              "Line": 70,
              "Offset": 192,
              "EndOffset": 362,
              "Path": 1,
              "Ordinal": 36,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 202,
              "EndOffset": 384,
              "Path": 1,
              "Ordinal": 38,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 406,
              "Path": 26,
              "Ordinal": 30,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 428,
              "Path": 12,
              "Ordinal": 16,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 450,
              "Path": 27,
              "Ordinal": 31,
              "Hits": 2
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 472,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 472,
              "Path": 28,
              "Ordinal": 32,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 472,
              "Path": 29,
              "Ordinal": 33,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 472,
              "Path": 30,
              "Ordinal": 34,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 484,
              "Path": 2,
              "Ordinal": 6,
              "Hits": 2
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 497,
              "Path": 16,
              "Ordinal": 20,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 497,
              "Path": 17,
              "Ordinal": 21,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 497,
              "Path": 18,
              "Ordinal": 22,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 497,
              "Path": 19,
              "Ordinal": 23,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 497,
              "Path": 20,
              "Ordinal": 24,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 497,
              "Path": 21,
              "Ordinal": 25,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 497,
              "Path": 22,
              "Ordinal": 26,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 497,
              "Path": 23,
              "Ordinal": 27,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 497,
              "Path": 24,
              "Ordinal": 28,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 497,
              "Path": 25,
              "Ordinal": 29,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 508,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 2
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 508,
              "Path": 3,
              "Ordinal": 7,
              "Hits": 2
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 508,
              "Path": 4,
              "Ordinal": 8,
              "Hits": 2
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 508,
              "Path": 5,
              "Ordinal": 9,
              "Hits": 2
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 508,
              "Path": 6,
              "Ordinal": 10,
              "Hits": 2
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 508,
              "Path": 7,
              "Ordinal": 11,
              "Hits": 2
            },
            {
              "Line": 70,
              "Offset": 59,
              "EndOffset": 508,
              "Path": 14,
              "Ordinal": 18,
              "Hits": 2
            },
            {
              "Line": 70,
              "Offset": 215,
              "EndOffset": 508,
              "Path": 0,
              "Ordinal": 39,
              "Hits": 2
            },
            {
              "Line": 143,
              "Offset": 519,
              "EndOffset": 521,
              "Path": 0,
              "Ordinal": 41,
              "Hits": 2
            },
            {
              "Line": 143,
              "Offset": 519,
              "EndOffset": 532,
              "Path": 1,
              "Ordinal": 42,
              "Hits": 0
            },
            {
              "Line": 145,
              "Offset": 542,
              "EndOffset": 544,
              "Path": 0,
              "Ordinal": 43,
              "Hits": 0
            },
            {
              "Line": 145,
              "Offset": 542,
              "EndOffset": 555,
              "Path": 1,
              "Ordinal": 44,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Syntax.Lexer::LexPotentialComment(Delta.Slang.Syntax.Lexer/TokenInfo&)": {
          "Lines": {
            "163": 0,
            "164": 0,
            "166": 0,
            "167": 0,
            "168": 0,
            "169": 0,
            "170": 0,
            "173": 0,
            "174": 0,
            "175": 0,
            "176": 0,
            "180": 0,
            "181": 0,
            "182": 0
          },
          "Branches": [
            {
              "Line": 167,
              "Offset": 22,
              "EndOffset": 24,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 167,
              "Offset": 22,
              "EndOffset": 35,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 173,
              "Offset": 42,
              "EndOffset": 44,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 173,
              "Offset": 42,
              "EndOffset": 55,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Syntax.Lexer::LexCppComment(Delta.Slang.Syntax.Lexer/TokenInfo&)": {
          "Lines": {
            "185": 0,
            "186": 0,
            "187": 0,
            "188": 0,
            "189": 0,
            "190": 0,
            "191": 0,
            "192": 0,
            "193": 0,
            "195": 0,
            "196": 0
          },
          "Branches": [
            {
              "Line": 190,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 190,
              "Offset": 26,
              "EndOffset": 28,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 190,
              "Offset": 29,
              "EndOffset": 31,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 190,
              "Offset": 21,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 190,
              "Offset": 26,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 190,
              "Offset": 29,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 190,
              "Offset": 44,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 190,
              "Offset": 44,
              "EndOffset": 60,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Syntax.Lexer::LexCComment(Delta.Slang.Syntax.Lexer/TokenInfo&)": {
          "Lines": {
            "199": 0,
            "200": 0,
            "202": 0,
            "203": 0,
            "204": 0,
            "206": 0,
            "207": 0,
            "209": 0,
            "210": 0,
            "213": 0,
            "214": 0,
            "215": 0,
            "216": 0,
            "217": 0,
            "218": 0,
            "219": 0,
            "220": 0,
            "222": 0,
            "225": 0,
            "226": 0,
            "228": 0,
            "229": 0
          },
          "Branches": [
            {
              "Line": 206,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 206,
              "Offset": 19,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 206,
              "Offset": 34,
              "EndOffset": 38,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 209,
              "Offset": 47,
              "EndOffset": 51,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 213,
              "Offset": 58,
              "EndOffset": 60,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 217,
              "Offset": 86,
              "EndOffset": 88,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 217,
              "Offset": 86,
              "EndOffset": 98,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 213,
              "Offset": 58,
              "EndOffset": 99,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 209,
              "Offset": 47,
              "EndOffset": 107,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 206,
              "Offset": 34,
              "EndOffset": 112,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Syntax.Lexer::LexOperatorEndingWithOptionalEqual(System.Char,Delta.Slang.Syntax.Lexer/TokenInfo&)": {
          "Lines": {
            "232": 0,
            "233": 0,
            "234": 0,
            "235": 0,
            "236": 0,
            "237": 0,
            "238": 0,
            "239": 0,
            "241": 0,
            "243": 0,
            "244": 0,
            "245": 0,
            "246": 0,
            "247": 0,
            "249": 0
          },
          "Branches": [
            {
              "Line": 235,
              "Offset": 22,
              "EndOffset": 24,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 235,
              "Offset": 22,
              "EndOffset": 35,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 241,
              "Offset": 42,
              "EndOffset": 46,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 241,
              "Offset": 50,
              "EndOffset": 69,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 243,
              "Offset": 71,
              "EndOffset": 73,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 243,
              "Offset": 71,
              "EndOffset": 77,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 241,
              "Offset": 50,
              "EndOffset": 87,
              "Path": 3,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 244,
              "Offset": 89,
              "EndOffset": 91,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 244,
              "Offset": 89,
              "EndOffset": 95,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 241,
              "Offset": 50,
              "EndOffset": 105,
              "Path": 2,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 245,
              "Offset": 107,
              "EndOffset": 109,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 245,
              "Offset": 107,
              "EndOffset": 113,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 241,
              "Offset": 42,
              "EndOffset": 123,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 246,
              "Offset": 125,
              "EndOffset": 127,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 246,
              "Offset": 125,
              "EndOffset": 131,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 0
            },
            {
              "Line": 241,
              "Offset": 50,
              "EndOffset": 141,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Syntax.Lexer::LexNumberLiteral(Delta.Slang.Syntax.Lexer/TokenInfo&)": {
          "Lines": {
            "305": 0,
            "306": 0,
            "307": 0,
            "309": 0,
            "310": 0,
            "312": 0,
            "313": 0,
            "314": 0,
            "315": 0,
            "316": 0,
            "317": 0,
            "319": 0,
            "320": 0,
            "321": 0
          },
          "Branches": [
            {
              "Line": 306,
              "Offset": 23,
              "EndOffset": 3,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 306,
              "Offset": 23,
              "EndOffset": 25,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 309,
              "Offset": 37,
              "EndOffset": 39,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 309,
              "Offset": 37,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 316,
              "Offset": 91,
              "EndOffset": 93,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 316,
              "Offset": 91,
              "EndOffset": 109,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Syntax.Lexer::LexFloatingPointLiteral(Delta.Slang.Syntax.Lexer/TokenInfo&)": {
          "Lines": {
            "324": 0,
            "325": 0,
            "327": 0,
            "328": 0,
            "330": 0,
            "331": 0,
            "332": 0,
            "333": 0,
            "334": 0,
            "336": 0,
            "337": 0
          },
          "Branches": [
            {
              "Line": 327,
              "Offset": 30,
              "EndOffset": 10,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 327,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 333,
              "Offset": 83,
              "EndOffset": 85,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 333,
              "Offset": 83,
              "EndOffset": 100,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Syntax.Lexer::LexWhiteSpace(Delta.Slang.Syntax.Lexer/TokenInfo&)": {
          "Lines": {
            "340": 0,
            "341": 0,
            "342": 0,
            "343": 0,
            "344": 0,
            "345": 0,
            "347": 0,
            "348": 0,
            "349": 0,
            "350": 0,
            "354": 0,
            "357": 0,
            "358": 0
          },
          "Branches": [
            {
              "Line": 344,
              "Offset": 20,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 347,
              "Offset": 32,
              "EndOffset": 34,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 344,
              "Offset": 20,
              "EndOffset": 46,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 347,
              "Offset": 32,
              "EndOffset": 50,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Delta.Slang.Syntax.Lexer::ConsumeLineBreakIfAny(System.Char)": {
          "Lines": {
            "361": 0,
            "362": 0,
            "363": 0,
            "364": 0,
            "365": 0,
            "367": 0,
            "368": 0,
            "369": 0,
            "371": 0,
            "372": 0,
            "375": 0,
            "376": 0,
            "377": 0,
            "378": 0,
            "380": 0,
            "381": 0,
            "384": 0,
            "385": 0
          },
          "Branches": [
            {
              "Line": 362,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 368,
              "Offset": 46,
              "EndOffset": 48,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 368,
              "Offset": 46,
              "EndOffset": 55,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 362,
              "Offset": 8,
              "EndOffset": 66,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 375,
              "Offset": 75,
              "EndOffset": 77,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 375,
              "Offset": 75,
              "EndOffset": 110,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Syntax.Lexer::LexIdentifierOrKeyword(Delta.Slang.Syntax.Lexer/TokenInfo&)": {
          "Lines": {
            "388": 2,
            "389": 12,
            "390": 10,
            "392": 2,
            "393": 2,
            "394": 2
          },
          "Branches": [
            {
              "Line": 389,
              "Offset": 24,
              "EndOffset": 3,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 10
            },
            {
              "Line": 389,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            }
          ]
        },
        "System.Boolean Delta.Slang.Syntax.Lexer::IsIdentifierFirstCharacter(System.Char)": {
          "Lines": {
            "396": 14
          },
          "Branches": [
            {
              "Line": 396,
              "Offset": 3,
              "EndOffset": 5,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 14
            },
            {
              "Line": 396,
              "Offset": 3,
              "EndOffset": 13,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Delta.Slang.Syntax.Lexer::IsIdentifierCharacter(System.Char)": {
          "Lines": {
            "397": 12
          },
          "Branches": [
            {
              "Line": 397,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 397,
              "Offset": 7,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 10
            }
          ]
        },
        "System.Char Delta.Slang.Syntax.Lexer::LookAhead()": {
          "Lines": {
            "399": 52
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.Lexer::Consume()": {
          "Lines": {
            "401": 48,
            "402": 48,
            "403": 48,
            "404": 48
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.Lexer::AdvanceLinePosition()": {
          "Lines": {
            "407": 16,
            "408": 16,
            "409": 16,
            "410": 16
          },
          "Branches": []
        },
        "Delta.Slang.Text.TextSpan Delta.Slang.Syntax.Lexer::GetCurrentSpan()": {
          "Lines": {
            "412": 18
          },
          "Branches": []
        },
        "Delta.Slang.Text.LinePosition Delta.Slang.Syntax.Lexer::GetPreviousLinePosition()": {
          "Lines": {
            "413": 16
          },
          "Branches": []
        },
        "Delta.Slang.Text.LinePosition Delta.Slang.Syntax.Lexer::GetCurrentLinePosition()": {
          "Lines": {
            "414": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.Lexer::<Lex>b__14_0(Delta.Slang.Syntax.Lexer/TokenInfo)": {
          "Lines": {
            "45": 28,
            "46": 28,
            "47": 28
          },
          "Branches": [
            {
              "Line": 45,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 14
            },
            {
              "Line": 45,
              "Offset": 7,
              "EndOffset": 63,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            }
          ]
        },
        "System.Void Delta.Slang.Syntax.Lexer::.ctor(Delta.Slang.SourceText)": {
          "Lines": {
            "22": 3,
            "23": 3,
            "24": 3,
            "25": 3,
            "27": 3,
            "28": 3,
            "29": 3,
            "30": 3,
            "31": 3,
            "32": 3
          },
          "Branches": []
        }
      },
      "Delta.Slang.Syntax.Lexer/TokenInfo": {
        "Delta.Slang.Syntax.TokenKind Delta.Slang.Syntax.Lexer/TokenInfo::get_Kind()": {
          "Lines": {
            "13": 46
          },
          "Branches": []
        },
        "Delta.Slang.Text.TextSpan Delta.Slang.Syntax.Lexer/TokenInfo::get_Span()": {
          "Lines": {
            "14": 46
          },
          "Branches": []
        },
        "Delta.Slang.Text.LinePosition Delta.Slang.Syntax.Lexer/TokenInfo::get_Position()": {
          "Lines": {
            "15": 32
          },
          "Branches": []
        },
        "System.Object Delta.Slang.Syntax.Lexer/TokenInfo::get_Value()": {
          "Lines": {
            "16": 16
          },
          "Branches": []
        }
      },
      "Delta.Slang.Syntax.Lexer/<Lex>d__14": {
        "System.Boolean Delta.Slang.Syntax.Lexer/<Lex>d__14::MoveNext()": {
          "Lines": {
            "41": 2,
            "42": 2,
            "44": 12,
            "49": 66,
            "50": 16,
            "51": 16,
            "52": 16,
            "53": 2,
            "54": 2,
            "55": 2,
            "57": 14,
            "58": 24,
            "59": 2
          },
          "Branches": [
            {
              "Line": 41,
              "Offset": 14,
              "EndOffset": 25,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 58,
              "Offset": 246,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 12
            },
            {
              "Line": 49,
              "Offset": 211,
              "EndOffset": 115,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 16
            },
            {
              "Line": 41,
              "Offset": 14,
              "EndOffset": 156,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 16
            },
            {
              "Line": 52,
              "Offset": 180,
              "EndOffset": 182,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 2
            },
            {
              "Line": 52,
              "Offset": 180,
              "EndOffset": 192,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 14
            },
            {
              "Line": 49,
              "Offset": 211,
              "EndOffset": 213,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 12
            },
            {
              "Line": 58,
              "Offset": 246,
              "EndOffset": 251,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 2
            }
          ]
        }
      },
      "Delta.Slang.Syntax.Lexer/<LexStringLiteral>d__20": {
        "System.Boolean Delta.Slang.Syntax.Lexer/<LexStringLiteral>d__20::MoveNext()": {
          "Lines": {
            "252": 2,
            "253": 2,
            "254": 2,
            "255": 2,
            "256": 2,
            "257": 2,
            "258": 2,
            "259": 2,
            "261": 2,
            "262": 2,
            "264": 2,
            "265": 2,
            "266": 2,
            "267": 28,
            "268": 28,
            "269": 28,
            "270": 28,
            "271": 2,
            "273": 26,
            "275": 26,
            "276": 0,
            "277": 0,
            "278": 0,
            "279": 0,
            "282": 26,
            "283": 26,
            "284": 26,
            "286": 2,
            "287": 2,
            "288": 2,
            "289": 2,
            "290": 2,
            "292": 2,
            "293": 2,
            "295": 2,
            "296": 2,
            "297": 2,
            "298": 2,
            "299": 2,
            "300": 2,
            "301": 2,
            "302": 2
          },
          "Branches": [
            {
              "Line": 270,
              "Offset": 236,
              "EndOffset": 238,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 270,
              "Offset": 236,
              "EndOffset": 249,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 26
            },
            {
              "Line": 270,
              "Offset": 252,
              "EndOffset": 256,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 26
            },
            {
              "Line": 275,
              "Offset": 282,
              "EndOffset": 284,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 275,
              "Offset": 282,
              "EndOffset": 295,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 26
            },
            {
              "Line": 275,
              "Offset": 298,
              "EndOffset": 300,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 275,
              "Offset": 298,
              "EndOffset": 322,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 26
            },
            {
              "Line": 270,
              "Offset": 252,
              "EndOffset": 350,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 2
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Syntax\\nodes\\CompilationUnitNode.cs": {
      "Delta.Slang.Syntax.CompilationUnitNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.CompilationUnitNode::get_Kind()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Syntax.SyntaxNode> Delta.Slang.Syntax.CompilationUnitNode::get_Children()": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.CompilationUnitNode::get_MainToken()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Syntax.MemberNode> Delta.Slang.Syntax.CompilationUnitNode::get_Members()": {
          "Lines": {
            "16": 2
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.CompilationUnitNode::.ctor(System.Collections.Generic.IEnumerable`1<Delta.Slang.Syntax.MemberNode>)": {
          "Lines": {
            "9": 2,
            "10": 2
          },
          "Branches": [
            {
              "Line": 10,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 10,
              "Offset": 9,
              "EndOffset": 19,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Syntax\\nodes\\expressions.cs": {
      "Delta.Slang.Syntax.AssignmentExpressionNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.AssignmentExpressionNode::get_Kind()": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.AssignmentExpressionNode::get_MainToken()": {
          "Lines": {
            "17": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.AssignmentExpressionNode::get_Identifier()": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.AssignmentExpressionNode::get_Equal()": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.ExpressionNode Delta.Slang.Syntax.AssignmentExpressionNode::get_Expression()": {
          "Lines": {
            "22": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.AssignmentExpressionNode::.ctor(Delta.Slang.Syntax.Token,Delta.Slang.Syntax.Token,Delta.Slang.Syntax.ExpressionNode)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0
          },
          "Branches": [
            {
              "Line": 11,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 33,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 13,
              "Offset": 55,
              "EndOffset": 57,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 13,
              "Offset": 55,
              "EndOffset": 69,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.AssignmentExpressionNode/<get_Children>d__6": {
        "System.Boolean Delta.Slang.Syntax.AssignmentExpressionNode/<get_Children>d__6::MoveNext()": {
          "Lines": {
            "18": 0
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 14,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 14,
              "EndOffset": 58,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.UnaryExpressionNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.UnaryExpressionNode::get_Kind()": {
          "Lines": {
            "33": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.UnaryExpressionNode::get_MainToken()": {
          "Lines": {
            "34": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.UnaryExpressionNode::get_Operator()": {
          "Lines": {
            "37": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.ExpressionNode Delta.Slang.Syntax.UnaryExpressionNode::get_Operand()": {
          "Lines": {
            "38": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.UnaryExpressionNode::.ctor(Delta.Slang.Syntax.Token,Delta.Slang.Syntax.ExpressionNode)": {
          "Lines": {
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0
          },
          "Branches": [
            {
              "Line": 29,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 33,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.UnaryExpressionNode/<get_Children>d__6": {
        "System.Boolean Delta.Slang.Syntax.UnaryExpressionNode/<get_Children>d__6::MoveNext()": {
          "Lines": {
            "35": 0
          },
          "Branches": [
            {
              "Line": 35,
              "Offset": 14,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 14,
              "EndOffset": 58,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.BinaryExpressionNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.BinaryExpressionNode::get_Kind()": {
          "Lines": {
            "50": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.BinaryExpressionNode::get_MainToken()": {
          "Lines": {
            "51": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.ExpressionNode Delta.Slang.Syntax.BinaryExpressionNode::get_Left()": {
          "Lines": {
            "61": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.BinaryExpressionNode::get_Operator()": {
          "Lines": {
            "62": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.ExpressionNode Delta.Slang.Syntax.BinaryExpressionNode::get_Right()": {
          "Lines": {
            "63": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.BinaryExpressionNode::.ctor(Delta.Slang.Syntax.ExpressionNode,Delta.Slang.Syntax.Token,Delta.Slang.Syntax.ExpressionNode)": {
          "Lines": {
            "43": 0,
            "44": 0,
            "45": 0,
            "46": 0,
            "47": 0,
            "48": 0
          },
          "Branches": [
            {
              "Line": 45,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 45,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 33,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 47,
              "Offset": 55,
              "EndOffset": 57,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 47,
              "Offset": 55,
              "EndOffset": 69,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.BinaryExpressionNode/<get_Children>d__6": {
        "System.Boolean Delta.Slang.Syntax.BinaryExpressionNode/<get_Children>d__6::MoveNext()": {
          "Lines": {
            "55": 0,
            "56": 0,
            "57": 0,
            "58": 0
          },
          "Branches": []
        }
      },
      "Delta.Slang.Syntax.ParenthesizedExpressionNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.ParenthesizedExpressionNode::get_Kind()": {
          "Lines": {
            "74": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.ParenthesizedExpressionNode::get_MainToken()": {
          "Lines": {
            "75": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.ExpressionNode Delta.Slang.Syntax.ParenthesizedExpressionNode::get_Expression()": {
          "Lines": {
            "78": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.ParenthesizedExpressionNode::.ctor(Delta.Slang.Syntax.Token,Delta.Slang.Syntax.ExpressionNode)": {
          "Lines": {
            "68": 0,
            "69": 0,
            "70": 0,
            "71": 0,
            "72": 0
          },
          "Branches": [
            {
              "Line": 71,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 71,
              "Offset": 18,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.ParenthesizedExpressionNode/<get_Children>d__7": {
        "System.Boolean Delta.Slang.Syntax.ParenthesizedExpressionNode/<get_Children>d__7::MoveNext()": {
          "Lines": {
            "76": 0
          },
          "Branches": [
            {
              "Line": 76,
              "Offset": 14,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 76,
              "Offset": 14,
              "EndOffset": 58,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.LiteralExpressionNode": {
        "Delta.Slang.Syntax.LiteralExpressionNode Delta.Slang.Syntax.LiteralExpressionNode::MakeBoolLiteral(Delta.Slang.Syntax.Token,System.Boolean)": {
          "Lines": {
            "90": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.LiteralExpressionNode Delta.Slang.Syntax.LiteralExpressionNode::MakeIntLiteral(Delta.Slang.Syntax.Token)": {
          "Lines": {
            "91": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.LiteralExpressionNode Delta.Slang.Syntax.LiteralExpressionNode::MakeDoubleLiteral(Delta.Slang.Syntax.Token)": {
          "Lines": {
            "92": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.LiteralExpressionNode Delta.Slang.Syntax.LiteralExpressionNode::MakeStringLiteral(Delta.Slang.Syntax.Token)": {
          "Lines": {
            "93": 2
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.LiteralExpressionNode::get_Kind()": {
          "Lines": {
            "95": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.LiteralExpressionNode::get_MainToken()": {
          "Lines": {
            "96": 0
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Syntax.LiteralExpressionNode::get_Type()": {
          "Lines": {
            "99": 1
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.LiteralExpressionNode::get_Literal()": {
          "Lines": {
            "100": 0
          },
          "Branches": []
        },
        "System.Object Delta.Slang.Syntax.LiteralExpressionNode::get_Value()": {
          "Lines": {
            "101": 1
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.LiteralExpressionNode::.ctor(Delta.Slang.Syntax.Token,System.Object,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "83": 2,
            "84": 2,
            "85": 2,
            "86": 2,
            "87": 2,
            "88": 2
          },
          "Branches": [
            {
              "Line": 85,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 85,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 86,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 86,
              "Offset": 33,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            },
            {
              "Line": 87,
              "Offset": 55,
              "EndOffset": 57,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 87,
              "Offset": 55,
              "EndOffset": 69,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 2
            }
          ]
        }
      },
      "Delta.Slang.Syntax.LiteralExpressionNode/<get_Children>d__10": {
        "System.Boolean Delta.Slang.Syntax.LiteralExpressionNode/<get_Children>d__10::MoveNext()": {
          "Lines": {
            "97": 0
          },
          "Branches": []
        }
      },
      "Delta.Slang.Syntax.InvokeExpressionNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.InvokeExpressionNode::get_Kind()": {
          "Lines": {
            "114": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.InvokeExpressionNode::get_MainToken()": {
          "Lines": {
            "115": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Syntax.SyntaxNode> Delta.Slang.Syntax.InvokeExpressionNode::get_Children()": {
          "Lines": {
            "116": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.InvokeExpressionNode::get_FunctionName()": {
          "Lines": {
            "118": 2
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.InvokeExpressionNode::get_OpenParenthesis()": {
          "Lines": {
            "119": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.InvokeExpressionNode::get_CloseParenthesis()": {
          "Lines": {
            "120": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Syntax.ExpressionNode> Delta.Slang.Syntax.InvokeExpressionNode::get_Arguments()": {
          "Lines": {
            "121": 2
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.InvokeExpressionNode::.ctor(Delta.Slang.Syntax.Token,Delta.Slang.Syntax.Token,System.Collections.Generic.IEnumerable`1<Delta.Slang.Syntax.ExpressionNode>,Delta.Slang.Syntax.Token)": {
          "Lines": {
            "106": 2,
            "107": 2,
            "108": 2,
            "109": 2,
            "110": 2,
            "111": 2,
            "112": 2
          },
          "Branches": [
            {
              "Line": 108,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 108,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 109,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 109,
              "Offset": 33,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            },
            {
              "Line": 110,
              "Offset": 55,
              "EndOffset": 57,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 110,
              "Offset": 55,
              "EndOffset": 64,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 2
            },
            {
              "Line": 111,
              "Offset": 73,
              "EndOffset": 75,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 111,
              "Offset": 73,
              "EndOffset": 87,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 2
            }
          ]
        }
      },
      "Delta.Slang.Syntax.NameExpressionNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.NameExpressionNode::get_Kind()": {
          "Lines": {
            "129": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.NameExpressionNode::get_MainToken()": {
          "Lines": {
            "130": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.NameExpressionNode::get_Identifier()": {
          "Lines": {
            "133": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.NameExpressionNode::.ctor(Delta.Slang.Syntax.Token)": {
          "Lines": {
            "126": 0,
            "127": 0
          },
          "Branches": [
            {
              "Line": 127,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 127,
              "Offset": 10,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.NameExpressionNode/<get_Children>d__6": {
        "System.Boolean Delta.Slang.Syntax.NameExpressionNode/<get_Children>d__6::MoveNext()": {
          "Lines": {
            "131": 0
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Syntax\\nodes\\FunctionDeclarationNode.cs": {
      "Delta.Slang.Syntax.FunctionDeclarationNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.FunctionDeclarationNode::get_Kind()": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.FunctionDeclarationNode::get_MainToken()": {
          "Lines": {
            "17": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.FunctionDeclarationNode::get_FunctionName()": {
          "Lines": {
            "28": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.ParametersDeclarationNode Delta.Slang.Syntax.FunctionDeclarationNode::get_ParametersDeclaration()": {
          "Lines": {
            "29": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.TypeClauseNode Delta.Slang.Syntax.FunctionDeclarationNode::get_ReturnType()": {
          "Lines": {
            "30": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.BlockNode Delta.Slang.Syntax.FunctionDeclarationNode::get_Body()": {
          "Lines": {
            "31": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.FunctionDeclarationNode::.ctor(Delta.Slang.Syntax.Token,Delta.Slang.Syntax.ParametersDeclarationNode,Delta.Slang.Syntax.TypeClauseNode,Delta.Slang.Syntax.BlockNode)": {
          "Lines": {
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0
          },
          "Branches": [
            {
              "Line": 10,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 10,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 33,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 55,
              "EndOffset": 57,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 55,
              "EndOffset": 69,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 13,
              "Offset": 78,
              "EndOffset": 80,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 13,
              "Offset": 78,
              "EndOffset": 92,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.FunctionDeclarationNode/<get_Children>d__6": {
        "System.Boolean Delta.Slang.Syntax.FunctionDeclarationNode/<get_Children>d__6::MoveNext()": {
          "Lines": {
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Syntax\\nodes\\GlobalStatementNode.cs": {
      "Delta.Slang.Syntax.GlobalStatementNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.GlobalStatementNode::get_Kind()": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.GlobalStatementNode::get_MainToken()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.StatementNode Delta.Slang.Syntax.GlobalStatementNode::get_Statement()": {
          "Lines": {
            "14": 1
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.GlobalStatementNode::.ctor(Delta.Slang.Syntax.StatementNode)": {
          "Lines": {
            "8": 4
          },
          "Branches": [
            {
              "Line": 8,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 10,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            }
          ]
        }
      },
      "Delta.Slang.Syntax.GlobalStatementNode/<get_Children>d__6": {
        "System.Boolean Delta.Slang.Syntax.GlobalStatementNode/<get_Children>d__6::MoveNext()": {
          "Lines": {
            "12": 0
          },
          "Branches": [
            {
              "Line": 12,
              "Offset": 14,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 14,
              "EndOffset": 58,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Syntax\\nodes\\ParameterDeclarationNode.cs": {
      "Delta.Slang.Syntax.ParametersDeclarationNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.ParametersDeclarationNode::get_Kind()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.ParametersDeclarationNode::get_MainToken()": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Syntax.SyntaxNode> Delta.Slang.Syntax.ParametersDeclarationNode::get_Children()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Syntax.ParameterDeclarationNode> Delta.Slang.Syntax.ParametersDeclarationNode::get_Parameters()": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.ParametersDeclarationNode::.ctor(System.Collections.Generic.IEnumerable`1<Delta.Slang.Syntax.ParameterDeclarationNode>)": {
          "Lines": {
            "9": 0,
            "10": 0
          },
          "Branches": [
            {
              "Line": 10,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 10,
              "Offset": 9,
              "EndOffset": 19,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.ParameterDeclarationNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.ParameterDeclarationNode::get_Kind()": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.ParameterDeclarationNode::get_MainToken()": {
          "Lines": {
            "28": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.ParameterDeclarationNode::get_ParameterName()": {
          "Lines": {
            "31": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.TypeClauseNode Delta.Slang.Syntax.ParameterDeclarationNode::get_Type()": {
          "Lines": {
            "32": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.ParameterDeclarationNode::.ctor(Delta.Slang.Syntax.Token,Delta.Slang.Syntax.TypeClauseNode)": {
          "Lines": {
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0
          },
          "Branches": [
            {
              "Line": 23,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 24,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 24,
              "Offset": 33,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.ParameterDeclarationNode/<get_Children>d__6": {
        "System.Boolean Delta.Slang.Syntax.ParameterDeclarationNode/<get_Children>d__6::MoveNext()": {
          "Lines": {
            "29": 0
          },
          "Branches": [
            {
              "Line": 29,
              "Offset": 14,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 14,
              "EndOffset": 58,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Syntax\\nodes\\statements.cs": {
      "Delta.Slang.Syntax.BlockNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.BlockNode::get_Kind()": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.BlockNode::get_MainToken()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Syntax.SyntaxNode> Delta.Slang.Syntax.BlockNode::get_Children()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Syntax.StatementNode> Delta.Slang.Syntax.BlockNode::get_Statements()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.BlockNode::.ctor(System.Collections.Generic.IEnumerable`1<Delta.Slang.Syntax.StatementNode>)": {
          "Lines": {
            "8": 0
          },
          "Branches": [
            {
              "Line": 8,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 10,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.ExpressionStatementNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.ExpressionStatementNode::get_Kind()": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.ExpressionStatementNode::get_MainToken()": {
          "Lines": {
            "22": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.ExpressionNode Delta.Slang.Syntax.ExpressionStatementNode::get_Expression()": {
          "Lines": {
            "25": 1
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.ExpressionStatementNode::.ctor(Delta.Slang.Syntax.ExpressionNode)": {
          "Lines": {
            "19": 4
          },
          "Branches": [
            {
              "Line": 19,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 10,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            }
          ]
        }
      },
      "Delta.Slang.Syntax.ExpressionStatementNode/<get_Children>d__6": {
        "System.Boolean Delta.Slang.Syntax.ExpressionStatementNode/<get_Children>d__6::MoveNext()": {
          "Lines": {
            "23": 0
          },
          "Branches": [
            {
              "Line": 23,
              "Offset": 14,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 14,
              "EndOffset": 58,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.VariableDeclarationNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.VariableDeclarationNode::get_Kind()": {
          "Lines": {
            "39": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.VariableDeclarationNode::get_MainToken()": {
          "Lines": {
            "40": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.VariableDeclarationNode::get_VariableName()": {
          "Lines": {
            "50": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.TypeClauseNode Delta.Slang.Syntax.VariableDeclarationNode::get_Type()": {
          "Lines": {
            "51": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.ExpressionNode Delta.Slang.Syntax.VariableDeclarationNode::get_Initializer()": {
          "Lines": {
            "52": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.VariableDeclarationNode::.ctor(Delta.Slang.Syntax.Token,Delta.Slang.Syntax.TypeClauseNode,Delta.Slang.Syntax.ExpressionNode)": {
          "Lines": {
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0
          },
          "Branches": [
            {
              "Line": 34,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.VariableDeclarationNode/<get_Children>d__6": {
        "System.Boolean Delta.Slang.Syntax.VariableDeclarationNode/<get_Children>d__6::MoveNext()": {
          "Lines": {
            "44": 0,
            "45": 0,
            "46": 0,
            "47": 0
          },
          "Branches": [
            {
              "Line": 45,
              "Offset": 59,
              "EndOffset": 61,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 45,
              "Offset": 59,
              "EndOffset": 94,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 110,
              "EndOffset": 112,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 110,
              "EndOffset": 145,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.ReturnStatementNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.ReturnStatementNode::get_Kind()": {
          "Lines": {
            "63": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.ReturnStatementNode::get_MainToken()": {
          "Lines": {
            "64": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.ReturnStatementNode::get_ReturnToken()": {
          "Lines": {
            "73": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.ExpressionNode Delta.Slang.Syntax.ReturnStatementNode::get_Expression()": {
          "Lines": {
            "74": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.ReturnStatementNode::.ctor(Delta.Slang.Syntax.Token,Delta.Slang.Syntax.ExpressionNode)": {
          "Lines": {
            "57": 0,
            "58": 0,
            "59": 0,
            "60": 0,
            "61": 0
          },
          "Branches": [
            {
              "Line": 59,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 59,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.ReturnStatementNode/<get_Children>d__6": {
        "System.Boolean Delta.Slang.Syntax.ReturnStatementNode/<get_Children>d__6::MoveNext()": {
          "Lines": {
            "68": 0,
            "69": 0,
            "70": 0
          },
          "Branches": [
            {
              "Line": 68,
              "Offset": 14,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 48,
              "EndOffset": 50,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 68,
              "Offset": 14,
              "EndOffset": 76,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 48,
              "EndOffset": 83,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.IfStatementNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.IfStatementNode::get_Kind()": {
          "Lines": {
            "86": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.IfStatementNode::get_MainToken()": {
          "Lines": {
            "87": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.ExpressionNode Delta.Slang.Syntax.IfStatementNode::get_Condition()": {
          "Lines": {
            "98": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.StatementNode Delta.Slang.Syntax.IfStatementNode::get_Statement()": {
          "Lines": {
            "99": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.ElseClauseNode Delta.Slang.Syntax.IfStatementNode::get_Else()": {
          "Lines": {
            "100": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.IfStatementNode::.ctor(Delta.Slang.Syntax.ExpressionNode,Delta.Slang.Syntax.StatementNode,Delta.Slang.Syntax.ElseClauseNode)": {
          "Lines": {
            "79": 0,
            "80": 0,
            "81": 0,
            "82": 0,
            "83": 0,
            "84": 0
          },
          "Branches": [
            {
              "Line": 81,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 81,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 82,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 82,
              "Offset": 33,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.IfStatementNode/<get_Children>d__6": {
        "System.Boolean Delta.Slang.Syntax.IfStatementNode/<get_Children>d__6::MoveNext()": {
          "Lines": {
            "91": 0,
            "92": 0,
            "93": 0,
            "94": 0,
            "95": 0
          },
          "Branches": [
            {
              "Line": 94,
              "Offset": 131,
              "EndOffset": 133,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 94,
              "Offset": 131,
              "EndOffset": 166,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.ElseClauseNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.ElseClauseNode::get_Kind()": {
          "Lines": {
            "107": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.ElseClauseNode::get_MainToken()": {
          "Lines": {
            "108": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.StatementNode Delta.Slang.Syntax.ElseClauseNode::get_Statement()": {
          "Lines": {
            "111": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.ElseClauseNode::.ctor(Delta.Slang.Syntax.StatementNode)": {
          "Lines": {
            "105": 0
          },
          "Branches": [
            {
              "Line": 105,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 105,
              "Offset": 10,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.ElseClauseNode/<get_Children>d__6": {
        "System.Boolean Delta.Slang.Syntax.ElseClauseNode/<get_Children>d__6::MoveNext()": {
          "Lines": {
            "109": 0
          },
          "Branches": [
            {
              "Line": 109,
              "Offset": 14,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 109,
              "Offset": 14,
              "EndOffset": 58,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.GotoStatementNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.GotoStatementNode::get_Kind()": {
          "Lines": {
            "122": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.GotoStatementNode::get_MainToken()": {
          "Lines": {
            "123": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.GotoStatementNode::get_GotoToken()": {
          "Lines": {
            "126": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.NameExpressionNode Delta.Slang.Syntax.GotoStatementNode::get_Label()": {
          "Lines": {
            "127": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.GotoStatementNode::.ctor(Delta.Slang.Syntax.Token,Delta.Slang.Syntax.NameExpressionNode)": {
          "Lines": {
            "116": 0,
            "117": 0,
            "118": 0,
            "119": 0,
            "120": 0
          },
          "Branches": [
            {
              "Line": 118,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 118,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 119,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 119,
              "Offset": 33,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.GotoStatementNode/<get_Children>d__6": {
        "System.Boolean Delta.Slang.Syntax.GotoStatementNode/<get_Children>d__6::MoveNext()": {
          "Lines": {
            "124": 0
          },
          "Branches": [
            {
              "Line": 124,
              "Offset": 14,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 124,
              "Offset": 14,
              "EndOffset": 58,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.LabelStatementNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.LabelStatementNode::get_Kind()": {
          "Lines": {
            "134": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.LabelStatementNode::get_MainToken()": {
          "Lines": {
            "135": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.NameExpressionNode Delta.Slang.Syntax.LabelStatementNode::get_Label()": {
          "Lines": {
            "138": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.LabelStatementNode::.ctor(Delta.Slang.Syntax.NameExpressionNode)": {
          "Lines": {
            "132": 0
          },
          "Branches": [
            {
              "Line": 132,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 132,
              "Offset": 10,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.LabelStatementNode/<get_Children>d__6": {
        "System.Boolean Delta.Slang.Syntax.LabelStatementNode/<get_Children>d__6::MoveNext()": {
          "Lines": {
            "136": 0
          },
          "Branches": [
            {
              "Line": 136,
              "Offset": 14,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 136,
              "Offset": 14,
              "EndOffset": 58,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Syntax\\nodes\\TypeClauseNode.cs": {
      "Delta.Slang.Syntax.TypeClauseNode": {
        "Delta.Slang.Syntax.SyntaxKind Delta.Slang.Syntax.TypeClauseNode::get_Kind()": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.TypeClauseNode::get_MainToken()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.TypeClauseNode::get_TypeName()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.TypeClauseNode::.ctor(Delta.Slang.Syntax.Token)": {
          "Lines": {
            "8": 0
          },
          "Branches": [
            {
              "Line": 8,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 8,
              "Offset": 10,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.TypeClauseNode/<get_Children>d__6": {
        "System.Boolean Delta.Slang.Syntax.TypeClauseNode/<get_Children>d__6::MoveNext()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Syntax\\Parser.cs": {
      "Delta.Slang.Syntax.Parser": {
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.IDiagnostic> Delta.Slang.Syntax.Parser::get_Diagnostics()": {
          "Lines": {
            "24": 2
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.ParseTree Delta.Slang.Syntax.Parser::Parse()": {
          "Lines": {
            "27": 2,
            "28": 2,
            "29": 2,
            "30": 2
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.CompilationUnitNode Delta.Slang.Syntax.Parser::ParseCompilationUnit()": {
          "Lines": {
            "33": 2,
            "34": 2,
            "35": 2,
            "36": 2,
            "37": 2
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Syntax.MemberNode> Delta.Slang.Syntax.Parser::ParseCompilationUnitContent()": {
          "Lines": {
            "40": 2,
            "41": 2,
            "42": 4,
            "43": 2,
            "44": 2,
            "46": 2,
            "47": 2,
            "56": 2,
            "57": 0,
            "58": 2,
            "60": 2,
            "61": 2
          },
          "Branches": [
            {
              "Line": 42,
              "Offset": 71,
              "EndOffset": 9,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            },
            {
              "Line": 56,
              "Offset": 43,
              "EndOffset": 45,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 56,
              "Offset": 43,
              "EndOffset": 52,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 42,
              "Offset": 71,
              "EndOffset": 73,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 2
            }
          ]
        },
        "Delta.Slang.Syntax.MemberNode Delta.Slang.Syntax.Parser::ParseMember()": {
          "Lines": {
            "63": 2
          },
          "Branches": [
            {
              "Line": 63,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 63,
              "Offset": 13,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Syntax.FunctionDeclarationNode Delta.Slang.Syntax.Parser::ParseFunctionDeclaration()": {
          "Lines": {
            "66": 0,
            "67": 0,
            "68": 0,
            "69": 0,
            "70": 0,
            "71": 0,
            "72": 0,
            "73": 0,
            "74": 0,
            "75": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.GlobalStatementNode Delta.Slang.Syntax.Parser::ParseGlobalStatement()": {
          "Lines": {
            "78": 2,
            "79": 2,
            "80": 2,
            "81": 2
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.ParametersDeclarationNode Delta.Slang.Syntax.Parser::ParseParametersDeclaration()": {
          "Lines": {
            "84": 0,
            "85": 0,
            "87": 0,
            "88": 0,
            "89": 0,
            "90": 0,
            "91": 0,
            "93": 0,
            "94": 0,
            "95": 0,
            "96": 0,
            "98": 0,
            "99": 0
          },
          "Branches": [
            {
              "Line": 88,
              "Offset": 98,
              "EndOffset": 11,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 93,
              "Offset": 44,
              "EndOffset": 46,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 93,
              "Offset": 44,
              "EndOffset": 57,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 88,
              "Offset": 61,
              "EndOffset": 63,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 88,
              "Offset": 75,
              "EndOffset": 77,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 88,
              "Offset": 61,
              "EndOffset": 93,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 88,
              "Offset": 75,
              "EndOffset": 93,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 88,
              "Offset": 98,
              "EndOffset": 100,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Syntax.ParameterDeclarationNode Delta.Slang.Syntax.Parser::ParseParameterDeclaration()": {
          "Lines": {
            "102": 0,
            "103": 0,
            "104": 0,
            "105": 0,
            "106": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.TypeClauseNode Delta.Slang.Syntax.Parser::ParseTypeClause()": {
          "Lines": {
            "109": 0,
            "110": 0,
            "111": 0,
            "112": 0,
            "113": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.TypeClauseNode Delta.Slang.Syntax.Parser::ParseOptionalTypeClause()": {
          "Lines": {
            "116": 0,
            "117": 0,
            "118": 0,
            "121": 0,
            "122": 0,
            "123": 0,
            "124": 0,
            "125": 0,
            "126": 0,
            "127": 0
          },
          "Branches": [
            {
              "Line": 117,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 117,
              "Offset": 18,
              "EndOffset": 29,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Syntax.BlockNode Delta.Slang.Syntax.Parser::ParseBlock()": {
          "Lines": {
            "130": 0,
            "131": 0,
            "133": 0,
            "134": 0,
            "135": 0,
            "136": 0,
            "138": 0,
            "139": 0,
            "144": 0,
            "145": 0,
            "146": 0,
            "148": 0,
            "149": 0,
            "150": 0
          },
          "Branches": [
            {
              "Line": 134,
              "Offset": 98,
              "EndOffset": 18,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 144,
              "Offset": 52,
              "EndOffset": 54,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 144,
              "Offset": 52,
              "EndOffset": 61,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 134,
              "Offset": 75,
              "EndOffset": 77,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 134,
              "Offset": 75,
              "EndOffset": 93,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 134,
              "Offset": 98,
              "EndOffset": 100,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.Parser::MatchToken(Delta.Slang.Syntax.TokenKind)": {
          "Lines": {
            "153": 16,
            "154": 16,
            "155": 32,
            "157": 0,
            "158": 0,
            "159": 16
          },
          "Branches": [
            {
              "Line": 155,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 16
            },
            {
              "Line": 155,
              "Offset": 19,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.Parser::get_Current()": {
          "Lines": {
            "161": 46
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.Parser::Next()": {
          "Lines": {
            "164": 16,
            "165": 16,
            "166": 16,
            "167": 16,
            "168": 16
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.Parser::Advance()": {
          "Lines": {
            "170": 16
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.Parser::Peek(System.Int32)": {
          "Lines": {
            "173": 74,
            "174": 74,
            "175": 74,
            "176": 74,
            "177": 74,
            "178": 74
          },
          "Branches": [
            {
              "Line": 175,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 74
            },
            {
              "Line": 175,
              "Offset": 19,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Syntax.Parser::.ctor(System.Collections.Generic.IEnumerable`1<Delta.Slang.Syntax.Token>)": {
          "Lines": {
            "15": 2,
            "16": 2,
            "17": 0,
            "18": 2,
            "19": 2,
            "20": 18,
            "21": 2,
            "22": 2
          },
          "Branches": [
            {
              "Line": 17,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 14,
              "EndOffset": 27,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 19,
              "Offset": 46,
              "EndOffset": 48,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 19,
              "Offset": 46,
              "EndOffset": 71,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            },
            {
              "Line": 20,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 16
            },
            {
              "Line": 20,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 16
            },
            {
              "Line": 20,
              "Offset": 8,
              "EndOffset": 34,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 17,
              "EndOffset": 34,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Syntax\\Parser.expressions.cs": {
      "Delta.Slang.Syntax.Parser": {
        "Delta.Slang.Syntax.ExpressionNode Delta.Slang.Syntax.Parser::ParseExpression()": {
          "Lines": {
            "9": 4,
            "10": 4,
            "11": 4
          },
          "Branches": [
            {
              "Line": 9,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 9,
              "Offset": 14,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 4
            },
            {
              "Line": 9,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 4
            },
            {
              "Line": 9,
              "Offset": 30,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Syntax.AssignmentExpressionNode Delta.Slang.Syntax.Parser::ParseAssignmentExpression()": {
          "Lines": {
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "19": 0,
            "20": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.ExpressionNode Delta.Slang.Syntax.Parser::ParseUnaryOrBinaryOrPrimaryExpression(System.Int32)": {
          "Lines": {
            "23": 4,
            "25": 4,
            "26": 4,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "32": 4,
            "34": 4,
            "35": 4,
            "36": 4,
            "37": 4,
            "38": 4,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 0,
            "45": 4,
            "46": 4
          },
          "Branches": [
            {
              "Line": 26,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 19,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 4
            },
            {
              "Line": 26,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 33,
              "EndOffset": 64,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 4
            },
            {
              "Line": 37,
              "Offset": 94,
              "EndOffset": 96,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 94,
              "EndOffset": 106,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 4
            },
            {
              "Line": 37,
              "Offset": 111,
              "EndOffset": 115,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 111,
              "EndOffset": 150,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 4
            }
          ]
        },
        "Delta.Slang.Syntax.ExpressionNode Delta.Slang.Syntax.Parser::ParsePrimaryExpression()": {
          "Lines": {
            "49": 4,
            "50": 4,
            "52": 0,
            "54": 0,
            "55": 0,
            "56": 0,
            "57": 2,
            "60": 2,
            "62": 4
          },
          "Branches": [
            {
              "Line": 50,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 50,
              "Offset": 22,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 2
            },
            {
              "Line": 50,
              "Offset": 18,
              "EndOffset": 57,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 50,
              "Offset": 62,
              "EndOffset": 66,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 2
            },
            {
              "Line": 50,
              "Offset": 22,
              "EndOffset": 73,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 62,
              "EndOffset": 82,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 30,
              "EndOffset": 91,
              "Path": 4,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 30,
              "EndOffset": 100,
              "Path": 5,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 30,
              "EndOffset": 109,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 2
            },
            {
              "Line": 50,
              "Offset": 30,
              "EndOffset": 118,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 2
            },
            {
              "Line": 50,
              "Offset": 30,
              "EndOffset": 118,
              "Path": 2,
              "Ordinal": 6,
              "Hits": 2
            },
            {
              "Line": 50,
              "Offset": 30,
              "EndOffset": 118,
              "Path": 3,
              "Ordinal": 7,
              "Hits": 2
            },
            {
              "Line": 50,
              "Offset": 69,
              "EndOffset": 118,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 2
            },
            {
              "Line": 50,
              "Offset": 69,
              "EndOffset": 118,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 2
            }
          ]
        },
        "Delta.Slang.Syntax.ParenthesizedExpressionNode Delta.Slang.Syntax.Parser::ParseParenthesizedExpression()": {
          "Lines": {
            "65": 0,
            "66": 0,
            "67": 0,
            "68": 0,
            "69": 0,
            "70": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.LiteralExpressionNode Delta.Slang.Syntax.Parser::ParseBoolLiteral()": {
          "Lines": {
            "73": 0,
            "74": 0,
            "75": 0,
            "76": 0,
            "77": 0
          },
          "Branches": [
            {
              "Line": 75,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 75,
              "Offset": 18,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Syntax.LiteralExpressionNode Delta.Slang.Syntax.Parser::ParseIntLiteral()": {
          "Lines": {
            "80": 0,
            "81": 0,
            "82": 0,
            "83": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.LiteralExpressionNode Delta.Slang.Syntax.Parser::ParseDoubleLiteral()": {
          "Lines": {
            "86": 0,
            "87": 0,
            "88": 0,
            "89": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.LiteralExpressionNode Delta.Slang.Syntax.Parser::ParseStringLiteral()": {
          "Lines": {
            "92": 2,
            "93": 2,
            "94": 2,
            "95": 2,
            "96": 2,
            "97": 2
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.ExpressionNode Delta.Slang.Syntax.Parser::ParseNameOrInvokeExpression()": {
          "Lines": {
            "100": 2,
            "101": 2,
            "102": 2
          },
          "Branches": [
            {
              "Line": 100,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 100,
              "Offset": 14,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 100,
              "Offset": 29,
              "EndOffset": 31,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 100,
              "Offset": 29,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            }
          ]
        },
        "Delta.Slang.Syntax.ExpressionNode Delta.Slang.Syntax.Parser::ParseInvokeExpression()": {
          "Lines": {
            "105": 2,
            "106": 2,
            "107": 2,
            "108": 2,
            "109": 2,
            "111": 2,
            "112": 2
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Syntax.ExpressionNode> Delta.Slang.Syntax.Parser::ParseArguments()": {
          "Lines": {
            "115": 2,
            "116": 2,
            "118": 2,
            "119": 4,
            "120": 2,
            "121": 2,
            "122": 2,
            "124": 2,
            "125": 0,
            "126": 2,
            "127": 2,
            "129": 2,
            "130": 2
          },
          "Branches": [
            {
              "Line": 119,
              "Offset": 98,
              "EndOffset": 11,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 2
            },
            {
              "Line": 124,
              "Offset": 44,
              "EndOffset": 46,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 124,
              "Offset": 44,
              "EndOffset": 57,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 119,
              "Offset": 61,
              "EndOffset": 63,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 2
            },
            {
              "Line": 119,
              "Offset": 75,
              "EndOffset": 77,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 2
            },
            {
              "Line": 119,
              "Offset": 61,
              "EndOffset": 93,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            },
            {
              "Line": 119,
              "Offset": 75,
              "EndOffset": 93,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 2
            },
            {
              "Line": 119,
              "Offset": 98,
              "EndOffset": 100,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 2
            }
          ]
        },
        "Delta.Slang.Syntax.NameExpressionNode Delta.Slang.Syntax.Parser::ParseNameExpression()": {
          "Lines": {
            "133": 0,
            "134": 0,
            "135": 0,
            "136": 0
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Syntax\\Parser.statements.cs": {
      "Delta.Slang.Syntax.Parser": {
        "Delta.Slang.Syntax.StatementNode Delta.Slang.Syntax.Parser::ParseStatement()": {
          "Lines": {
            "8": 2,
            "9": 2,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "20": 0,
            "21": 2,
            "22": 0,
            "24": 2
          },
          "Branches": [
            {
              "Line": 9,
              "Offset": 18,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 9,
              "Offset": 18,
              "EndOffset": 69,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 26,
              "EndOffset": 78,
              "Path": 3,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 26,
              "EndOffset": 87,
              "Path": 7,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 26,
              "EndOffset": 96,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 26,
              "EndOffset": 105,
              "Path": 4,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 26,
              "EndOffset": 114,
              "Path": 9,
              "Ordinal": 11,
              "Hits": 2
            },
            {
              "Line": 9,
              "Offset": 26,
              "EndOffset": 123,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 26,
              "EndOffset": 123,
              "Path": 2,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 26,
              "EndOffset": 123,
              "Path": 5,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 26,
              "EndOffset": 123,
              "Path": 6,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 9,
              "Offset": 26,
              "EndOffset": 123,
              "Path": 8,
              "Ordinal": 10,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Syntax.VariableDeclarationNode Delta.Slang.Syntax.Parser::ParseVariableDeclaration()": {
          "Lines": {
            "27": 0,
            "28": 0,
            "29": 0,
            "31": 0,
            "33": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "38": 0,
            "39": 0,
            "41": 0,
            "43": 0,
            "44": 0,
            "45": 0,
            "47": 0,
            "48": 0
          },
          "Branches": [
            {
              "Line": 31,
              "Offset": 32,
              "EndOffset": 34,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 31,
              "Offset": 32,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 63,
              "EndOffset": 65,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 63,
              "EndOffset": 81,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 91,
              "EndOffset": 93,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 91,
              "EndOffset": 99,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 104,
              "EndOffset": 106,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 104,
              "EndOffset": 136,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Syntax.IfStatementNode Delta.Slang.Syntax.Parser::ParseIfStatement()": {
          "Lines": {
            "51": 0,
            "52": 0,
            "53": 0,
            "54": 0,
            "55": 0,
            "56": 0,
            "57": 0,
            "58": 0,
            "59": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.GotoStatementNode Delta.Slang.Syntax.Parser::ParseGotoStatement()": {
          "Lines": {
            "62": 0,
            "63": 0,
            "64": 0,
            "65": 0,
            "66": 0,
            "67": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.StatementNode Delta.Slang.Syntax.Parser::ParseIdentifierStatement()": {
          "Lines": {
            "70": 2,
            "71": 2,
            "72": 2
          },
          "Branches": [
            {
              "Line": 70,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 70,
              "Offset": 14,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Syntax.LabelStatementNode Delta.Slang.Syntax.Parser::ParseLabelStatement()": {
          "Lines": {
            "75": 0,
            "76": 0,
            "77": 0,
            "78": 0,
            "79": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.ElseClauseNode Delta.Slang.Syntax.Parser::ParseElseClause()": {
          "Lines": {
            "82": 0,
            "83": 0,
            "84": 0,
            "86": 0,
            "87": 0,
            "88": 0,
            "89": 0
          },
          "Branches": [
            {
              "Line": 83,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 83,
              "Offset": 21,
              "EndOffset": 27,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Syntax.ReturnStatementNode Delta.Slang.Syntax.Parser::ParseReturnStatement()": {
          "Lines": {
            "92": 0,
            "93": 0,
            "94": 0,
            "95": 0,
            "97": 0,
            "98": 0
          },
          "Branches": [
            {
              "Line": 94,
              "Offset": 23,
              "EndOffset": 25,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 94,
              "Offset": 23,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Syntax.ExpressionStatementNode Delta.Slang.Syntax.Parser::ParseExpressionStatement()": {
          "Lines": {
            "101": 2,
            "102": 2,
            "103": 2,
            "104": 2,
            "105": 2
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Syntax\\ParseTree.cs": {
      "Delta.Slang.Syntax.ParseTree": {
        "Delta.Slang.Syntax.CompilationUnitNode Delta.Slang.Syntax.ParseTree::get_Root()": {
          "Lines": {
            "8": 1
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.ParseTree::.ctor(Delta.Slang.Syntax.CompilationUnitNode)": {
          "Lines": {
            "7": 4
          },
          "Branches": [
            {
              "Line": 7,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 7,
              "Offset": 10,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Syntax\\Token.cs": {
      "Delta.Slang.Syntax.Token": {
        "Delta.Slang.Syntax.TokenKind Delta.Slang.Syntax.Token::get_Kind()": {
          "Lines": {
            "18": 118
          },
          "Branches": []
        },
        "Delta.Slang.Text.TextSpan Delta.Slang.Syntax.Token::get_Span()": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "Delta.Slang.Text.LinePosition Delta.Slang.Syntax.Token::get_Position()": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "System.String Delta.Slang.Syntax.Token::get_Text()": {
          "Lines": {
            "21": 2
          },
          "Branches": []
        },
        "System.Object Delta.Slang.Syntax.Token::get_Value()": {
          "Lines": {
            "22": 2
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Syntax.Token::get_IsForged()": {
          "Lines": {
            "23": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.Token Delta.Slang.Syntax.Token::MakeEof(System.Int32,Delta.Slang.Text.LinePosition)": {
          "Lines": {
            "25": 2
          },
          "Branches": []
        },
        "System.String Delta.Slang.Syntax.Token::ToString()": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.Token::.ctor(Delta.Slang.Syntax.TokenKind,Delta.Slang.Text.TextSpan,Delta.Slang.Text.LinePosition,System.String,System.Boolean)": {
          "Lines": {
            "7": 6
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Syntax.Token::.ctor(Delta.Slang.Syntax.TokenKind,Delta.Slang.Text.TextSpan,Delta.Slang.Text.LinePosition,System.String,System.Object,System.Boolean)": {
          "Lines": {
            "8": 16,
            "9": 16,
            "10": 16,
            "11": 16,
            "12": 16,
            "13": 16,
            "14": 16,
            "15": 16,
            "16": 16
          },
          "Branches": [
            {
              "Line": 13,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 13,
              "Offset": 33,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 16
            }
          ]
        }
      },
      "Delta.Slang.Syntax.TokenExtensions": {
        "System.Boolean Delta.Slang.Syntax.TokenExtensions::IsKeyword(Delta.Slang.Syntax.Token)": {
          "Lines": {
            "32": 0
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Syntax\\TokenKind.cs": {
      "Delta.Slang.Syntax.TokenKindConversions": {
        "Delta.Slang.Syntax.TokenKind Delta.Slang.Syntax.TokenKindConversions::GetIdentifierOrKeyword(System.String)": {
          "Lines": {
            "52": 2,
            "53": 2,
            "55": 0,
            "56": 0,
            "57": 0,
            "58": 0,
            "59": 0,
            "60": 0,
            "61": 0,
            "62": 0,
            "63": 2,
            "65": 2
          },
          "Branches": [
            {
              "Line": 53,
              "Offset": 6,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 53,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 2
            },
            {
              "Line": 53,
              "Offset": 32,
              "EndOffset": 34,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 2
            },
            {
              "Line": 53,
              "Offset": 40,
              "EndOffset": 47,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 2
            },
            {
              "Line": 53,
              "Offset": 32,
              "EndOffset": 63,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 69,
              "EndOffset": 76,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 24,
              "EndOffset": 92,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 98,
              "EndOffset": 100,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 106,
              "EndOffset": 110,
              "Path": 0,
              "Ordinal": 16,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 98,
              "EndOffset": 123,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 129,
              "EndOffset": 133,
              "Path": 0,
              "Ordinal": 20,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 139,
              "EndOffset": 146,
              "Path": 1,
              "Ordinal": 23,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 116,
              "EndOffset": 164,
              "Path": 1,
              "Ordinal": 19,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 106,
              "EndOffset": 182,
              "Path": 1,
              "Ordinal": 17,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 53,
              "EndOffset": 197,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 129,
              "EndOffset": 212,
              "Path": 1,
              "Ordinal": 21,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 82,
              "EndOffset": 227,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 69,
              "EndOffset": 242,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 40,
              "EndOffset": 257,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 157,
              "EndOffset": 272,
              "Path": 1,
              "Ordinal": 25,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 175,
              "EndOffset": 277,
              "Path": 1,
              "Ordinal": 27,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 193,
              "EndOffset": 282,
              "Path": 1,
              "Ordinal": 29,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 208,
              "EndOffset": 287,
              "Path": 1,
              "Ordinal": 31,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 223,
              "EndOffset": 292,
              "Path": 1,
              "Ordinal": 33,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 238,
              "EndOffset": 297,
              "Path": 1,
              "Ordinal": 35,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 253,
              "EndOffset": 302,
              "Path": 1,
              "Ordinal": 37,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 268,
              "EndOffset": 307,
              "Path": 1,
              "Ordinal": 39,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 6,
              "EndOffset": 312,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 53,
              "Offset": 53,
              "EndOffset": 312,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 2
            },
            {
              "Line": 53,
              "Offset": 82,
              "EndOffset": 312,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 2
            },
            {
              "Line": 53,
              "Offset": 116,
              "EndOffset": 312,
              "Path": 0,
              "Ordinal": 18,
              "Hits": 2
            },
            {
              "Line": 53,
              "Offset": 139,
              "EndOffset": 312,
              "Path": 0,
              "Ordinal": 22,
              "Hits": 2
            },
            {
              "Line": 53,
              "Offset": 157,
              "EndOffset": 312,
              "Path": 0,
              "Ordinal": 24,
              "Hits": 2
            },
            {
              "Line": 53,
              "Offset": 175,
              "EndOffset": 312,
              "Path": 0,
              "Ordinal": 26,
              "Hits": 2
            },
            {
              "Line": 53,
              "Offset": 193,
              "EndOffset": 312,
              "Path": 0,
              "Ordinal": 28,
              "Hits": 2
            },
            {
              "Line": 53,
              "Offset": 208,
              "EndOffset": 312,
              "Path": 0,
              "Ordinal": 30,
              "Hits": 2
            },
            {
              "Line": 53,
              "Offset": 223,
              "EndOffset": 312,
              "Path": 0,
              "Ordinal": 32,
              "Hits": 2
            },
            {
              "Line": 53,
              "Offset": 238,
              "EndOffset": 312,
              "Path": 0,
              "Ordinal": 34,
              "Hits": 2
            },
            {
              "Line": 53,
              "Offset": 253,
              "EndOffset": 312,
              "Path": 0,
              "Ordinal": 36,
              "Hits": 2
            },
            {
              "Line": 53,
              "Offset": 268,
              "EndOffset": 312,
              "Path": 0,
              "Ordinal": 38,
              "Hits": 2
            }
          ]
        },
        "System.String Delta.Slang.Syntax.TokenKindConversions::GetText(Delta.Slang.Syntax.TokenKind)": {
          "Lines": {
            "68": 0,
            "69": 0,
            "71": 0,
            "72": 0,
            "73": 0,
            "74": 0,
            "75": 0,
            "76": 0,
            "77": 0,
            "78": 0,
            "80": 0,
            "81": 0,
            "82": 0,
            "83": 0,
            "89": 0,
            "90": 0,
            "91": 0,
            "92": 0,
            "93": 0,
            "94": 0,
            "95": 0,
            "96": 0,
            "97": 0,
            "98": 0,
            "99": 0,
            "103": 0,
            "104": 0,
            "106": 0,
            "107": 0,
            "113": 0,
            "115": 0
          },
          "Branches": [
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 154,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 165,
              "Path": 2,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 176,
              "Path": 3,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 187,
              "Path": 4,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 198,
              "Path": 17,
              "Ordinal": 17,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 209,
              "Path": 18,
              "Ordinal": 18,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 220,
              "Path": 19,
              "Ordinal": 19,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 231,
              "Path": 20,
              "Ordinal": 20,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 242,
              "Path": 13,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 253,
              "Path": 14,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 264,
              "Path": 15,
              "Ordinal": 15,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 275,
              "Path": 16,
              "Ordinal": 16,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 286,
              "Path": 6,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 294,
              "Path": 7,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 302,
              "Path": 8,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 310,
              "Path": 9,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 318,
              "Path": 10,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 326,
              "Path": 11,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 334,
              "Path": 12,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 342,
              "Path": 32,
              "Ordinal": 32,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 350,
              "Path": 31,
              "Ordinal": 31,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 358,
              "Path": 29,
              "Ordinal": 29,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 366,
              "Path": 30,
              "Ordinal": 30,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 374,
              "Path": 27,
              "Ordinal": 27,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 382,
              "Path": 28,
              "Ordinal": 28,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 390,
              "Path": 33,
              "Ordinal": 33,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 398,
              "Path": 34,
              "Ordinal": 34,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 406,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 406,
              "Path": 5,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 406,
              "Path": 21,
              "Ordinal": 21,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 406,
              "Path": 22,
              "Ordinal": 22,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 406,
              "Path": 23,
              "Ordinal": 23,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 406,
              "Path": 24,
              "Ordinal": 24,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 406,
              "Path": 25,
              "Ordinal": 25,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 8,
              "EndOffset": 406,
              "Path": 26,
              "Ordinal": 26,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Syntax.TokenKindExtensions": {
        "System.String Delta.Slang.Syntax.TokenKindExtensions::GetText(Delta.Slang.Syntax.TokenKind)": {
          "Lines": {
            "120": 0
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Symbols\\builtins.cs": {
      "Delta.Slang.Symbols.BuiltinTypes": {
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Symbols.BuiltinTypes::get_Invalid()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Symbols.BuiltinTypes::get_Int()": {
          "Lines": {
            "8": 5
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Symbols.BuiltinTypes::get_Double()": {
          "Lines": {
            "9": 5
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Symbols.BuiltinTypes::get_Bool()": {
          "Lines": {
            "10": 3
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Symbols.BuiltinTypes::get_String()": {
          "Lines": {
            "11": 7
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Symbols.BuiltinTypes::get_Void()": {
          "Lines": {
            "12": 4
          },
          "Branches": []
        }
      },
      "Delta.Slang.Symbols.BuiltinTypes/<get_All>d__19": {
        "System.Boolean Delta.Slang.Symbols.BuiltinTypes/<get_All>d__19::MoveNext()": {
          "Lines": {
            "17": 1,
            "18": 1,
            "19": 1,
            "20": 1,
            "21": 1,
            "22": 1,
            "23": 1
          },
          "Branches": []
        }
      },
      "Delta.Slang.Symbols.BuiltinFunctions": {
        "Delta.Slang.Symbols.FunctionSymbol Delta.Slang.Symbols.BuiltinFunctions::get_Print()": {
          "Lines": {
            "29": 2
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.FunctionSymbol Delta.Slang.Symbols.BuiltinFunctions::get_Input()": {
          "Lines": {
            "34": 2
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.FunctionSymbol Delta.Slang.Symbols.BuiltinFunctions::get_Rndi()": {
          "Lines": {
            "39": 2
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.FunctionSymbol Delta.Slang.Symbols.BuiltinFunctions::get_Rnd()": {
          "Lines": {
            "44": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Symbols.BuiltinFunctions::.cctor()": {
          "Lines": {
            "30": 1,
            "31": 1,
            "32": 1,
            "35": 1,
            "36": 1,
            "37": 1,
            "40": 1,
            "41": 1,
            "42": 1,
            "45": 1,
            "46": 1,
            "47": 1
          },
          "Branches": []
        }
      },
      "Delta.Slang.Symbols.BuiltinFunctions/<get_All>d__13": {
        "System.Boolean Delta.Slang.Symbols.BuiltinFunctions/<get_All>d__13::MoveNext()": {
          "Lines": {
            "52": 1,
            "53": 1,
            "54": 1,
            "55": 1,
            "56": 1
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Symbols\\FunctionSymbol.cs": {
      "Delta.Slang.Symbols.FunctionSymbol": {
        "Delta.Slang.Symbols.SymbolKind Delta.Slang.Symbols.FunctionSymbol::get_Kind()": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.FunctionDeclarationNode Delta.Slang.Symbols.FunctionSymbol::get_Declaration()": {
          "Lines": {
            "17": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Symbols.ParameterSymbol> Delta.Slang.Symbols.FunctionSymbol::get_Parameters()": {
          "Lines": {
            "18": 1
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Symbols.FunctionSymbol::get_Type()": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Symbols.FunctionSymbol::.ctor(System.String,System.Collections.Generic.IEnumerable`1<Delta.Slang.Symbols.ParameterSymbol>,Delta.Slang.Symbols.TypeSymbol,Delta.Slang.Syntax.FunctionDeclarationNode)": {
          "Lines": {
            "9": 4,
            "10": 4,
            "11": 4,
            "12": 4,
            "13": 4,
            "14": 4
          },
          "Branches": [
            {
              "Line": 11,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 12,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 4
            },
            {
              "Line": 12,
              "Offset": 34,
              "EndOffset": 36,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 34,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 4
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Symbols\\LabelSymbol.cs": {
      "Delta.Slang.Symbols.LabelSymbol": {
        "Delta.Slang.Symbols.SymbolKind Delta.Slang.Symbols.LabelSymbol::get_Kind()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Symbols.LabelSymbol::.ctor(System.String)": {
          "Lines": {
            "5": 0
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Symbols\\ParameterSymbol.cs": {
      "Delta.Slang.Symbols.ParameterSymbol": {
        "Delta.Slang.Symbols.SymbolKind Delta.Slang.Symbols.ParameterSymbol::get_Kind()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Symbols.ParameterSymbol::.ctor(System.String,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "5": 9
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Symbols\\Symbol.cs": {
      "Delta.Slang.Symbols.Symbol": {
        "System.String Delta.Slang.Symbols.Symbol::get_Name()": {
          "Lines": {
            "10": 11
          },
          "Branches": []
        },
        "System.String Delta.Slang.Symbols.Symbol::ToString()": {
          "Lines": {
            "13": 0
          },
          "Branches": [
            {
              "Line": 13,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 13,
              "Offset": 7,
              "EndOffset": 15,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Symbols.Symbol::.ctor(System.String)": {
          "Lines": {
            "8": 26
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Symbols\\SymbolTable.cs": {
      "Delta.Slang.Symbols.SymbolTable": {
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Symbols.Symbol> Delta.Slang.Symbols.SymbolTable::get_All()": {
          "Lines": {
            "9": 1
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Symbols.SymbolTable::Contains(System.String)": {
          "Lines": {
            "11": 4
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Symbols.SymbolTable::Add(Delta.Slang.Symbols.Symbol)": {
          "Lines": {
            "12": 3
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Symbols.SymbolTable::TryAdd(Delta.Slang.Symbols.Symbol)": {
          "Lines": {
            "15": 3,
            "16": 0,
            "17": 3,
            "18": 3,
            "19": 3
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 15,
              "EndOffset": 17,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 15,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            }
          ]
        },
        "System.Boolean Delta.Slang.Symbols.SymbolTable::TryGet(System.String,Delta.Slang.Symbols.Symbol&)": {
          "Lines": {
            "22": 1,
            "23": 1,
            "25": 1,
            "26": 0,
            "28": 1,
            "29": 1,
            "30": 1
          },
          "Branches": [
            {
              "Line": 25,
              "Offset": 16,
              "EndOffset": 18,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 16,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        },
        "System.Void Delta.Slang.Symbols.SymbolTable::.ctor()": {
          "Lines": {
            "7": 1
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Symbols\\TypeSymbol.cs": {
      "Delta.Slang.Symbols.TypeSymbol": {
        "Delta.Slang.Symbols.SymbolKind Delta.Slang.Symbols.TypeSymbol::get_Kind()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.Object Delta.Slang.Symbols.TypeSymbol::get_DefaultValue()": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Symbols.TypeSymbol::.ctor(System.String,System.Object)": {
          "Lines": {
            "5": 12
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Symbols\\variables.cs": {
      "Delta.Slang.Symbols.VariableSymbol": {
        "System.Boolean Delta.Slang.Symbols.VariableSymbol::get_IsReadOnly()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Symbols.VariableSymbol::get_Type()": {
          "Lines": {
            "12": 1
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Symbols.VariableSymbol::.ctor(System.String,System.Boolean,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "5": 3,
            "6": 3,
            "7": 3,
            "8": 3,
            "9": 3
          },
          "Branches": []
        }
      },
      "Delta.Slang.Symbols.GlobalVariableSymbol": {
        "Delta.Slang.Symbols.SymbolKind Delta.Slang.Symbols.GlobalVariableSymbol::get_Kind()": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Symbols.GlobalVariableSymbol::.ctor(System.String,System.Boolean,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "17": 0
          },
          "Branches": []
        }
      },
      "Delta.Slang.Symbols.LocalVariableSymbol": {
        "Delta.Slang.Symbols.SymbolKind Delta.Slang.Symbols.LocalVariableSymbol::get_Kind()": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Symbols.LocalVariableSymbol::.ctor(System.String,System.Boolean,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "24": 9
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Semantic\\BinaryOperator .cs": {
      "Delta.Slang.Semantic.BinaryOperator": {
        "Delta.Slang.Syntax.TokenKind Delta.Slang.Semantic.BinaryOperator::get_TokenKind()": {
          "Lines": {
            "39": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.BinaryOperatorKind Delta.Slang.Semantic.BinaryOperator::get_Kind()": {
          "Lines": {
            "40": 0
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Semantic.BinaryOperator::get_LeftType()": {
          "Lines": {
            "41": 0
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Semantic.BinaryOperator::get_RightType()": {
          "Lines": {
            "42": 0
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Semantic.BinaryOperator::get_Type()": {
          "Lines": {
            "43": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.BinaryOperator::.ctor(Delta.Slang.Syntax.TokenKind,Delta.Slang.Semantic.BinaryOperatorKind,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "28": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.BinaryOperator::.ctor(Delta.Slang.Syntax.TokenKind,Delta.Slang.Semantic.BinaryOperatorKind,Delta.Slang.Symbols.TypeSymbol,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "29": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.BinaryOperator::.ctor(Delta.Slang.Syntax.TokenKind,Delta.Slang.Semantic.BinaryOperatorKind,Delta.Slang.Symbols.TypeSymbol,Delta.Slang.Symbols.TypeSymbol,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0
          },
          "Branches": [
            {
              "Line": 34,
              "Offset": 25,
              "EndOffset": 27,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 25,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 48,
              "EndOffset": 50,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 48,
              "EndOffset": 62,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 36,
              "Offset": 71,
              "EndOffset": 73,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 36,
              "Offset": 71,
              "EndOffset": 85,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Semantic.BinaryOperatorBinder": {
        "Delta.Slang.Semantic.BinaryOperator Delta.Slang.Semantic.BinaryOperatorBinder::Bind(Delta.Slang.Syntax.TokenKind,Delta.Slang.Symbols.TypeSymbol,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "78": 0,
            "79": 0,
            "80": 0,
            "81": 0,
            "82": 0,
            "83": 0,
            "85": 0,
            "86": 0
          },
          "Branches": [
            {
              "Line": 79,
              "Offset": 65,
              "EndOffset": 12,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 81,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 81,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 81,
              "Offset": 24,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 81,
              "Offset": 33,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 81,
              "Offset": 49,
              "EndOffset": 51,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 81,
              "Offset": 49,
              "EndOffset": 56,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 79,
              "Offset": 65,
              "EndOffset": 67,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Semantic.BinaryOperatorBinder::.cctor()": {
          "Lines": {
            "48": 0,
            "49": 0,
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 0,
            "54": 0,
            "55": 0,
            "56": 0,
            "57": 0,
            "58": 0,
            "59": 0,
            "60": 0,
            "61": 0,
            "62": 0,
            "63": 0,
            "64": 0,
            "65": 0,
            "66": 0,
            "67": 0,
            "68": 0,
            "69": 0,
            "70": 0,
            "71": 0,
            "72": 0,
            "73": 0,
            "74": 0,
            "75": 0
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Semantic\\Binder.cs": {
      "Delta.Slang.Semantic.Binder": {
        "Delta.Slang.Semantic.Scope Delta.Slang.Semantic.Binder::get_Scope()": {
          "Lines": {
            "20": 5
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.FunctionSymbol Delta.Slang.Semantic.Binder::get_Function()": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.IDiagnostic> Delta.Slang.Semantic.Binder::get_Diagnostics()": {
          "Lines": {
            "23": 1
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.BoundTree Delta.Slang.Semantic.Binder::BindCompilationUnit(Delta.Slang.Syntax.CompilationUnitNode)": {
          "Lines": {
            "26": 1,
            "27": 1,
            "28": 1,
            "31": 1,
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "38": 0,
            "39": 0,
            "40": 0,
            "45": 0,
            "47": 0,
            "48": 0,
            "49": 0,
            "52": 1,
            "53": 5,
            "54": 1,
            "55": 1,
            "56": 1,
            "57": 1,
            "59": 1,
            "60": 1,
            "61": 1,
            "62": 1,
            "63": 1,
            "64": 1,
            "65": 1
          },
          "Branches": [
            {
              "Line": 32,
              "Offset": 159,
              "EndOffset": 42,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 71,
              "EndOffset": 75,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 71,
              "EndOffset": 152,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 32,
              "Offset": 159,
              "EndOffset": 161,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 53,
              "Offset": 245,
              "EndOffset": 203,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 1
            },
            {
              "Line": 53,
              "Offset": 245,
              "EndOffset": 247,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 1
            }
          ]
        },
        "System.Void Delta.Slang.Semantic.Binder::FixGotoStatements(Delta.Slang.Semantic.Statement)": {
          "Lines": {
            "68": 0,
            "69": 0,
            "70": 0,
            "71": 0,
            "72": 0,
            "73": 0,
            "75": 0,
            "76": 0,
            "79": 0,
            "80": 0,
            "81": 0,
            "82": 0,
            "83": 0,
            "84": 0
          },
          "Branches": [
            {
              "Line": 69,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 9,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 25,
              "EndOffset": 27,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 72,
              "Offset": 68,
              "EndOffset": 70,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 72,
              "Offset": 68,
              "EndOffset": 81,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 69,
              "Offset": 25,
              "EndOffset": 107,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 79,
              "Offset": 122,
              "EndOffset": 124,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 81,
              "Offset": 166,
              "EndOffset": 141,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 81,
              "Offset": 166,
              "EndOffset": 168,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 79,
              "Offset": 122,
              "EndOffset": 184,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Symbols.FunctionSymbol Delta.Slang.Semantic.Binder::BindFunctionDeclaration(Delta.Slang.Syntax.FunctionDeclarationNode)": {
          "Lines": {
            "87": 0,
            "88": 0,
            "90": 0,
            "91": 0,
            "92": 0,
            "93": 0,
            "94": 0,
            "95": 0,
            "96": 0,
            "97": 0,
            "98": 0,
            "99": 0,
            "100": 0,
            "101": 0,
            "103": 0,
            "105": 0,
            "106": 0,
            "107": 0,
            "109": 0,
            "110": 0,
            "111": 0
          },
          "Branches": [
            {
              "Line": 91,
              "Offset": 140,
              "EndOffset": 34,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 95,
              "Offset": 85,
              "EndOffset": 87,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 95,
              "Offset": 85,
              "EndOffset": 111,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 91,
              "Offset": 140,
              "EndOffset": 142,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 103,
              "Offset": 170,
              "EndOffset": 172,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 103,
              "Offset": 170,
              "EndOffset": 178,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 215,
              "EndOffset": 217,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 215,
              "EndOffset": 222,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Semantic.Binder::BindTypeClause(Delta.Slang.Syntax.TypeClauseNode)": {
          "Lines": {
            "114": 0,
            "115": 0,
            "116": 0,
            "118": 0,
            "119": 0,
            "121": 0,
            "122": 0,
            "123": 0
          },
          "Branches": [
            {
              "Line": 115,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 115,
              "Offset": 7,
              "EndOffset": 13,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 118,
              "Offset": 39,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 118,
              "Offset": 39,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Semantic.Statement Delta.Slang.Semantic.Binder::BindStatement(Delta.Slang.Syntax.StatementNode)": {
          "Lines": {
            "126": 1,
            "127": 1,
            "129": 0,
            "130": 0,
            "131": 1,
            "132": 0,
            "133": 0,
            "134": 0,
            "135": 0,
            "138": 0,
            "139": 1
          },
          "Branches": [
            {
              "Line": 127,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 127,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 127,
              "Offset": 39,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 127,
              "Offset": 50,
              "EndOffset": 52,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 127,
              "Offset": 63,
              "EndOffset": 65,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 127,
              "Offset": 76,
              "EndOffset": 78,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 127,
              "Offset": 17,
              "EndOffset": 95,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 127,
              "Offset": 28,
              "EndOffset": 109,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 127,
              "Offset": 39,
              "EndOffset": 122,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 1
            },
            {
              "Line": 127,
              "Offset": 50,
              "EndOffset": 135,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 127,
              "Offset": 63,
              "EndOffset": 148,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 127,
              "Offset": 76,
              "EndOffset": 162,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 127,
              "Offset": 89,
              "EndOffset": 176,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 127,
              "Offset": 89,
              "EndOffset": 188,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Semantic.Statement Delta.Slang.Semantic.Binder::BindReturnStatement(Delta.Slang.Syntax.ReturnStatementNode)": {
          "Lines": {
            "142": 0,
            "143": 0,
            "144": 0,
            "145": 0,
            "146": 0,
            "149": 0,
            "150": 0,
            "151": 0,
            "152": 0,
            "153": 0,
            "154": 0,
            "156": 0,
            "157": 0,
            "158": 0,
            "159": 0,
            "160": 0,
            "161": 0,
            "163": 0,
            "164": 0
          },
          "Branches": [
            {
              "Line": 143,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 143,
              "Offset": 12,
              "EndOffset": 44,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 149,
              "Offset": 50,
              "EndOffset": 52,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 149,
              "Offset": 50,
              "EndOffset": 67,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 150,
              "Offset": 70,
              "EndOffset": 72,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 150,
              "Offset": 70,
              "EndOffset": 75,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 150,
              "Offset": 82,
              "EndOffset": 84,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 150,
              "Offset": 82,
              "EndOffset": 90,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 151,
              "Offset": 112,
              "EndOffset": 117,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 153,
              "Offset": 126,
              "EndOffset": 128,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 153,
              "Offset": 126,
              "EndOffset": 166,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 158,
              "Offset": 207,
              "EndOffset": 209,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 158,
              "Offset": 207,
              "EndOffset": 245,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 151,
              "Offset": 112,
              "EndOffset": 247,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Semantic.Statement Delta.Slang.Semantic.Binder::BindExpressionStatement(Delta.Slang.Syntax.ExpressionStatementNode)": {
          "Lines": {
            "167": 1,
            "168": 1,
            "169": 1,
            "170": 1
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.Block Delta.Slang.Semantic.Binder::BindBlock(Delta.Slang.Syntax.BlockNode,System.Boolean)": {
          "Lines": {
            "173": 0,
            "174": 0,
            "175": 0,
            "177": 0,
            "178": 0,
            "179": 0,
            "180": 0,
            "181": 0,
            "182": 0,
            "184": 0,
            "187": 0,
            "188": 0,
            "189": 0,
            "190": 0
          },
          "Branches": [
            {
              "Line": 175,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 175,
              "Offset": 9,
              "EndOffset": 14,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 178,
              "Offset": 79,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 178,
              "Offset": 79,
              "EndOffset": 81,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Semantic.VariableDeclaration Delta.Slang.Semantic.Binder::BindVariableDeclaration(Delta.Slang.Syntax.VariableDeclarationNode)": {
          "Lines": {
            "193": 0,
            "195": 0,
            "196": 0,
            "197": 0,
            "198": 0,
            "200": 0,
            "202": 0,
            "203": 0,
            "204": 0
          },
          "Branches": [
            {
              "Line": 196,
              "Offset": 20,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 196,
              "Offset": 20,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 197,
              "Offset": 40,
              "EndOffset": 42,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 197,
              "Offset": 40,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 197,
              "Offset": 53,
              "EndOffset": 55,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 197,
              "Offset": 53,
              "EndOffset": 62,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 202,
              "Offset": 78,
              "EndOffset": 80,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 202,
              "Offset": 78,
              "EndOffset": 98,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Semantic.Statement Delta.Slang.Semantic.Binder::BindLabelStatement(Delta.Slang.Syntax.LabelStatementNode)": {
          "Lines": {
            "207": 0,
            "208": 0,
            "210": 0,
            "211": 0,
            "212": 0,
            "213": 0,
            "216": 0,
            "217": 0,
            "218": 0,
            "220": 0,
            "221": 0
          },
          "Branches": [
            {
              "Line": 210,
              "Offset": 29,
              "EndOffset": 31,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 210,
              "Offset": 29,
              "EndOffset": 59,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 217,
              "Offset": 85,
              "EndOffset": 87,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 217,
              "Offset": 85,
              "EndOffset": 111,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Semantic.Statement Delta.Slang.Semantic.Binder::BindGotoStatement(Delta.Slang.Syntax.GotoStatementNode)": {
          "Lines": {
            "224": 0,
            "225": 0,
            "229": 0,
            "230": 0,
            "231": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.IfStatement Delta.Slang.Semantic.Binder::BindIfStatement(Delta.Slang.Syntax.IfStatementNode)": {
          "Lines": {
            "234": 0,
            "235": 0,
            "236": 0,
            "237": 0,
            "238": 0,
            "239": 0
          },
          "Branches": [
            {
              "Line": 237,
              "Offset": 38,
              "EndOffset": 40,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 237,
              "Offset": 38,
              "EndOffset": 59,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.Binder::BindExpression(Delta.Slang.Syntax.ExpressionNode,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "241": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.Binder::BindExpression(Delta.Slang.Syntax.ExpressionNode,System.Boolean)": {
          "Lines": {
            "244": 2,
            "245": 2,
            "246": 2,
            "247": 0,
            "248": 0,
            "249": 0,
            "252": 2,
            "253": 2
          },
          "Branches": [
            {
              "Line": 246,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 246,
              "Offset": 10,
              "EndOffset": 27,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            },
            {
              "Line": 246,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 246,
              "Offset": 30,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            }
          ]
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.Binder::DoBindExpression(Delta.Slang.Syntax.ExpressionNode)": {
          "Lines": {
            "256": 2,
            "257": 2,
            "260": 0,
            "262": 1,
            "264": 0,
            "266": 0,
            "268": 0,
            "270": 0,
            "272": 1,
            "274": 0,
            "276": 2
          },
          "Branches": [
            {
              "Line": 257,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 257,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 257,
              "Offset": 39,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 1
            },
            {
              "Line": 257,
              "Offset": 50,
              "EndOffset": 52,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 1
            },
            {
              "Line": 257,
              "Offset": 63,
              "EndOffset": 65,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 1
            },
            {
              "Line": 257,
              "Offset": 76,
              "EndOffset": 78,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 1
            },
            {
              "Line": 257,
              "Offset": 17,
              "EndOffset": 95,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 257,
              "Offset": 28,
              "EndOffset": 108,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 257,
              "Offset": 39,
              "EndOffset": 121,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 257,
              "Offset": 50,
              "EndOffset": 134,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 257,
              "Offset": 63,
              "EndOffset": 147,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 257,
              "Offset": 76,
              "EndOffset": 161,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 257,
              "Offset": 89,
              "EndOffset": 175,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 1
            },
            {
              "Line": 257,
              "Offset": 89,
              "EndOffset": 187,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.Binder::BindParenthesizedExpression(Delta.Slang.Syntax.ParenthesizedExpressionNode)": {
          "Lines": {
            "278": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.Binder::BindLiteralExpression(Delta.Slang.Syntax.LiteralExpressionNode)": {
          "Lines": {
            "280": 1
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.Binder::BindNameExpression(Delta.Slang.Syntax.NameExpressionNode)": {
          "Lines": {
            "283": 0,
            "284": 0,
            "285": 0,
            "286": 0,
            "287": 0,
            "289": 0,
            "290": 0,
            "291": 0,
            "292": 0,
            "295": 0,
            "296": 0
          },
          "Branches": [
            {
              "Line": 286,
              "Offset": 31,
              "EndOffset": 33,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 286,
              "Offset": 31,
              "EndOffset": 40,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 289,
              "Offset": 41,
              "EndOffset": 43,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 289,
              "Offset": 41,
              "EndOffset": 56,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 289,
              "Offset": 61,
              "EndOffset": 63,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 289,
              "Offset": 61,
              "EndOffset": 93,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.Binder::BindAssignmentExpression(Delta.Slang.Syntax.AssignmentExpressionNode)": {
          "Lines": {
            "299": 0,
            "300": 0,
            "301": 0,
            "303": 0,
            "304": 0,
            "305": 0,
            "306": 0,
            "309": 0,
            "310": 0,
            "312": 0,
            "313": 0,
            "314": 0
          },
          "Branches": [
            {
              "Line": 303,
              "Offset": 48,
              "EndOffset": 50,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 303,
              "Offset": 48,
              "EndOffset": 75,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 309,
              "Offset": 85,
              "EndOffset": 87,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 309,
              "Offset": 85,
              "EndOffset": 106,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.Binder::BindUnaryExpression(Delta.Slang.Syntax.UnaryExpressionNode)": {
          "Lines": {
            "317": 0,
            "318": 0,
            "320": 0,
            "321": 0,
            "323": 0,
            "324": 0,
            "325": 0,
            "326": 0,
            "327": 0,
            "330": 0,
            "331": 0
          },
          "Branches": [
            {
              "Line": 320,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 320,
              "Offset": 30,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 324,
              "Offset": 72,
              "EndOffset": 74,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 324,
              "Offset": 72,
              "EndOffset": 119,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.Binder::BindBinaryExpression(Delta.Slang.Syntax.BinaryExpressionNode)": {
          "Lines": {
            "334": 0,
            "335": 0,
            "336": 0,
            "338": 0,
            "339": 0,
            "341": 0,
            "342": 0,
            "343": 0,
            "344": 0,
            "345": 0,
            "348": 0,
            "349": 0
          },
          "Branches": [
            {
              "Line": 338,
              "Offset": 40,
              "EndOffset": 42,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 338,
              "Offset": 40,
              "EndOffset": 57,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 338,
              "Offset": 60,
              "EndOffset": 62,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 338,
              "Offset": 60,
              "EndOffset": 72,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 342,
              "Offset": 109,
              "EndOffset": 111,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 342,
              "Offset": 109,
              "EndOffset": 163,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.Binder::BindInvokeExpression(Delta.Slang.Syntax.InvokeExpressionNode)": {
          "Lines": {
            "352": 1,
            "354": 1,
            "355": 1,
            "356": 0,
            "358": 1,
            "359": 5,
            "360": 1,
            "361": 1,
            "362": 1,
            "363": 1,
            "365": 1,
            "366": 0,
            "367": 0,
            "368": 0,
            "372": 1,
            "375": 1,
            "377": 1,
            "378": 1,
            "379": 0,
            "380": 0,
            "384": 0,
            "385": 0,
            "387": 0,
            "388": 0,
            "389": 0,
            "391": 0,
            "392": 0,
            "394": 1,
            "395": 4,
            "396": 1,
            "397": 1,
            "398": 1,
            "400": 1,
            "401": 0,
            "402": 0,
            "403": 0,
            "404": 0,
            "405": 0,
            "406": 1,
            "407": 1,
            "409": 1,
            "410": 1
          },
          "Branches": [
            {
              "Line": 355,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 355,
              "Offset": 17,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 355,
              "Offset": 50,
              "EndOffset": 52,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 355,
              "Offset": 50,
              "EndOffset": 70,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 359,
              "Offset": 130,
              "EndOffset": 92,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 1
            },
            {
              "Line": 359,
              "Offset": 130,
              "EndOffset": 132,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 1
            },
            {
              "Line": 365,
              "Offset": 178,
              "EndOffset": 180,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 365,
              "Offset": 178,
              "EndOffset": 223,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 1
            },
            {
              "Line": 378,
              "Offset": 264,
              "EndOffset": 266,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 384,
              "Offset": 283,
              "EndOffset": 285,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 384,
              "Offset": 283,
              "EndOffset": 295,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 387,
              "Offset": 298,
              "EndOffset": 300,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 387,
              "Offset": 298,
              "EndOffset": 315,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 378,
              "Offset": 264,
              "EndOffset": 358,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 1
            },
            {
              "Line": 395,
              "Offset": 501,
              "EndOffset": 364,
              "Path": 1,
              "Ordinal": 19,
              "Hits": 1
            },
            {
              "Line": 400,
              "Offset": 405,
              "EndOffset": 407,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 402,
              "Offset": 429,
              "EndOffset": 431,
              "Path": 0,
              "Ordinal": 16,
              "Hits": 0
            },
            {
              "Line": 402,
              "Offset": 429,
              "EndOffset": 479,
              "Path": 1,
              "Ordinal": 17,
              "Hits": 0
            },
            {
              "Line": 400,
              "Offset": 405,
              "EndOffset": 483,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 1
            },
            {
              "Line": 395,
              "Offset": 501,
              "EndOffset": 506,
              "Path": 0,
              "Ordinal": 18,
              "Hits": 1
            },
            {
              "Line": 409,
              "Offset": 509,
              "EndOffset": 511,
              "Path": 0,
              "Ordinal": 20,
              "Hits": 1
            },
            {
              "Line": 409,
              "Offset": 509,
              "EndOffset": 515,
              "Path": 1,
              "Ordinal": 21,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.Binder::BindConversion(Delta.Slang.Syntax.ExpressionNode,Delta.Slang.Symbols.TypeSymbol,System.Boolean)": {
          "Lines": {
            "413": 0,
            "414": 0,
            "415": 0,
            "416": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.Binder::BindConversion(Delta.Slang.Syntax.SyntaxNode,Delta.Slang.Semantic.Expression,Delta.Slang.Symbols.TypeSymbol,System.Boolean,System.Boolean)": {
          "Lines": {
            "419": 0,
            "421": 0,
            "423": 0,
            "424": 0,
            "425": 0,
            "426": 0,
            "427": 0,
            "429": 0,
            "432": 0,
            "433": 0,
            "434": 0,
            "435": 0,
            "438": 0,
            "439": 0
          },
          "Branches": [
            {
              "Line": 424,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 426,
              "Offset": 38,
              "EndOffset": 40,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 426,
              "Offset": 51,
              "EndOffset": 53,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 426,
              "Offset": 38,
              "EndOffset": 66,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 426,
              "Offset": 51,
              "EndOffset": 66,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 426,
              "Offset": 69,
              "EndOffset": 71,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 426,
              "Offset": 69,
              "EndOffset": 96,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 424,
              "Offset": 33,
              "EndOffset": 106,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 432,
              "Offset": 108,
              "EndOffset": 110,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 432,
              "Offset": 112,
              "EndOffset": 114,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 432,
              "Offset": 108,
              "EndOffset": 122,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 432,
              "Offset": 112,
              "EndOffset": 122,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 432,
              "Offset": 127,
              "EndOffset": 129,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 432,
              "Offset": 127,
              "EndOffset": 165,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 438,
              "Offset": 171,
              "EndOffset": 173,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 438,
              "Offset": 171,
              "EndOffset": 176,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.Binder::BindDefaultInitializer(Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "441": 0
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.VariableSymbol Delta.Slang.Semantic.Binder::BindVariable(Delta.Slang.Syntax.Token,System.Boolean,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "444": 0,
            "445": 0,
            "446": 0,
            "447": 0,
            "448": 0,
            "450": 0,
            "451": 0,
            "453": 0,
            "454": 0
          },
          "Branches": [
            {
              "Line": 446,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 446,
              "Offset": 14,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 450,
              "Offset": 52,
              "EndOffset": 54,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 450,
              "Offset": 52,
              "EndOffset": 73,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Semantic.Scope Delta.Slang.Semantic.Binder::CreateRootScope()": {
          "Lines": {
            "457": 1,
            "458": 1,
            "460": 9,
            "461": 3,
            "463": 1,
            "464": 1
          },
          "Branches": [
            {
              "Line": 460,
              "Offset": 44,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            },
            {
              "Line": 460,
              "Offset": 44,
              "EndOffset": 46,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            }
          ]
        },
        "System.Void Delta.Slang.Semantic.Binder::.ctor(Delta.Slang.Semantic.Scope,Delta.Slang.Symbols.FunctionSymbol)": {
          "Lines": {
            "13": 1,
            "14": 1,
            "15": 1,
            "16": 1,
            "17": 1,
            "18": 1
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Semantic\\BoundTree.cs": {
      "Delta.Slang.Semantic.BoundTree": {
        "Delta.Slang.Semantic.Scope Delta.Slang.Semantic.BoundTree::get_Scope()": {
          "Lines": {
            "18": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Semantic.FunctionDefinition> Delta.Slang.Semantic.BoundTree::get_Functions()": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Symbols.VariableSymbol> Delta.Slang.Semantic.BoundTree::get_Variables()": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Semantic.Statement> Delta.Slang.Semantic.BoundTree::get_Statements()": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.IDiagnostic> Delta.Slang.Semantic.BoundTree::get_Diagnostics()": {
          "Lines": {
            "22": 1
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.BoundTreeNodeKind Delta.Slang.Semantic.BoundTree::get_Kind()": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.BoundTree::.ctor(Delta.Slang.Semantic.Scope,System.Collections.Generic.IEnumerable`1<Delta.Slang.Semantic.FunctionDefinition>,System.Collections.Generic.IEnumerable`1<Delta.Slang.Symbols.VariableSymbol>,System.Collections.Generic.IEnumerable`1<Delta.Slang.Semantic.Statement>,System.Collections.Generic.IEnumerable`1<Delta.Slang.IDiagnostic>)": {
          "Lines": {
            "9": 1,
            "10": 1,
            "11": 1,
            "12": 1,
            "13": 1,
            "14": 1,
            "15": 1,
            "16": 1
          },
          "Branches": [
            {
              "Line": 11,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 11,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            },
            {
              "Line": 12,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 33,
              "EndOffset": 42,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 13,
              "Offset": 50,
              "EndOffset": 52,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 13,
              "Offset": 50,
              "EndOffset": 59,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 1
            },
            {
              "Line": 14,
              "Offset": 68,
              "EndOffset": 70,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 68,
              "EndOffset": 77,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 1
            },
            {
              "Line": 15,
              "Offset": 86,
              "EndOffset": 88,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 86,
              "EndOffset": 95,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 1
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Semantic\\BoundTreeNode.cs": {
      "Delta.Slang.Semantic.BoundTreeNode": {
        "System.String Delta.Slang.Semantic.BoundTreeNode::ToString()": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "17": 0
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Semantic\\Conversions.cs": {
      "Delta.Slang.Semantic.ConversionKind": {
        "System.Boolean Delta.Slang.Semantic.ConversionKind::get_Exists()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Semantic.ConversionKind::get_IsIdentity()": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Semantic.ConversionKind::get_IsImplicit()": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Semantic.ConversionKind::get_IsExplicit()": {
          "Lines": {
            "17": 0
          },
          "Branches": [
            {
              "Line": 17,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 6,
              "EndOffset": 19,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Semantic.ConversionKind::.ctor(System.Boolean,System.Boolean,System.Boolean)": {
          "Lines": {
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": []
        }
      },
      "Delta.Slang.Semantic.Conversions": {
        "Delta.Slang.Semantic.ConversionKind Delta.Slang.Semantic.Conversions::GetConversionKind(Delta.Slang.Symbols.TypeSymbol,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "28": 0,
            "29": 0,
            "31": 0,
            "32": 0,
            "34": 0,
            "35": 0,
            "37": 0,
            "38": 0,
            "40": 0,
            "41": 0,
            "43": 0,
            "44": 0
          },
          "Branches": [
            {
              "Line": 29,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 7,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 31,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 31,
              "Offset": 30,
              "EndOffset": 40,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 46,
              "EndOffset": 48,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 54,
              "EndOffset": 56,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 62,
              "EndOffset": 64,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 54,
              "EndOffset": 74,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 62,
              "EndOffset": 74,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 46,
              "EndOffset": 77,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 80,
              "EndOffset": 82,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 80,
              "EndOffset": 90,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 96,
              "EndOffset": 98,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 96,
              "EndOffset": 108,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 113,
              "EndOffset": 115,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 113,
              "EndOffset": 123,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 0
            },
            {
              "Line": 40,
              "Offset": 129,
              "EndOffset": 131,
              "Path": 0,
              "Ordinal": 16,
              "Hits": 0
            },
            {
              "Line": 40,
              "Offset": 129,
              "EndOffset": 141,
              "Path": 1,
              "Ordinal": 17,
              "Hits": 0
            },
            {
              "Line": 40,
              "Offset": 146,
              "EndOffset": 148,
              "Path": 0,
              "Ordinal": 18,
              "Hits": 0
            },
            {
              "Line": 40,
              "Offset": 146,
              "EndOffset": 156,
              "Path": 1,
              "Ordinal": 19,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Semantic.Conversions::.cctor()": {
          "Lines": {
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Semantic\\expressions.cs": {
      "Delta.Slang.Semantic.LiteralExpression": {
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Semantic.LiteralExpression::get_Type()": {
          "Lines": {
            "23": 2
          },
          "Branches": []
        },
        "System.Object Delta.Slang.Semantic.LiteralExpression::get_Value()": {
          "Lines": {
            "24": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.BoundTreeNodeKind Delta.Slang.Semantic.LiteralExpression::get_Kind()": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.LiteralExpression::EnsureTypeConsistency(Delta.Slang.Symbols.TypeSymbol,System.Object)": {
          "Lines": {
            "29": 1,
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 2,
            "34": 0,
            "36": 0,
            "37": 0,
            "38": 1
          },
          "Branches": [
            {
              "Line": 30,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 7,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            },
            {
              "Line": 30,
              "Offset": 23,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 31,
              "Offset": 36,
              "EndOffset": 38,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 31,
              "Offset": 36,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 1
            },
            {
              "Line": 31,
              "Offset": 52,
              "EndOffset": 59,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 1
            },
            {
              "Line": 32,
              "Offset": 65,
              "EndOffset": 67,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 65,
              "EndOffset": 78,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 1
            },
            {
              "Line": 32,
              "Offset": 81,
              "EndOffset": 85,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 1
            },
            {
              "Line": 33,
              "Offset": 91,
              "EndOffset": 93,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 1
            },
            {
              "Line": 33,
              "Offset": 91,
              "EndOffset": 104,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 33,
              "Offset": 109,
              "EndOffset": 113,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 119,
              "EndOffset": 121,
              "Path": 0,
              "Ordinal": 16,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 127,
              "EndOffset": 129,
              "Path": 0,
              "Ordinal": 18,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 119,
              "EndOffset": 142,
              "Path": 1,
              "Ordinal": 17,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 127,
              "EndOffset": 142,
              "Path": 1,
              "Ordinal": 19,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 147,
              "EndOffset": 151,
              "Path": 1,
              "Ordinal": 21,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 165,
              "EndOffset": 167,
              "Path": 0,
              "Ordinal": 22,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 165,
              "EndOffset": 173,
              "Path": 1,
              "Ordinal": 23,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 23,
              "EndOffset": 203,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 31,
              "Offset": 52,
              "EndOffset": 203,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 1
            },
            {
              "Line": 32,
              "Offset": 81,
              "EndOffset": 203,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 1
            },
            {
              "Line": 33,
              "Offset": 109,
              "EndOffset": 203,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 1
            },
            {
              "Line": 34,
              "Offset": 147,
              "EndOffset": 203,
              "Path": 0,
              "Ordinal": 20,
              "Hits": 1
            }
          ]
        },
        "System.Void Delta.Slang.Semantic.LiteralExpression::.ctor(Delta.Slang.Symbols.TypeSymbol,System.Object)": {
          "Lines": {
            "15": 1,
            "16": 1,
            "17": 1,
            "18": 1,
            "20": 1,
            "21": 1
          },
          "Branches": []
        }
      },
      "Delta.Slang.Semantic.VariableExpression": {
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Semantic.VariableExpression::get_Type()": {
          "Lines": {
            "46": 0
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.VariableSymbol Delta.Slang.Semantic.VariableExpression::get_Variable()": {
          "Lines": {
            "47": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.BoundTreeNodeKind Delta.Slang.Semantic.VariableExpression::get_Kind()": {
          "Lines": {
            "49": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.VariableExpression::.ctor(Delta.Slang.Symbols.VariableSymbol)": {
          "Lines": {
            "43": 0,
            "44": 0
          },
          "Branches": [
            {
              "Line": 44,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 44,
              "Offset": 10,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Semantic.AssignmentExpression": {
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Semantic.AssignmentExpression::get_Type()": {
          "Lines": {
            "60": 0
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.VariableSymbol Delta.Slang.Semantic.AssignmentExpression::get_Variable()": {
          "Lines": {
            "61": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.AssignmentExpression::get_Expression()": {
          "Lines": {
            "62": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.BoundTreeNodeKind Delta.Slang.Semantic.AssignmentExpression::get_Kind()": {
          "Lines": {
            "64": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.AssignmentExpression::.ctor(Delta.Slang.Symbols.VariableSymbol,Delta.Slang.Semantic.Expression)": {
          "Lines": {
            "54": 0,
            "55": 0,
            "56": 0,
            "57": 0,
            "58": 0
          },
          "Branches": [
            {
              "Line": 56,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 56,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 57,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 57,
              "Offset": 33,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Semantic.ConversionExpression": {
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Semantic.ConversionExpression::get_Type()": {
          "Lines": {
            "75": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.ConversionExpression::get_Expression()": {
          "Lines": {
            "76": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.BoundTreeNodeKind Delta.Slang.Semantic.ConversionExpression::get_Kind()": {
          "Lines": {
            "78": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.ConversionExpression::.ctor(Delta.Slang.Symbols.TypeSymbol,Delta.Slang.Semantic.Expression)": {
          "Lines": {
            "69": 0,
            "70": 0,
            "71": 0,
            "72": 0,
            "73": 0
          },
          "Branches": [
            {
              "Line": 71,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 71,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 72,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 72,
              "Offset": 33,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Semantic.UnaryExpression": {
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Semantic.UnaryExpression::get_Type()": {
          "Lines": {
            "89": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.UnaryOperator Delta.Slang.Semantic.UnaryExpression::get_Op()": {
          "Lines": {
            "90": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.UnaryExpression::get_Operand()": {
          "Lines": {
            "91": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.BoundTreeNodeKind Delta.Slang.Semantic.UnaryExpression::get_Kind()": {
          "Lines": {
            "93": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.UnaryExpression::.ctor(Delta.Slang.Semantic.UnaryOperator,Delta.Slang.Semantic.Expression)": {
          "Lines": {
            "83": 0,
            "84": 0,
            "85": 0,
            "86": 0,
            "87": 0
          },
          "Branches": [
            {
              "Line": 85,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 85,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 86,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 86,
              "Offset": 33,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Semantic.BinaryExpression": {
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Semantic.BinaryExpression::get_Type()": {
          "Lines": {
            "105": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.BinaryExpression::get_Left()": {
          "Lines": {
            "106": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.BinaryOperator Delta.Slang.Semantic.BinaryExpression::get_Op()": {
          "Lines": {
            "107": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.BinaryExpression::get_Right()": {
          "Lines": {
            "108": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.BoundTreeNodeKind Delta.Slang.Semantic.BinaryExpression::get_Kind()": {
          "Lines": {
            "110": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.BinaryExpression::.ctor(Delta.Slang.Semantic.Expression,Delta.Slang.Semantic.BinaryOperator,Delta.Slang.Semantic.Expression)": {
          "Lines": {
            "98": 0,
            "99": 0,
            "100": 0,
            "101": 0,
            "102": 0,
            "103": 0
          },
          "Branches": [
            {
              "Line": 100,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 100,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 101,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 101,
              "Offset": 33,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 102,
              "Offset": 55,
              "EndOffset": 57,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 102,
              "Offset": 55,
              "EndOffset": 69,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Semantic.InvokeExpression": {
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Semantic.InvokeExpression::get_Type()": {
          "Lines": {
            "121": 0
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.FunctionSymbol Delta.Slang.Semantic.InvokeExpression::get_Function()": {
          "Lines": {
            "122": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Semantic.Expression> Delta.Slang.Semantic.InvokeExpression::get_Arguments()": {
          "Lines": {
            "123": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.BoundTreeNodeKind Delta.Slang.Semantic.InvokeExpression::get_Kind()": {
          "Lines": {
            "125": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.InvokeExpression::.ctor(Delta.Slang.Symbols.FunctionSymbol,System.Collections.Generic.IEnumerable`1<Delta.Slang.Semantic.Expression>)": {
          "Lines": {
            "115": 1,
            "116": 1,
            "117": 1,
            "118": 1,
            "119": 1
          },
          "Branches": [
            {
              "Line": 117,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 117,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            },
            {
              "Line": 118,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 118,
              "Offset": 33,
              "EndOffset": 42,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Semantic\\invalid.cs": {
      "Delta.Slang.Semantic.InvalidStatement": {
        "Delta.Slang.Semantic.BoundTreeNodeKind Delta.Slang.Semantic.InvalidStatement::get_Kind()": {
          "Lines": {
            "17": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.InvalidStatement::.ctor()": {
          "Lines": {
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0
          },
          "Branches": []
        }
      },
      "Delta.Slang.Semantic.InvalidExpression": {
        "Delta.Slang.Semantic.BoundTreeNodeKind Delta.Slang.Semantic.InvalidExpression::get_Kind()": {
          "Lines": {
            "29": 0
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Semantic.InvalidExpression::get_Type()": {
          "Lines": {
            "30": 0
          },
          "Branches": [
            {
              "Line": 30,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 7,
              "EndOffset": 13,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 19,
              "EndOffset": 27,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.InvalidExpression::get_Expression()": {
          "Lines": {
            "31": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.InvalidExpression::.ctor(Delta.Slang.Semantic.Expression)": {
          "Lines": {
            "26": 0,
            "27": 0
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Semantic\\Scope.cs": {
      "Delta.Slang.Semantic.Scope": {
        "Delta.Slang.Semantic.ScopeKind Delta.Slang.Semantic.Scope::get_Kind()": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.Scope Delta.Slang.Semantic.Scope::get_Parent()": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Semantic.Scope::TryDeclareVariable(Delta.Slang.Symbols.VariableSymbol)": {
          "Lines": {
            "29": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Semantic.Scope::TryDeclareFunction(Delta.Slang.Symbols.FunctionSymbol)": {
          "Lines": {
            "30": 3
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Semantic.Scope::TryDeclareLabel(Delta.Slang.Symbols.LabelSymbol)": {
          "Lines": {
            "31": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Semantic.Scope::TryLookupVariable(System.String,Delta.Slang.Symbols.VariableSymbol&)": {
          "Lines": {
            "33": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Semantic.Scope::TryLookupFunction(System.String,Delta.Slang.Symbols.FunctionSymbol&)": {
          "Lines": {
            "34": 1
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Semantic.Scope::TryLookupLabel(System.String,Delta.Slang.Symbols.LabelSymbol&)": {
          "Lines": {
            "37": 0,
            "38": 0,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 0,
            "44": 0,
            "46": 0,
            "47": 0,
            "49": 0,
            "50": 0,
            "51": 0
          },
          "Branches": [
            {
              "Line": 43,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 18,
              "EndOffset": 43,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 50,
              "EndOffset": 52,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 50,
              "EndOffset": 56,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 67,
              "EndOffset": 69,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 67,
              "EndOffset": 73,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Delta.Slang.Semantic.Scope::TryLookupType(System.String,Delta.Slang.Symbols.TypeSymbol&)": {
          "Lines": {
            "54": 1,
            "56": 6,
            "57": 1,
            "58": 1
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Symbols.VariableSymbol> Delta.Slang.Semantic.Scope::GetDeclaredVariables()": {
          "Lines": {
            "60": 1
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Symbols.FunctionSymbol> Delta.Slang.Semantic.Scope::GetDeclaredFunctions()": {
          "Lines": {
            "61": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Symbols.LabelSymbol> Delta.Slang.Semantic.Scope::GetDeclaredLabels()": {
          "Lines": {
            "62": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Semantic.Scope::TryLookupSymbol(System.String,S&)": {
          "Lines": {
            "65": 1
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerable`1<S> Delta.Slang.Semantic.Scope::GetDeclaredSymbols()": {
          "Lines": {
            "67": 1
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Semantic.Scope::TryLookupSymbol(Delta.Slang.Semantic.Scope,System.String,S&,System.Func`2<Delta.Slang.Semantic.Scope,System.Boolean>)": {
          "Lines": {
            "70": 1,
            "71": 1,
            "73": 1,
            "74": 1,
            "75": 1,
            "76": 1,
            "77": 1,
            "78": 1,
            "81": 0,
            "84": 0,
            "86": 0,
            "87": 0,
            "88": 1
          },
          "Branches": [
            {
              "Line": 73,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 75,
              "Offset": 54,
              "EndOffset": 56,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 75,
              "Offset": 54,
              "EndOffset": 70,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 73,
              "Offset": 24,
              "EndOffset": 75,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 86,
              "Offset": 83,
              "EndOffset": 85,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 86,
              "Offset": 83,
              "EndOffset": 94,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 87,
              "Offset": 100,
              "EndOffset": 102,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 87,
              "Offset": 100,
              "EndOffset": 113,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Semantic.Scope::.ctor(Delta.Slang.Semantic.ScopeKind,Delta.Slang.Semantic.Scope)": {
          "Lines": {
            "18": 1,
            "20": 1,
            "21": 1,
            "22": 1,
            "23": 1,
            "24": 1
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Semantic\\statements.cs": {
      "Delta.Slang.Semantic.Statement": {
        "Delta.Slang.Semantic.Scope Delta.Slang.Semantic.Statement::get_Scope()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.Statement::.ctor(Delta.Slang.Semantic.Scope)": {
          "Lines": {
            "10": 2
          },
          "Branches": [
            {
              "Line": 10,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 10,
              "Offset": 10,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        }
      },
      "Delta.Slang.Semantic.Block": {
        "System.Collections.Generic.IEnumerable`1<Delta.Slang.Semantic.Statement> Delta.Slang.Semantic.Block::get_Statements()": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.BoundTreeNodeKind Delta.Slang.Semantic.Block::get_Kind()": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.Block::.ctor(Delta.Slang.Semantic.Scope,System.Collections.Generic.IEnumerable`1<Delta.Slang.Semantic.Statement>)": {
          "Lines": {
            "16": 0,
            "17": 0
          },
          "Branches": [
            {
              "Line": 17,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 11,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Semantic.VariableDeclaration": {
        "Delta.Slang.Symbols.VariableSymbol Delta.Slang.Semantic.VariableDeclaration::get_Variable()": {
          "Lines": {
            "31": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.VariableDeclaration::get_Initializer()": {
          "Lines": {
            "32": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.BoundTreeNodeKind Delta.Slang.Semantic.VariableDeclaration::get_Kind()": {
          "Lines": {
            "34": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.VariableDeclaration::.ctor(Delta.Slang.Semantic.Scope,Delta.Slang.Symbols.VariableSymbol,Delta.Slang.Semantic.Expression)": {
          "Lines": {
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0
          },
          "Branches": [
            {
              "Line": 27,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 12,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 34,
              "EndOffset": 36,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 34,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Semantic.FunctionDefinition": {
        "Delta.Slang.Symbols.FunctionSymbol Delta.Slang.Semantic.FunctionDefinition::get_Declaration()": {
          "Lines": {
            "45": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.Block Delta.Slang.Semantic.FunctionDefinition::get_Body()": {
          "Lines": {
            "46": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.BoundTreeNodeKind Delta.Slang.Semantic.FunctionDefinition::get_Kind()": {
          "Lines": {
            "48": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.FunctionDefinition::.ctor(Delta.Slang.Symbols.FunctionSymbol,Delta.Slang.Semantic.Block)": {
          "Lines": {
            "39": 0,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 0
          },
          "Branches": [
            {
              "Line": 41,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 41,
              "Offset": 17,
              "EndOffset": 31,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 39,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 39,
              "EndOffset": 53,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Semantic.FunctionDefinition/<get_Statements>d__10": {
        "System.Boolean Delta.Slang.Semantic.FunctionDefinition/<get_Statements>d__10::MoveNext()": {
          "Lines": {
            "50": 0
          },
          "Branches": [
            {
              "Line": 50,
              "Offset": 14,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 14,
              "EndOffset": 58,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Semantic.ExpressionStatement": {
        "Delta.Slang.Semantic.BoundTreeNodeKind Delta.Slang.Semantic.ExpressionStatement::get_Kind()": {
          "Lines": {
            "57": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.ExpressionStatement::get_Expression()": {
          "Lines": {
            "58": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.ExpressionStatement::.ctor(Delta.Slang.Semantic.Scope,Delta.Slang.Semantic.Expression)": {
          "Lines": {
            "55": 2
          },
          "Branches": [
            {
              "Line": 55,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 55,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        }
      },
      "Delta.Slang.Semantic.ReturnStatement": {
        "Delta.Slang.Semantic.BoundTreeNodeKind Delta.Slang.Semantic.ReturnStatement::get_Kind()": {
          "Lines": {
            "65": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.ReturnStatement::get_Expression()": {
          "Lines": {
            "66": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.ReturnStatement::.ctor(Delta.Slang.Semantic.Scope,Delta.Slang.Semantic.Expression)": {
          "Lines": {
            "63": 0
          },
          "Branches": []
        }
      },
      "Delta.Slang.Semantic.IfStatement": {
        "Delta.Slang.Semantic.BoundTreeNodeKind Delta.Slang.Semantic.IfStatement::get_Kind()": {
          "Lines": {
            "78": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.Expression Delta.Slang.Semantic.IfStatement::get_Condition()": {
          "Lines": {
            "80": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.Statement Delta.Slang.Semantic.IfStatement::get_Then()": {
          "Lines": {
            "81": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.Statement Delta.Slang.Semantic.IfStatement::get_Else()": {
          "Lines": {
            "82": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.IfStatement::.ctor(Delta.Slang.Semantic.Scope,Delta.Slang.Semantic.Expression,Delta.Slang.Semantic.Statement,Delta.Slang.Semantic.Statement)": {
          "Lines": {
            "71": 0,
            "72": 0,
            "73": 0,
            "74": 0,
            "75": 0,
            "76": 0
          },
          "Branches": [
            {
              "Line": 73,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 73,
              "Offset": 12,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 74,
              "Offset": 34,
              "EndOffset": 36,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 74,
              "Offset": 34,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 75,
              "Offset": 57,
              "EndOffset": 59,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 75,
              "Offset": 57,
              "EndOffset": 71,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Semantic.IfStatement/<get_Statements>d__13": {
        "System.Boolean Delta.Slang.Semantic.IfStatement/<get_Statements>d__13::MoveNext()": {
          "Lines": {
            "87": 0,
            "88": 0,
            "89": 0,
            "90": 0
          },
          "Branches": []
        }
      },
      "Delta.Slang.Semantic.GotoStatement": {
        "Delta.Slang.Symbols.LabelSymbol Delta.Slang.Semantic.GotoStatement::get_Label()": {
          "Lines": {
            "103": 0
          },
          "Branches": []
        },
        "Delta.Slang.Syntax.GotoStatementNode Delta.Slang.Semantic.GotoStatement::get_GotoStatementNode()": {
          "Lines": {
            "104": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Semantic.GotoStatement::get_IsForged()": {
          "Lines": {
            "105": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Semantic.GotoStatement::get_IsValid()": {
          "Lines": {
            "107": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.BoundTreeNodeKind Delta.Slang.Semantic.GotoStatement::get_Kind()": {
          "Lines": {
            "109": 0
          },
          "Branches": [
            {
              "Line": 109,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 109,
              "Offset": 6,
              "EndOffset": 11,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Semantic.GotoStatement::Fix(Delta.Slang.Symbols.LabelSymbol)": {
          "Lines": {
            "111": 0
          },
          "Branches": [
            {
              "Line": 111,
              "Offset": 3,
              "EndOffset": 5,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 111,
              "Offset": 3,
              "EndOffset": 17,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Semantic.GotoStatement::.ctor(Delta.Slang.Semantic.Scope,Delta.Slang.Syntax.GotoStatementNode,Delta.Slang.Symbols.LabelSymbol,System.Boolean)": {
          "Lines": {
            "96": 0,
            "97": 0,
            "98": 0,
            "99": 0,
            "100": 0,
            "101": 0
          },
          "Branches": [
            {
              "Line": 98,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 98,
              "Offset": 12,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Semantic.LabelStatement": {
        "Delta.Slang.Symbols.LabelSymbol Delta.Slang.Semantic.LabelStatement::get_Label()": {
          "Lines": {
            "122": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Semantic.LabelStatement::get_IsForged()": {
          "Lines": {
            "123": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.BoundTreeNodeKind Delta.Slang.Semantic.LabelStatement::get_Kind()": {
          "Lines": {
            "125": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.LabelStatement::.ctor(Delta.Slang.Semantic.Scope,Delta.Slang.Symbols.LabelSymbol,System.Boolean)": {
          "Lines": {
            "116": 0,
            "117": 0,
            "118": 0,
            "119": 0,
            "120": 0
          },
          "Branches": [
            {
              "Line": 118,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 118,
              "Offset": 12,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang\\Semantic\\UnaryOperator.cs": {
      "Delta.Slang.Semantic.UnaryOperator": {
        "Delta.Slang.Syntax.TokenKind Delta.Slang.Semantic.UnaryOperator::get_TokenKind()": {
          "Lines": {
            "26": 0
          },
          "Branches": []
        },
        "Delta.Slang.Semantic.UnaryOperatorKind Delta.Slang.Semantic.UnaryOperator::get_Kind()": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Semantic.UnaryOperator::get_OperandType()": {
          "Lines": {
            "28": 0
          },
          "Branches": []
        },
        "Delta.Slang.Symbols.TypeSymbol Delta.Slang.Semantic.UnaryOperator::get_Type()": {
          "Lines": {
            "29": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.UnaryOperator::.ctor(Delta.Slang.Syntax.TokenKind,Delta.Slang.Semantic.UnaryOperatorKind,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "17": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Semantic.UnaryOperator::.ctor(Delta.Slang.Syntax.TokenKind,Delta.Slang.Semantic.UnaryOperatorKind,Delta.Slang.Symbols.TypeSymbol,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0
          },
          "Branches": [
            {
              "Line": 22,
              "Offset": 25,
              "EndOffset": 27,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 22,
              "Offset": 25,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 48,
              "EndOffset": 50,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 23,
              "Offset": 48,
              "EndOffset": 62,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        }
      },
      "Delta.Slang.Semantic.UnaryOperatorBinder": {
        "Delta.Slang.Semantic.UnaryOperator Delta.Slang.Semantic.UnaryOperatorBinder::Bind(Delta.Slang.Syntax.TokenKind,Delta.Slang.Symbols.TypeSymbol)": {
          "Lines": {
            "43": 0,
            "44": 0,
            "45": 0,
            "46": 0,
            "47": 0,
            "48": 0,
            "50": 0,
            "51": 0
          },
          "Branches": [
            {
              "Line": 44,
              "Offset": 56,
              "EndOffset": 12,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 24,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 40,
              "EndOffset": 42,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 40,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 44,
              "Offset": 56,
              "EndOffset": 58,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Semantic.UnaryOperatorBinder::.cctor()": {
          "Lines": {
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "38": 0,
            "39": 0,
            "40": 0
          },
          "Branches": []
        }
      }
    }
  },
  "Delta.Slang.Infrastructure.dll": {
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang.Infrastructure\\Extensions.cs": {
      "Delta.Slang.Extensions": {
        "System.Int32 Delta.Slang.Extensions::BinarySearch(System.Int32[],System.Int32)": {
          "Lines": {
            "8": 0,
            "9": 0,
            "10": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "17": 0,
            "18": 0,
            "20": 0,
            "21": 0,
            "23": 0,
            "24": 0,
            "26": 0,
            "27": 0
          },
          "Branches": [
            {
              "Line": 12,
              "Offset": 71,
              "EndOffset": 11,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 32,
              "EndOffset": 34,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 32,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 47,
              "EndOffset": 49,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 47,
              "EndOffset": 55,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 71,
              "EndOffset": 73,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang.Infrastructure\\HashUtils.cs": {
      "Delta.Slang.HashUtils": {
        "System.Int32 Delta.Slang.HashUtils::Combine(System.Int32,System.Int32)": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.HashUtils::Combine(T,System.Int32)": {
          "Lines": {
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0
          },
          "Branches": [
            {
              "Line": 24,
              "Offset": 20,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 24,
              "Offset": 20,
              "EndOffset": 38,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang.Infrastructure\\SourceText.cs": {
      "Delta.Slang.SourceText": {
        "Delta.Slang.Text.TextLineCollection Delta.Slang.SourceText::get_Lines()": {
          "Lines": {
            "45": 0,
            "46": 0,
            "47": 0,
            "48": 0
          },
          "Branches": [
            {
              "Line": 47,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 47,
              "Offset": 34,
              "EndOffset": 36,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 47,
              "Offset": 10,
              "EndOffset": 38,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 47,
              "Offset": 34,
              "EndOffset": 38,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.String Delta.Slang.SourceText::ToString()": {
          "Lines": {
            "65": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.SourceText::.ctor()": {
          "Lines": {
            "14": 9
          },
          "Branches": []
        },
        "System.Void Delta.Slang.SourceText::.cctor()": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang.Infrastructure\\SourceText.from.cs": {
      "Delta.Slang.SourceText": {
        "Delta.Slang.SourceText Delta.Slang.SourceText::From(System.String,System.Text.Encoding)": {
          "Lines": {
            "24": 3,
            "25": 0,
            "26": 3,
            "27": 3
          },
          "Branches": [
            {
              "Line": 25,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 7,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            }
          ]
        },
        "Delta.Slang.SourceText Delta.Slang.SourceText::From(System.IO.TextReader,System.Text.Encoding)": {
          "Lines": {
            "43": 0,
            "44": 0,
            "48": 0,
            "49": 0,
            "50": 0
          },
          "Branches": [
            {
              "Line": 44,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 44,
              "Offset": 7,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.SourceText Delta.Slang.SourceText::From(System.IO.Stream,System.Text.Encoding,System.Boolean)": {
          "Lines": {
            "72": 0,
            "73": 0,
            "74": 0,
            "75": 0,
            "79": 0,
            "80": 0,
            "81": 0,
            "83": 0,
            "84": 0
          },
          "Branches": [
            {
              "Line": 73,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 73,
              "Offset": 7,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 74,
              "Offset": 26,
              "EndOffset": 28,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 74,
              "Offset": 26,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 74,
              "Offset": 42,
              "EndOffset": 44,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 74,
              "Offset": 42,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 79,
              "Offset": 63,
              "EndOffset": 65,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 79,
              "Offset": 63,
              "EndOffset": 71,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 80,
              "Offset": 80,
              "EndOffset": 82,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 80,
              "Offset": 80,
              "EndOffset": 90,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 80,
              "Offset": 93,
              "EndOffset": 95,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 80,
              "Offset": 93,
              "EndOffset": 101,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.SourceText Delta.Slang.SourceText::From(System.Byte[],System.Int32,System.Text.Encoding,System.Boolean)": {
          "Lines": {
            "104": 0,
            "105": 0,
            "106": 0,
            "108": 0,
            "109": 0,
            "110": 0,
            "112": 0,
            "113": 0
          },
          "Branches": [
            {
              "Line": 105,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 105,
              "Offset": 7,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 22,
              "EndOffset": 24,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 22,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 35,
              "EndOffset": 37,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 35,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 108,
              "Offset": 52,
              "EndOffset": 54,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 108,
              "Offset": 52,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 109,
              "Offset": 69,
              "EndOffset": 71,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 109,
              "Offset": 69,
              "EndOffset": 79,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 109,
              "Offset": 82,
              "EndOffset": 84,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 109,
              "Offset": 82,
              "EndOffset": 90,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            }
          ]
        },
        "System.String Delta.Slang.SourceText::Decode(System.IO.Stream,System.Text.Encoding,System.Text.Encoding&)": {
          "Lines": {
            "124": 0,
            "125": 0,
            "126": 0,
            "128": 0,
            "130": 0,
            "131": 0,
            "132": 0,
            "133": 0,
            "134": 0,
            "142": 0,
            "143": 0,
            "144": 0,
            "145": 0,
            "146": 0,
            "148": 0
          },
          "Branches": [
            {
              "Line": 131,
              "Offset": 45,
              "EndOffset": 47,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 131,
              "Offset": 45,
              "EndOffset": 59,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.String Delta.Slang.SourceText::Decode(System.Byte[],System.Int32,System.Text.Encoding,System.Text.Encoding&)": {
          "Lines": {
            "160": 0,
            "161": 0,
            "162": 0,
            "164": 0,
            "165": 0,
            "166": 0
          },
          "Branches": [
            {
              "Line": 164,
              "Offset": 32,
              "EndOffset": 34,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 164,
              "Offset": 32,
              "EndOffset": 36,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang.Infrastructure\\SourceText.lines.cs": {
      "Delta.Slang.SourceText": {
        "Delta.Slang.SourceText/LineInfo Delta.Slang.SourceText::CreateLineInfo()": {
          "Lines": {
            "80": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.SourceText::EnumerateChars(System.Action`3<System.Int32,System.Char[],System.Int32>)": {
          "Lines": {
            "83": 0,
            "84": 0,
            "85": 0,
            "87": 0,
            "88": 0,
            "89": 0,
            "90": 0,
            "91": 0,
            "92": 0,
            "93": 0,
            "94": 0,
            "97": 0,
            "99": 0,
            "100": 0
          },
          "Branches": [
            {
              "Line": 88,
              "Offset": 70,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 88,
              "Offset": 70,
              "EndOffset": 72,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        },
        "System.Int32[] Delta.Slang.SourceText::ParseLineStarts()": {
          "Lines": {
            "103": 0,
            "105": 0,
            "107": 0,
            "108": 0,
            "110": 0,
            "115": 0,
            "116": 0,
            "117": 0,
            "118": 0,
            "119": 0,
            "120": 0,
            "121": 0,
            "122": 0,
            "123": 0,
            "124": 0,
            "125": 0,
            "126": 0,
            "127": 0,
            "128": 0,
            "129": 0,
            "130": 0,
            "131": 0,
            "132": 0,
            "133": 0,
            "134": 0,
            "135": 0,
            "136": 0,
            "137": 0,
            "138": 0,
            "139": 0,
            "140": 0,
            "141": 0,
            "142": 0,
            "143": 0,
            "144": 0,
            "145": 0,
            "146": 0,
            "147": 0,
            "148": 0,
            "149": 0,
            "150": 0,
            "151": 0,
            "152": 0,
            "153": 0,
            "154": 0,
            "155": 0,
            "156": 0,
            "158": 0,
            "159": 0
          },
          "Branches": [
            {
              "Line": 105,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 105,
              "Offset": 18,
              "EndOffset": 29,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 118,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 120,
              "Offset": 16,
              "EndOffset": 18,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 120,
              "Offset": 16,
              "EndOffset": 27,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 120,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 120,
              "Offset": 30,
              "EndOffset": 36,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 127,
              "Offset": 194,
              "EndOffset": 61,
              "Path": 1,
              "Ordinal": 19,
              "Hits": 0
            },
            {
              "Line": 136,
              "Offset": 85,
              "EndOffset": 89,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 140,
              "Offset": 98,
              "EndOffset": 100,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 142,
              "Offset": 103,
              "EndOffset": 105,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 142,
              "Offset": 103,
              "EndOffset": 114,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 142,
              "Offset": 119,
              "EndOffset": 121,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 142,
              "Offset": 119,
              "EndOffset": 127,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 144,
              "Offset": 138,
              "EndOffset": 140,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 144,
              "Offset": 138,
              "EndOffset": 150,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 0
            },
            {
              "Line": 140,
              "Offset": 98,
              "EndOffset": 153,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 150,
              "Offset": 166,
              "EndOffset": 170,
              "Path": 1,
              "Ordinal": 17,
              "Hits": 0
            },
            {
              "Line": 118,
              "Offset": 11,
              "EndOffset": 186,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 136,
              "Offset": 85,
              "EndOffset": 186,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 150,
              "Offset": 166,
              "EndOffset": 186,
              "Path": 0,
              "Ordinal": 16,
              "Hits": 0
            },
            {
              "Line": 127,
              "Offset": 194,
              "EndOffset": 199,
              "Path": 0,
              "Ordinal": 18,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.SourceText::.cctor()": {
          "Lines": {
            "78": 0
          },
          "Branches": []
        }
      },
      "Delta.Slang.SourceText/LineInfo": {
        "System.Int32 Delta.Slang.SourceText/LineInfo::get_Count()": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "Delta.Slang.Text.TextLine Delta.Slang.SourceText/LineInfo::get_Item(System.Int32)": {
          "Lines": {
            "26": 0,
            "27": 0,
            "28": 0,
            "30": 0,
            "31": 0,
            "32": 0,
            "34": 0,
            "35": 0,
            "36": 0
          },
          "Branches": [
            {
              "Line": 27,
              "Offset": 3,
              "EndOffset": 5,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 3,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 24,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 31,
              "Offset": 61,
              "EndOffset": 63,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 31,
              "Offset": 61,
              "EndOffset": 95,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Int32 Delta.Slang.SourceText/LineInfo::IndexOf(System.Int32)": {
          "Lines": {
            "40": 0,
            "41": 0,
            "42": 0,
            "47": 0,
            "48": 0,
            "49": 0,
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 0,
            "54": 0,
            "55": 0,
            "56": 0,
            "57": 0,
            "59": 0,
            "60": 0,
            "64": 0,
            "65": 0,
            "66": 0,
            "68": 0,
            "69": 0,
            "70": 0
          },
          "Branches": [
            {
              "Line": 41,
              "Offset": 3,
              "EndOffset": 5,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 41,
              "Offset": 3,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 41,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 41,
              "Offset": 24,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 48,
              "Offset": 60,
              "EndOffset": 62,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 51,
              "Offset": 140,
              "EndOffset": 86,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 103,
              "EndOffset": 105,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 103,
              "EndOffset": 123,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 51,
              "Offset": 140,
              "EndOffset": 142,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 48,
              "Offset": 60,
              "EndOffset": 143,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 65,
              "Offset": 164,
              "EndOffset": 166,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 65,
              "Offset": 164,
              "EndOffset": 171,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.Text.TextLine Delta.Slang.SourceText/LineInfo::GetLineFromPosition(System.Int32)": {
          "Lines": {
            "72": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.SourceText/LineInfo::.ctor(Delta.Slang.SourceText,System.Int32[])": {
          "Lines": {
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang.Infrastructure\\StringText.cs": {
      "Delta.Slang.StringText": {
        "System.String Delta.Slang.StringText::get_Source()": {
          "Lines": {
            "19": 41
          },
          "Branches": []
        },
        "System.Text.Encoding Delta.Slang.StringText::get_Encoding()": {
          "Lines": {
            "29": 0
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.StringText::get_Length()": {
          "Lines": {
            "34": 7
          },
          "Branches": []
        },
        "System.Char Delta.Slang.StringText::get_Item(System.Int32)": {
          "Lines": {
            "45": 0
          },
          "Branches": []
        },
        "System.String Delta.Slang.StringText::ToString(Delta.Slang.Text.TextSpan)": {
          "Lines": {
            "52": 16,
            "53": 16,
            "54": 0,
            "56": 16,
            "57": 0,
            "59": 16,
            "60": 16
          },
          "Branches": [
            {
              "Line": 53,
              "Offset": 23,
              "EndOffset": 25,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 23,
              "EndOffset": 36,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 16
            },
            {
              "Line": 56,
              "Offset": 43,
              "EndOffset": 45,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 4
            },
            {
              "Line": 56,
              "Offset": 43,
              "EndOffset": 62,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 12
            },
            {
              "Line": 56,
              "Offset": 65,
              "EndOffset": 67,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 56,
              "Offset": 65,
              "EndOffset": 76,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 16
            }
          ]
        },
        "System.Void Delta.Slang.StringText::CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)": {
          "Lines": {
            "63": 2
          },
          "Branches": []
        },
        "System.Void Delta.Slang.StringText::.ctor(System.String,System.Text.Encoding)": {
          "Lines": {
            "10": 3,
            "11": 3,
            "12": 3,
            "13": 3,
            "14": 3
          },
          "Branches": [
            {
              "Line": 12,
              "Offset": 11,
              "EndOffset": 13,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 12,
              "Offset": 11,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang.Infrastructure\\Text\\LinePosition.cs": {
      "Delta.Slang.Text.LinePosition": {
        "Delta.Slang.Text.LinePosition Delta.Slang.Text.LinePosition::get_Zero()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.LinePosition::get_Line()": {
          "Lines": {
            "38": 0
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.LinePosition::get_Column()": {
          "Lines": {
            "43": 0
          },
          "Branches": []
        },
        "System.String Delta.Slang.Text.LinePosition::ToString()": {
          "Lines": {
            "45": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.LinePosition::Equals(Delta.Slang.Text.LinePosition)": {
          "Lines": {
            "47": 0
          },
          "Branches": [
            {
              "Line": 47,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 47,
              "Offset": 13,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Delta.Slang.Text.LinePosition::Equals(System.Object)": {
          "Lines": {
            "48": 0
          },
          "Branches": [
            {
              "Line": 48,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 48,
              "Offset": 6,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Int32 Delta.Slang.Text.LinePosition::GetHashCode()": {
          "Lines": {
            "49": 0
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.LinePosition::CompareTo(Delta.Slang.Text.LinePosition)": {
          "Lines": {
            "52": 0,
            "53": 0,
            "54": 0,
            "55": 0
          },
          "Branches": [
            {
              "Line": 54,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 54,
              "Offset": 24,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Delta.Slang.Text.LinePosition::op_Equality(Delta.Slang.Text.LinePosition,Delta.Slang.Text.LinePosition)": {
          "Lines": {
            "57": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.LinePosition::op_Inequality(Delta.Slang.Text.LinePosition,Delta.Slang.Text.LinePosition)": {
          "Lines": {
            "58": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.LinePosition::op_GreaterThan(Delta.Slang.Text.LinePosition,Delta.Slang.Text.LinePosition)": {
          "Lines": {
            "59": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.LinePosition::op_GreaterThanOrEqual(Delta.Slang.Text.LinePosition,Delta.Slang.Text.LinePosition)": {
          "Lines": {
            "60": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.LinePosition::op_LessThan(Delta.Slang.Text.LinePosition,Delta.Slang.Text.LinePosition)": {
          "Lines": {
            "61": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.LinePosition::op_LessThanOrEqual(Delta.Slang.Text.LinePosition,Delta.Slang.Text.LinePosition)": {
          "Lines": {
            "62": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Text.LinePosition::.ctor(System.Int32,System.Int32)": {
          "Lines": {
            "27": 16,
            "28": 0,
            "29": 0,
            "31": 16,
            "32": 16,
            "33": 16
          },
          "Branches": [
            {
              "Line": 28,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 7,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 16
            },
            {
              "Line": 29,
              "Offset": 26,
              "EndOffset": 28,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 26,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 16
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang.Infrastructure\\Text\\LinePositionSpan.cs": {
      "Delta.Slang.Text.LinePositionSpan": {
        "Delta.Slang.Text.LinePosition Delta.Slang.Text.LinePositionSpan::get_Start()": {
          "Lines": {
            "29": 0
          },
          "Branches": []
        },
        "Delta.Slang.Text.LinePosition Delta.Slang.Text.LinePositionSpan::get_End()": {
          "Lines": {
            "34": 0
          },
          "Branches": []
        },
        "System.String Delta.Slang.Text.LinePositionSpan::ToString()": {
          "Lines": {
            "40": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.LinePositionSpan::Equals(Delta.Slang.Text.LinePositionSpan)": {
          "Lines": {
            "42": 0
          },
          "Branches": [
            {
              "Line": 42,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 21,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Delta.Slang.Text.LinePositionSpan::Equals(System.Object)": {
          "Lines": {
            "43": 0
          },
          "Branches": [
            {
              "Line": 43,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 6,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Int32 Delta.Slang.Text.LinePositionSpan::GetHashCode()": {
          "Lines": {
            "44": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.LinePositionSpan::op_Equality(Delta.Slang.Text.LinePositionSpan,Delta.Slang.Text.LinePositionSpan)": {
          "Lines": {
            "46": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.LinePositionSpan::op_Inequality(Delta.Slang.Text.LinePositionSpan,Delta.Slang.Text.LinePositionSpan)": {
          "Lines": {
            "47": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Text.LinePositionSpan::.ctor(Delta.Slang.Text.LinePosition,Delta.Slang.Text.LinePosition)": {
          "Lines": {
            "18": 0,
            "19": 0,
            "20": 0,
            "22": 0,
            "23": 0,
            "24": 0
          },
          "Branches": [
            {
              "Line": 19,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 10,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang.Infrastructure\\Text\\SlidingTextWindow.cs": {
      "Delta.Slang.Text.SlidingTextWindow": {
        "Delta.Slang.SourceText Delta.Slang.Text.SlidingTextWindow::get_Text()": {
          "Lines": {
            "43": 2
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.SlidingTextWindow::get_Position()": {
          "Lines": {
            "48": 4
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.SlidingTextWindow::get_Offset()": {
          "Lines": {
            "53": 243
          },
          "Branches": []
        },
        "System.Char[] Delta.Slang.Text.SlidingTextWindow::get_CharacterWindow()": {
          "Lines": {
            "58": 68
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.SlidingTextWindow::get_LexemeRelativeStart()": {
          "Lines": {
            "63": 57
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.SlidingTextWindow::get_CharacterWindowCount()": {
          "Lines": {
            "68": 72
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.SlidingTextWindow::get_LexemeStartPosition()": {
          "Lines": {
            "74": 18
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.SlidingTextWindow::get_Width()": {
          "Lines": {
            "79": 18
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.SlidingTextWindow::get_Basis()": {
          "Lines": {
            "81": 29
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.SlidingTextWindow::get_TextEnd()": {
          "Lines": {
            "82": 6
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Text.SlidingTextWindow::Start()": {
          "Lines": {
            "87": 16
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Text.SlidingTextWindow::Reset(System.Int32)": {
          "Lines": {
            "90": 0,
            "92": 0,
            "93": 0,
            "94": 0,
            "96": 0,
            "98": 0,
            "99": 0,
            "100": 0,
            "101": 0,
            "103": 0,
            "104": 0,
            "105": 0,
            "106": 0,
            "107": 0,
            "108": 0
          },
          "Branches": [
            {
              "Line": 93,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 93,
              "Offset": 12,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 93,
              "Offset": 31,
              "EndOffset": 33,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 93,
              "Offset": 31,
              "EndOffset": 43,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 100,
              "Offset": 87,
              "EndOffset": 89,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 100,
              "Offset": 87,
              "EndOffset": 110,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Delta.Slang.Text.SlidingTextWindow::IsReallyAtEnd()": {
          "Lines": {
            "113": 0
          },
          "Branches": [
            {
              "Line": 113,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 113,
              "Offset": 12,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Text.SlidingTextWindow::AdvanceChar()": {
          "Lines": {
            "119": 48
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Text.SlidingTextWindow::AdvanceChar(System.Int32)": {
          "Lines": {
            "125": 0
          },
          "Branches": []
        },
        "System.Char Delta.Slang.Text.SlidingTextWindow::NextChar()": {
          "Lines": {
            "135": 0,
            "136": 0,
            "137": 0,
            "138": 0,
            "139": 0,
            "140": 0
          },
          "Branches": [
            {
              "Line": 137,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 137,
              "Offset": 21,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Char Delta.Slang.Text.SlidingTextWindow::PeekChar()": {
          "Lines": {
            "150": 52,
            "151": 52,
            "152": 2,
            "155": 50,
            "156": 52
          },
          "Branches": [
            {
              "Line": 151,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 4
            },
            {
              "Line": 151,
              "Offset": 13,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 48
            },
            {
              "Line": 151,
              "Offset": 29,
              "EndOffset": 31,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 2
            },
            {
              "Line": 151,
              "Offset": 29,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 50
            }
          ]
        },
        "System.Char Delta.Slang.Text.SlidingTextWindow::PeekChar(System.Int32)": {
          "Lines": {
            "166": 0,
            "167": 0,
            "168": 0,
            "170": 0,
            "171": 0,
            "172": 0,
            "174": 0,
            "175": 0,
            "176": 0
          },
          "Branches": [
            {
              "Line": 170,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 170,
              "Offset": 28,
              "EndOffset": 38,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 170,
              "Offset": 36,
              "EndOffset": 38,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 170,
              "Offset": 36,
              "EndOffset": 53,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Void Delta.Slang.Text.SlidingTextWindow::Dispose()": {
          "Lines": {
            "179": 3,
            "180": 3,
            "181": 0,
            "183": 3,
            "184": 3,
            "185": 3
          },
          "Branches": [
            {
              "Line": 180,
              "Offset": 12,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            },
            {
              "Line": 180,
              "Offset": 12,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 3
            }
          ]
        },
        "System.Boolean Delta.Slang.Text.SlidingTextWindow::MoreChars()": {
          "Lines": {
            "188": 4,
            "189": 4,
            "190": 0,
            "192": 4,
            "193": 2,
            "197": 2,
            "198": 0,
            "199": 0,
            "200": 0,
            "201": 0,
            "202": 0,
            "203": 0,
            "204": 0,
            "206": 2,
            "207": 0,
            "209": 0,
            "210": 0,
            "211": 0,
            "212": 0,
            "213": 0,
            "215": 2,
            "216": 2,
            "217": 2,
            "218": 2,
            "219": 4
          },
          "Branches": [
            {
              "Line": 189,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 189,
              "Offset": 17,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 4
            },
            {
              "Line": 192,
              "Offset": 45,
              "EndOffset": 47,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 2
            },
            {
              "Line": 192,
              "Offset": 45,
              "EndOffset": 54,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            },
            {
              "Line": 197,
              "Offset": 74,
              "EndOffset": 76,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 197,
              "Offset": 74,
              "EndOffset": 184,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 2
            },
            {
              "Line": 206,
              "Offset": 207,
              "EndOffset": 209,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 206,
              "Offset": 207,
              "EndOffset": 263,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 2
            }
          ]
        },
        "System.Void Delta.Slang.Text.SlidingTextWindow::.ctor(Delta.Slang.SourceText)": {
          "Lines": {
            "32": 3,
            "33": 3,
            "34": 3,
            "35": 3,
            "36": 3,
            "37": 3,
            "39": 3,
            "40": 3,
            "41": 3
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Text.SlidingTextWindow::.cctor()": {
          "Lines": {
            "30": 4
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang.Infrastructure\\Text\\TextLine.cs": {
      "Delta.Slang.Text.TextLine": {
        "Delta.Slang.Text.TextLine Delta.Slang.Text.TextLine::FromSpan(Delta.Slang.SourceText,Delta.Slang.Text.TextSpan)": {
          "Lines": {
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "28": 0,
            "29": 0,
            "32": 0,
            "33": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "39": 0,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 0,
            "45": 0,
            "46": 0,
            "47": 0,
            "48": 0,
            "51": 0,
            "52": 0,
            "54": 0,
            "55": 0
          },
          "Branches": [
            {
              "Line": 24,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 24,
              "Offset": 7,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 43,
              "EndOffset": 45,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 33,
              "EndOffset": 62,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 43,
              "EndOffset": 62,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 65,
              "EndOffset": 67,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 25,
              "Offset": 65,
              "EndOffset": 78,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 92,
              "EndOffset": 94,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 92,
              "EndOffset": 109,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 117,
              "EndOffset": 119,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 117,
              "EndOffset": 144,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 149,
              "EndOffset": 151,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 32,
              "Offset": 149,
              "EndOffset": 167,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 36,
              "Offset": 189,
              "EndOffset": 191,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 36,
              "Offset": 189,
              "EndOffset": 212,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 0
            },
            {
              "Line": 39,
              "Offset": 213,
              "EndOffset": 215,
              "Path": 0,
              "Ordinal": 16,
              "Hits": 0
            },
            {
              "Line": 39,
              "Offset": 213,
              "EndOffset": 232,
              "Path": 1,
              "Ordinal": 17,
              "Hits": 0
            },
            {
              "Line": 39,
              "Offset": 237,
              "EndOffset": 239,
              "Path": 0,
              "Ordinal": 18,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 264,
              "EndOffset": 266,
              "Path": 0,
              "Ordinal": 20,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 264,
              "EndOffset": 294,
              "Path": 1,
              "Ordinal": 21,
              "Hits": 0
            },
            {
              "Line": 39,
              "Offset": 237,
              "EndOffset": 295,
              "Path": 1,
              "Ordinal": 19,
              "Hits": 0
            },
            {
              "Line": 51,
              "Offset": 308,
              "EndOffset": 310,
              "Path": 0,
              "Ordinal": 22,
              "Hits": 0
            },
            {
              "Line": 51,
              "Offset": 308,
              "EndOffset": 316,
              "Path": 1,
              "Ordinal": 23,
              "Hits": 0
            },
            {
              "Line": 51,
              "Offset": 321,
              "EndOffset": 323,
              "Path": 0,
              "Ordinal": 24,
              "Hits": 0
            },
            {
              "Line": 51,
              "Offset": 321,
              "EndOffset": 339,
              "Path": 1,
              "Ordinal": 25,
              "Hits": 0
            }
          ]
        },
        "Delta.Slang.SourceText Delta.Slang.Text.TextLine::get_Text()": {
          "Lines": {
            "60": 0
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.TextLine::get_Start()": {
          "Lines": {
            "65": 0
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.TextLine::get_EndIncludingLineBreak()": {
          "Lines": {
            "70": 0
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.TextLine::get_LineNumber()": {
          "Lines": {
            "75": 0
          },
          "Branches": [
            {
              "Line": 75,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 75,
              "Offset": 7,
              "EndOffset": 13,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Int32 Delta.Slang.Text.TextLine::get_End()": {
          "Lines": {
            "80": 0
          },
          "Branches": []
        },
        "Delta.Slang.Text.TextSpan Delta.Slang.Text.TextLine::get_Span()": {
          "Lines": {
            "85": 0
          },
          "Branches": []
        },
        "Delta.Slang.Text.TextSpan Delta.Slang.Text.TextLine::get_SpanIncludingLineBreak()": {
          "Lines": {
            "90": 0
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.TextLine::get_LineBreakLength()": {
          "Lines": {
            "92": 0,
            "93": 0
          },
          "Branches": [
            {
              "Line": 92,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 92,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 92,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 92,
              "Offset": 6,
              "EndOffset": 61,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 92,
              "Offset": 19,
              "EndOffset": 61,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 92,
              "Offset": 33,
              "EndOffset": 61,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        },
        "System.String Delta.Slang.Text.TextLine::ToString()": {
          "Lines": {
            "95": 0
          },
          "Branches": [
            {
              "Line": 95,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 95,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 95,
              "Offset": 6,
              "EndOffset": 40,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 95,
              "Offset": 19,
              "EndOffset": 40,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Delta.Slang.Text.TextLine::Equals(Delta.Slang.Text.TextLine)": {
          "Lines": {
            "97": 0
          },
          "Branches": [
            {
              "Line": 97,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 97,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 97,
              "Offset": 13,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 97,
              "Offset": 28,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Delta.Slang.Text.TextLine::Equals(System.Object)": {
          "Lines": {
            "98": 0
          },
          "Branches": [
            {
              "Line": 98,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 98,
              "Offset": 6,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Int32 Delta.Slang.Text.TextLine::GetHashCode()": {
          "Lines": {
            "99": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.TextLine::op_Equality(Delta.Slang.Text.TextLine,Delta.Slang.Text.TextLine)": {
          "Lines": {
            "101": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.TextLine::op_Inequality(Delta.Slang.Text.TextLine,Delta.Slang.Text.TextLine)": {
          "Lines": {
            "102": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Text.TextLine::.ctor(Delta.Slang.SourceText,System.Int32,System.Int32)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang.Infrastructure\\Text\\TextLineCollection.cs": {
      "Delta.Slang.Text.TextLineCollection": {
        "Delta.Slang.Text.TextLine Delta.Slang.Text.TextLineCollection::GetLineFromPosition(System.Int32)": {
          "Lines": {
            "72": 0
          },
          "Branches": []
        },
        "Delta.Slang.Text.LinePosition Delta.Slang.Text.TextLineCollection::GetLinePosition(System.Int32)": {
          "Lines": {
            "78": 0,
            "79": 0,
            "80": 0,
            "81": 0
          },
          "Branches": []
        },
        "Delta.Slang.Text.LinePositionSpan Delta.Slang.Text.TextLineCollection::GetLinePositionSpan(Delta.Slang.Text.TextSpan)": {
          "Lines": {
            "87": 0
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.TextLineCollection::GetPosition(Delta.Slang.Text.LinePosition)": {
          "Lines": {
            "92": 0
          },
          "Branches": []
        },
        "Delta.Slang.Text.TextSpan Delta.Slang.Text.TextLineCollection::GetTextSpan(Delta.Slang.Text.LinePositionSpan)": {
          "Lines": {
            "98": 0
          },
          "Branches": []
        },
        "Delta.Slang.Text.TextLineCollection/Enumerator Delta.Slang.Text.TextLineCollection::GetEnumerator()": {
          "Lines": {
            "100": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerator`1<Delta.Slang.Text.TextLine> Delta.Slang.Text.TextLineCollection::System.Collections.Generic.IEnumerable<Delta.Slang.Text.TextLine>.GetEnumerator()": {
          "Lines": {
            "102": 0
          },
          "Branches": []
        },
        "System.Collections.IEnumerator Delta.Slang.Text.TextLineCollection::System.Collections.IEnumerable.GetEnumerator()": {
          "Lines": {
            "104": 0
          },
          "Branches": []
        }
      },
      "Delta.Slang.Text.TextLineCollection/Enumerator": {
        "Delta.Slang.Text.TextLine Delta.Slang.Text.TextLineCollection/Enumerator::get_Current()": {
          "Lines": {
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0
          },
          "Branches": [
            {
              "Line": 28,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 10,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 24,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Delta.Slang.Text.TextLineCollection/Enumerator::MoveNext()": {
          "Lines": {
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "40": 0,
            "41": 0
          },
          "Branches": [
            {
              "Line": 34,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 34,
              "Offset": 24,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Object Delta.Slang.Text.TextLineCollection/Enumerator::System.Collections.IEnumerator.get_Current()": {
          "Lines": {
            "43": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.TextLineCollection/Enumerator::System.Collections.IEnumerator.MoveNext()": {
          "Lines": {
            "44": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Text.TextLineCollection/Enumerator::System.Collections.IEnumerator.Reset()": {
          "Lines": {
            "45": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Text.TextLineCollection/Enumerator::System.IDisposable.Dispose()": {
          "Lines": {
            "46": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.TextLineCollection/Enumerator::Equals(System.Object)": {
          "Lines": {
            "48": 0
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.TextLineCollection/Enumerator::GetHashCode()": {
          "Lines": {
            "49": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Text.TextLineCollection/Enumerator::.ctor(Delta.Slang.Text.TextLineCollection,System.Int32)": {
          "Lines": {
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang.Infrastructure\\Text\\TextSpan.cs": {
      "Delta.Slang.Text.TextSpan": {
        "Delta.Slang.Text.TextSpan Delta.Slang.Text.TextSpan::get_Zero()": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.TextSpan::get_Start()": {
          "Lines": {
            "27": 50
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.TextSpan::get_End()": {
          "Lines": {
            "32": 16
          },
          "Branches": []
        },
        "System.Int32 Delta.Slang.Text.TextSpan::get_Length()": {
          "Lines": {
            "37": 36
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.TextSpan::get_IsEmpty()": {
          "Lines": {
            "42": 0
          },
          "Branches": []
        },
        "Delta.Slang.Text.TextSpan Delta.Slang.Text.TextSpan::FromBounds(System.Int32,System.Int32)": {
          "Lines": {
            "53": 0,
            "54": 0,
            "55": 0,
            "56": 0,
            "57": 0
          },
          "Branches": [
            {
              "Line": 54,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 54,
              "Offset": 7,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 55,
              "Offset": 26,
              "EndOffset": 28,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 55,
              "Offset": 26,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Delta.Slang.Text.TextSpan::Contains(System.Int32)": {
          "Lines": {
            "69": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.TextSpan::Contains(Delta.Slang.Text.TextSpan)": {
          "Lines": {
            "80": 0
          },
          "Branches": [
            {
              "Line": 80,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 80,
              "Offset": 13,
              "EndOffset": 35,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Delta.Slang.Text.TextSpan::OverlapsWith(Delta.Slang.Text.TextSpan)": {
          "Lines": {
            "94": 0,
            "95": 0,
            "96": 0,
            "97": 0
          },
          "Branches": []
        },
        "System.Nullable`1<Delta.Slang.Text.TextSpan> Delta.Slang.Text.TextSpan::Overlap(Delta.Slang.Text.TextSpan)": {
          "Lines": {
            "109": 0,
            "110": 0,
            "111": 0,
            "112": 0
          },
          "Branches": [
            {
              "Line": 111,
              "Offset": 21,
              "EndOffset": 23,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 111,
              "Offset": 21,
              "EndOffset": 34,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Int32 Delta.Slang.Text.TextSpan::CompareTo(Delta.Slang.Text.TextSpan)": {
          "Lines": {
            "118": 0,
            "119": 0,
            "120": 0,
            "121": 0
          },
          "Branches": [
            {
              "Line": 120,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 120,
              "Offset": 17,
              "EndOffset": 35,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Delta.Slang.Text.TextSpan::Equals(System.Object)": {
          "Lines": {
            "123": 0
          },
          "Branches": [
            {
              "Line": 123,
              "Offset": 6,
              "EndOffset": 8,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 123,
              "Offset": 6,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Delta.Slang.Text.TextSpan::Equals(Delta.Slang.Text.TextSpan)": {
          "Lines": {
            "125": 0
          },
          "Branches": [
            {
              "Line": 125,
              "Offset": 13,
              "EndOffset": 15,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 125,
              "Offset": 13,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Int32 Delta.Slang.Text.TextSpan::GetHashCode()": {
          "Lines": {
            "127": 0
          },
          "Branches": []
        },
        "System.String Delta.Slang.Text.TextSpan::ToString()": {
          "Lines": {
            "132": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.TextSpan::op_Equality(Delta.Slang.Text.TextSpan,Delta.Slang.Text.TextSpan)": {
          "Lines": {
            "134": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.TextSpan::op_Inequality(Delta.Slang.Text.TextSpan,Delta.Slang.Text.TextSpan)": {
          "Lines": {
            "135": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.TextSpan::op_LessThan(Delta.Slang.Text.TextSpan,Delta.Slang.Text.TextSpan)": {
          "Lines": {
            "136": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.TextSpan::op_GreaterThan(Delta.Slang.Text.TextSpan,Delta.Slang.Text.TextSpan)": {
          "Lines": {
            "137": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.TextSpan::op_LessThanOrEqual(Delta.Slang.Text.TextSpan,Delta.Slang.Text.TextSpan)": {
          "Lines": {
            "138": 0
          },
          "Branches": []
        },
        "System.Boolean Delta.Slang.Text.TextSpan::op_GreaterThanOrEqual(Delta.Slang.Text.TextSpan,Delta.Slang.Text.TextSpan)": {
          "Lines": {
            "139": 0
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,System.Int32> Delta.Slang.Text.TextSpan::GetOverlap(Delta.Slang.Text.TextSpan)": {
          "Lines": {
            "142": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Text.TextSpan::.ctor(System.Int32,System.Int32)": {
          "Lines": {
            "16": 20,
            "17": 0,
            "18": 0,
            "20": 20,
            "21": 20,
            "22": 20
          },
          "Branches": [
            {
              "Line": 17,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 7,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 20
            },
            {
              "Line": 18,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 18,
              "Offset": 28,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 20
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang.Infrastructure\\Text\\TextUtils.cs": {
      "Delta.Slang.Text.TextUtils": {
        "System.Int32 Delta.Slang.Text.TextUtils::GetLengthOfLineBreak(Delta.Slang.SourceText,System.Int32)": {
          "Lines": {
            "12": 0,
            "13": 0,
            "19": 0,
            "20": 0,
            "22": 0,
            "23": 0
          },
          "Branches": [
            {
              "Line": 19,
              "Offset": 22,
              "EndOffset": 24,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 22,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Int32 Delta.Slang.Text.TextUtils::GetLengthOfLineBreakSlow(Delta.Slang.SourceText,System.Int32,System.Char)": {
          "Lines": {
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "33": 0,
            "34": 0,
            "35": 0
          },
          "Branches": [
            {
              "Line": 27,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 22,
              "EndOffset": 24,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 22,
              "EndOffset": 35,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 33,
              "EndOffset": 35,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 30,
              "Offset": 33,
              "EndOffset": 38,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 8,
              "EndOffset": 42,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 33,
              "Offset": 50,
              "EndOffset": 52,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 33,
              "Offset": 50,
              "EndOffset": 56,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            }
          ]
        },
        "System.ValueTuple`2<System.Int32,System.Int32> Delta.Slang.Text.TextUtils::GetStartAndLengthOfLineBreakEndingAt(Delta.Slang.SourceText,System.Int32)": {
          "Lines": {
            "43": 0,
            "44": 0,
            "46": 0,
            "47": 0,
            "49": 0,
            "50": 0,
            "52": 0,
            "55": 0,
            "56": 0,
            "58": 0,
            "59": 0
          },
          "Branches": [
            {
              "Line": 46,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 16,
              "EndOffset": 18,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 12,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 16,
              "EndOffset": 33,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 36,
              "EndOffset": 38,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 49,
              "Offset": 41,
              "EndOffset": 43,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 49,
              "Offset": 41,
              "EndOffset": 58,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 49,
              "Offset": 61,
              "EndOffset": 63,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 49,
              "Offset": 61,
              "EndOffset": 75,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 36,
              "EndOffset": 85,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 55,
              "Offset": 95,
              "EndOffset": 97,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 55,
              "Offset": 95,
              "EndOffset": 107,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Delta.Slang.Text.TextUtils::IsLineBreak(System.Char)": {
          "Lines": {
            "65": 0,
            "66": 0,
            "67": 0,
            "68": 0,
            "69": 0
          },
          "Branches": [
            {
              "Line": 65,
              "Offset": 3,
              "EndOffset": 5,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 65,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 65,
              "Offset": 16,
              "EndOffset": 18,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 65,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 65,
              "Offset": 3,
              "EndOffset": 36,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 65,
              "Offset": 8,
              "EndOffset": 36,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 65,
              "Offset": 16,
              "EndOffset": 36,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 65,
              "Offset": 24,
              "EndOffset": 36,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            }
          ]
        },
        "System.Boolean Delta.Slang.Text.TextUtils::IsBinary(System.String)": {
          "Lines": {
            "77": 0,
            "79": 0,
            "80": 0,
            "81": 0,
            "82": 0,
            "83": 0,
            "84": 0,
            "86": 0,
            "87": 0,
            "88": 0,
            "89": 0,
            "91": 0,
            "92": 0
          },
          "Branches": [
            {
              "Line": 79,
              "Offset": 66,
              "EndOffset": 5,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 81,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 83,
              "Offset": 35,
              "EndOffset": 37,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 83,
              "Offset": 35,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 81,
              "Offset": 18,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 79,
              "Offset": 66,
              "EndOffset": 68,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            }
          ]
        },
        "System.Text.Encoding Delta.Slang.Text.TextUtils::TryReadByteOrderMark(System.Byte[],System.Int32,System.Int32&)": {
          "Lines": {
            "102": 0,
            "103": 0,
            "104": 0,
            "106": 0,
            "107": 0,
            "108": 0,
            "111": 0,
            "112": 0,
            "113": 0,
            "114": 0,
            "116": 0,
            "118": 0,
            "119": 0,
            "120": 0,
            "121": 0,
            "123": 0,
            "125": 0,
            "126": 0,
            "127": 0,
            "128": 0,
            "130": 0,
            "132": 0,
            "134": 0,
            "135": 0,
            "136": 0
          },
          "Branches": [
            {
              "Line": 103,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 103,
              "Offset": 7,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 104,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 104,
              "Offset": 28,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 50,
              "EndOffset": 55,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 108,
              "Offset": 70,
              "EndOffset": 74,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 108,
              "Offset": 80,
              "EndOffset": 84,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 108,
              "Offset": 80,
              "EndOffset": 94,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 111,
              "Offset": 108,
              "EndOffset": 110,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 108,
              "Offset": 90,
              "EndOffset": 125,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 118,
              "Offset": 139,
              "EndOffset": 141,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 108,
              "Offset": 70,
              "EndOffset": 156,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 125,
              "Offset": 164,
              "EndOffset": 166,
              "Path": 0,
              "Ordinal": 16,
              "Hits": 0
            },
            {
              "Line": 125,
              "Offset": 168,
              "EndOffset": 170,
              "Path": 0,
              "Ordinal": 18,
              "Hits": 0
            },
            {
              "Line": 125,
              "Offset": 164,
              "EndOffset": 182,
              "Path": 1,
              "Ordinal": 17,
              "Hits": 0
            },
            {
              "Line": 125,
              "Offset": 168,
              "EndOffset": 182,
              "Path": 1,
              "Ordinal": 19,
              "Hits": 0
            },
            {
              "Line": 125,
              "Offset": 187,
              "EndOffset": 189,
              "Path": 0,
              "Ordinal": 20,
              "Hits": 0
            },
            {
              "Line": 108,
              "Offset": 90,
              "EndOffset": 204,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 111,
              "Offset": 108,
              "EndOffset": 204,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 118,
              "Offset": 139,
              "EndOffset": 204,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 0
            },
            {
              "Line": 125,
              "Offset": 187,
              "EndOffset": 204,
              "Path": 1,
              "Ordinal": 21,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 50,
              "EndOffset": 205,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            }
          ]
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang.Infrastructure\\Pooling\\ArrayBuilder.cs": {
      "Delta.Slang.Pooling.ArrayBuilder`1": {
        "System.Int32 Delta.Slang.Pooling.ArrayBuilder`1::get_Count()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "T Delta.Slang.Pooling.ArrayBuilder`1::get_Item(System.Int32)": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "Delta.Slang.Pooling.ArrayBuilder`1<T> Delta.Slang.Pooling.ArrayBuilder`1::GetInstance()": {
          "Lines": {
            "18": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Pooling.ArrayBuilder`1::Add(T)": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "T[] Delta.Slang.Pooling.ArrayBuilder`1::ToArrayAndFree()": {
          "Lines": {
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.IEnumerator`1<T> Delta.Slang.Pooling.ArrayBuilder`1::GetEnumerator()": {
          "Lines": {
            "29": 0
          },
          "Branches": []
        },
        "System.Collections.IEnumerator Delta.Slang.Pooling.ArrayBuilder`1::System.Collections.IEnumerable.GetEnumerator()": {
          "Lines": {
            "31": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Pooling.ArrayBuilder`1::.ctor(System.Int32)": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Pooling.ArrayBuilder`1::.ctor()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "D:\\WORK\\REPOSITORIES\\_odalet\\lang\\slang\\src\\Delta.Slang\\Delta.Slang.Infrastructure\\Pooling\\ObjectPool.cs": {
      "Delta.Slang.Pooling.ObjectPool`1": {
        "T Delta.Slang.Pooling.ObjectPool`1::Allocate()": {
          "Lines": {
            "49": 3,
            "54": 3,
            "55": 3,
            "56": 3,
            "58": 3,
            "59": 3
          },
          "Branches": [
            {
              "Line": 55,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 55,
              "Offset": 14,
              "EndOffset": 55,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            },
            {
              "Line": 55,
              "Offset": 58,
              "EndOffset": 60,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 3
            },
            {
              "Line": 55,
              "Offset": 58,
              "EndOffset": 67,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 3
            }
          ]
        },
        "T Delta.Slang.Pooling.ObjectPool`1::AllocateSlow()": {
          "Lines": {
            "62": 3,
            "63": 3,
            "64": 96,
            "65": 45,
            "69": 45,
            "70": 45,
            "71": 0,
            "72": 0,
            "73": 0,
            "74": 0,
            "75": 45,
            "77": 3,
            "78": 3
          },
          "Branches": [
            {
              "Line": 64,
              "Offset": 108,
              "EndOffset": 12,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 45
            },
            {
              "Line": 70,
              "Offset": 37,
              "EndOffset": 39,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 72,
              "Offset": 85,
              "EndOffset": 87,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 72,
              "Offset": 85,
              "EndOffset": 92,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 37,
              "EndOffset": 93,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 45
            },
            {
              "Line": 64,
              "Offset": 108,
              "EndOffset": 110,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 3
            }
          ]
        },
        "T Delta.Slang.Pooling.ObjectPool`1::CreateInstance()": {
          "Lines": {
            "81": 3,
            "82": 3,
            "83": 3,
            "84": 3
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Pooling.ObjectPool`1::Free(T)": {
          "Lines": {
            "95": 3,
            "96": 3,
            "97": 1,
            "101": 1,
            "102": 1,
            "103": 2,
            "104": 3
          },
          "Branches": [
            {
              "Line": 96,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 96,
              "Offset": 17,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            }
          ]
        },
        "System.Void Delta.Slang.Pooling.ObjectPool`1::FreeSlow(T)": {
          "Lines": {
            "107": 2,
            "108": 2,
            "109": 6,
            "110": 3,
            "111": 3,
            "112": 2,
            "116": 2,
            "117": 2,
            "119": 1,
            "120": 2
          },
          "Branches": [
            {
              "Line": 109,
              "Offset": 66,
              "EndOffset": 12,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 3
            },
            {
              "Line": 111,
              "Offset": 35,
              "EndOffset": 37,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 111,
              "Offset": 35,
              "EndOffset": 53,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            },
            {
              "Line": 109,
              "Offset": 66,
              "EndOffset": 68,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 2
            }
          ]
        },
        "System.Void Delta.Slang.Pooling.ObjectPool`1::.ctor(Delta.Slang.Pooling.ObjectPool`1/Factory<T>)": {
          "Lines": {
            "31": 3
          },
          "Branches": []
        },
        "System.Void Delta.Slang.Pooling.ObjectPool`1::.ctor(Delta.Slang.Pooling.ObjectPool`1/Factory<T>,System.Int32)": {
          "Lines": {
            "33": 1,
            "34": 1,
            "35": 1,
            "36": 1,
            "37": 1,
            "38": 1
          },
          "Branches": []
        }
      }
    }
  }
}